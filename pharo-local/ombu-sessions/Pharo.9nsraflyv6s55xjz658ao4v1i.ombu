OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:42:22.531606-03:00' ],		#prior : OmReference [ 'Pharo.3bd0zbyxx2axhznm2utzwtwag', '16' ],		#self : OmReference [ '1' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'OTFRobot',				#traitCompositionSource : '{}',				#definitionSource : 'OTFRobot subclass: #WalkingBrushRobot\r\tinstanceVariableNames: \'battery brush\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'BotArena-Robots\''			},			#name : #WalkingBrushRobot,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #battery,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #brush,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'WalkingBrushRobot class\r\tinstanceVariableNames: \'\''				},				#name : #'WalkingBrushRobot class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #WalkingBrushRobot,					#isMetaSide : false				},				#parent : @7,				#content : 'I am a robot and I am able to do simple things like move through a certain space, leaving marks of the paths I am doing. I have a battery that consumes itself according to my moves, and can be recharged at every moment.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #BotArena-Robots,			#package : #BotArena,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'OTFRobot',				#traitCompositionSource : '{}',				#definitionSource : 'OTFRobot subclass: #WalkingBrushRobot\r\tinstanceVariableNames: \'battery brush cantPintados cantNoPintados\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'BotArena-Robots\''			},			#name : #WalkingBrushRobot,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #battery,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #brush,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #cantPintados,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #cantNoPintados,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'WalkingBrushRobot class\r\tinstanceVariableNames: \'\''				},				#name : #'WalkingBrushRobot class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #WalkingBrushRobot,					#isMetaSide : false				},				#parent : @25,				#content : 'I am a robot and I am able to do simple things like move through a certain space, leaving marks of the paths I am doing. I have a battery that consumes itself according to my moves, and can be recharged at every moment.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #BotArena-Robots,			#package : #BotArena,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:43:17.380606-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tbrush := Brush forRobot: self.\r\tself headingFromDirection: 0.\r\t^ self',			#stamp : 'geruiz 9/4/2017 19:20',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tbrush := Brush forRobot: self.\r\tcantPintados:= 0.\r\tcantNoPintados:= 0.\r\tself headingFromDirection: 0.\r\t^ self',			#stamp : 'Alejo 10/6/2017 12:43',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:47:25.395606-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'federicobalaguer 9/6/2016 18:10',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\tself isBrushDown \r\t\tifTrue: [ cantPintados := cantPintados + aDistance ]\r\t\tifFalse:[cantNoPintados := cantNoPintados + aDistance].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:47',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:48:24.735606-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #drawRatio,			#protocol : #battery,			#sourceCode : 'drawRatio\r\t|ratio|\r\t',			#stamp : 'Alejo 10/6/2017 12:48',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:49:10.133606-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'OTFRobot',				#traitCompositionSource : '{}',				#definitionSource : 'OTFRobot subclass: #WalkingBrushRobot\r\tinstanceVariableNames: \'battery brush cantPintados cantNoPintados\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'BotArena-Robots\''			},			#name : #WalkingBrushRobot,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #battery,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #brush,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #cantPintados,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #cantNoPintados,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'WalkingBrushRobot class\r\tinstanceVariableNames: \'\''				},				#name : #'WalkingBrushRobot class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #WalkingBrushRobot,					#isMetaSide : false				},				#parent : @7,				#content : 'I am a robot and I am able to do simple things like move through a certain space, leaving marks of the paths I am doing. I have a battery that consumes itself according to my moves, and can be recharged at every moment.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #BotArena-Robots,			#package : #BotArena,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'OTFRobot',				#traitCompositionSource : '{}',				#definitionSource : 'OTFRobot subclass: #WalkingBrushRobot\r\tinstanceVariableNames: \'battery brush distanciaPintada distancia\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'BotArena-Robots\''			},			#name : #WalkingBrushRobot,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #battery,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #brush,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #distanciaPintada,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #WalkingBrushRobot,						#isMetaSide : false					},					#name : #distancia,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'WalkingBrushRobot class\r\tinstanceVariableNames: \'\''				},				#name : #'WalkingBrushRobot class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #WalkingBrushRobot,					#isMetaSide : false				},				#parent : @29,				#content : 'I am a robot and I am able to do simple things like move through a certain space, leaving marks of the paths I am doing. I have a battery that consumes itself according to my moves, and can be recharged at every moment.',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #BotArena-Robots,			#package : #BotArena,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:50:07.933606-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\tself isBrushDown \r\t\tifTrue: [ cantPintados := cantPintados + aDistance ]\r\t\tifFalse:[cantNoPintados := cantNoPintados + aDistance].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:47',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\tdistancia := distancia + aDistance.\r\tself isBrushDown \r\t\tifTrue: [ distanciaPintada  := distanciaPintada  + aDistance ].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:50',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:50:34.110606-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tbrush := Brush forRobot: self.\r\tcantPintados:= 0.\r\tcantNoPintados:= 0.\r\tself headingFromDirection: 0.\r\t^ self',			#stamp : 'Alejo 10/6/2017 12:43',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize-release,			#sourceCode : 'initialize\r\tsuper initialize.\r\tbrush := Brush forRobot: self.\r\tdistanciaPintada := 0.\r\tdistancia := 0.\r\tself headingFromDirection: 0.\r\t^ self',			#stamp : 'Alejo 10/6/2017 12:50',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:51:53.428606-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #drawRatio,			#protocol : #battery,			#sourceCode : 'drawRatio\r\t|ratio|\r\t',			#stamp : 'Alejo 10/6/2017 12:48',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #drawRatio,			#protocol : #battery,			#sourceCode : 'drawRatio\r\t|ratio|\r\tratio := distanciaPintada // distancia.\r\t^ratio.\r\t',			#stamp : 'Alejo 10/6/2017 12:51',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:52:33.774606-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'trace:',			#protocol : #positioning,			#sourceCode : 'trace: unaDistancia\r\tself brushDown.\r\tself move: unaDistancia - 1.\r\tself brushUp.\r\t\r\t',			#stamp : 'Alejo 9/15/2017 13:48',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'trace:',			#protocol : #positioning,			#sourceCode : 'trace: unaDistancia\r\tdistanciaPintada := distanciaPintada + unaDistancia.\r\tself brushDown.\r\tself move: unaDistancia - 1.\r\tself brushUp.\r\t\r\t',			#stamp : 'Alejo 10/6/2017 12:52',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:52:59.198606-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'trace:',			#protocol : #positioning,			#sourceCode : 'trace: unaDistancia\r\tdistanciaPintada := distanciaPintada + unaDistancia.\r\tself brushDown.\r\tself move: unaDistancia - 1.\r\tself brushUp.\r\t\r\t',			#stamp : 'Alejo 10/6/2017 12:52',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'trace:',			#protocol : #positioning,			#sourceCode : 'trace: unaDistancia\r\tself brushDown.\r\tself move: unaDistancia - 1.\r\tself brushUp.\r\t\r\t',			#stamp : 'Alejo 10/6/2017 12:52',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:57:15.144606-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\tdistancia := distancia + aDistance.\r\tself isBrushDown \r\t\tifTrue: [ distanciaPintada  := distanciaPintada  + aDistance ].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:50',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self isBrushDown and: [self battery canConsume: aDistance])\r\t\tifTrue: [ distanciaPintada  := distanciaPintada  + aDistance ].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance. distancia := distancia + aDistance. ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:57',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T12:57:57.587606-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self isBrushDown and: [self battery canConsume: aDistance])\r\t\tifTrue: [ distanciaPintada  := distanciaPintada  + aDistance ].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance. distancia := distancia + aDistance. ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:57',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self isBrushDown and: [self battery canConsume: aDistance])\r\t\tifTrue: [ distanciaPintada  := distanciaPintada  + aDistance ].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance. \r\t\t\tdistancia := distancia + aDistance. ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:57',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T13:05:32.622606-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self isBrushDown and: [self battery canConsume: aDistance])\r\t\tifTrue: [ distanciaPintada  := distanciaPintada  + aDistance ].\r\t\t \r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance. \r\t\t\tdistancia := distancia + aDistance. ]\r\t\tifFalse: [ ChargeBatteryError signal ]',			#stamp : 'Alejo 10/6/2017 12:58',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal. self isBrushDown ifTrue: [ distanciaPintada := distanciaPintada + aDistance ] ]',			#stamp : 'Alejo 10/6/2017 13:05',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T13:07:30.095606-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance ]\r\t\tifFalse: [ ChargeBatteryError signal. self isBrushDown ifTrue: [ distanciaPintada := distanciaPintada + aDistance ] ]',			#stamp : 'Alejo 10/6/2017 13:05',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: [ distanciaPintada := distanciaPintada + aDistance ] ]\r\t\tifFalse: [ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:07',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T13:09:41.688606-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: [ self setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: [ distanciaPintada := distanciaPintada + aDistance ] ]\r\t\tifFalse: [ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:07',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: [ distanciaPintada := distanciaPintada + aDistance ]\r\t\t]\r\t\tifFalse: [ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:09',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T13:10:13.409606-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: [ distanciaPintada := distanciaPintada + aDistance ]\r\t\t]\r\t\tifFalse: [ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:09',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: \r\t\t\t[ \r\t\t\t\tdistanciaPintada := distanciaPintada + aDistance ]\r\t\t\t]\r\t\tifFalse: [ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:10',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T13:10:28.863606-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: \r\t\t\t[ \r\t\t\t\tdistanciaPintada := distanciaPintada + aDistance ]\r\t\t\t]\r\t\tifFalse: [ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:10',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: \r\t\t\t[ \r\t\t\t\tdistanciaPintada := distanciaPintada + aDistance ]\r\t\t\t]\r\t\tifFalse: \r\t\t[ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:10',			#package : #BotArena		}	}}OmEntry {	#tags : {		#author : 'Alejo',		#time : DateAndTime [ '2017-10-06T13:11:47.552606-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: \r\t\t\t[ \r\t\t\t\tdistanciaPintada := distanciaPintada + aDistance ]\r\t\t\t]\r\t\tifFalse: \r\t\t[ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:10',			#package : #BotArena		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WalkingBrushRobot,				#isMetaSide : false			},			#name : #'move:',			#protocol : #positioning,			#sourceCode : 'move: aDistance\r\t(self battery canConsume: aDistance)\r\t\tifTrue: \r\t\t[ \r\t\t\tself setStepsToGo: aDistance.\r\t\t\tdistancia := distancia + aDistance.\r\t\t\tself isBrushDown \r\t\t\tifTrue: \r\t\t\t[distanciaPintada := distanciaPintada + aDistance ]\r\t\t\t]\r\t\tifFalse: \r\t\t[ ChargeBatteryError signal. ]',			#stamp : 'Alejo 10/6/2017 13:11',			#package : #BotArena		}	}}