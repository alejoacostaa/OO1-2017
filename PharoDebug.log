THERE_BE_DRAGONS_HERE
#robotech was sent to nil
15 September 2017 1:13:26.979556 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #robotech
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	robotech
		exception: 	MessageNotUnderstood: receiver of "robotech" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#battery was sent to nil
15 September 2017 1:14:35.796556 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #battery
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	battery
		exception: 	MessageNotUnderstood: receiver of "battery" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'inspect battery.'
		itsSelection: 	a Text for 'inspect battery.'
		itsSelectionString: 	'inspect battery.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ inspect battery
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(671742464)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(671742464)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(655579136)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(671742464)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1065@28)
		owner: 	a TransformWithLayoutMorph(656743936)
		submorphs: 	an Array(a RubPrimarySelectionMorph(321590272) a RubCursor(759715840...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (681707008) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(904736768)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(759715840)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(627110400))
		getMenuPolicy: 	a RubEditingArea(671742464)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(655579136)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Fraction did not understand #timesRepeat:
15 September 2017 1:50:16.754556 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

Fraction(Object)>>doesNotUnderstand: #timesRepeat:
	Receiver: (11/2)
	Arguments and temporary variables: 
		aMessage: 	timesRepeat: [ self trace: 1.
self move: 2 ]
		exception: 	MessageNotUnderstood: Fraction>>timesRepeat:
		resumeValue: 	nil
	Receiver's instance variables: 
		numerator: 	11
		denominator: 	2


WalkingBrushRobot>>dash:
	Receiver: Robot at (25@25), direction 0
	Arguments and temporary variables: 
		unaDistancia: 	11
	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	a SynchronizedQueue
		battery: 	a Battery
		brush: 	a Brush


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'robotech dash:11.'
		itsSelection: 	a Text for 'robotech dash:11.'
		itsSelectionString: 	'robotech dash:11.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ robotech dash: 11
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(644251648)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(644251648)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(483140096)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(644251648)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1065@28)
		owner: 	a TransformWithLayoutMorph(327583744)
		submorphs: 	an Array(a RubPrimarySelectionMorph(46893056) a RubCursor(155503104)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (580515840) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(627267072)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color white
		margins: 	(6@6) corner: (6@6)
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(155503104)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(713123328))
		getMenuPolicy: 	a RubEditingArea(644251648)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(483140096)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@837)
		canvas: 	a FormCanvas on: DisplayScreen(1600x837x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(517069824))(a SearchMorp...etc...
		lastStepTime: 	3259239
		lastStepMessage: 	nil
		lastCycleTime: 	3259261
		alarms: 	a Heap()
		lastAlarmTime: 	3259239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@837)
		owner: 	nil
		submorphs: 	an Array(a GLMSystemWindow(296897024) a BGSArenaWindow(127324672) a ...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@837)
		canvas: 	a FormCanvas on: DisplayScreen(1600x837x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(517069824))(a SearchMorp...etc...
		lastStepTime: 	3259239
		lastStepMessage: 	nil
		lastCycleTime: 	3259261
		alarms: 	a Heap()
		lastAlarmTime: 	3259239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@837)
		canvas: 	a FormCanvas on: DisplayScreen(1600x837x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(517069824))(a SearchMorp...etc...
		lastStepTime: 	3259239
		lastStepMessage: 	nil
		lastCycleTime: 	3259261
		alarms: 	a Heap()
		lastAlarmTime: 	3259239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldState>>doOneSubCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(58125568))
		viewBox: 	(0@0) corner: (1600@837)
		canvas: 	a FormCanvas on: DisplayScreen(1600x837x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(517069824))(a SearchMorp...etc...
		lastStepTime: 	3259239
		lastStepMessage: 	nil
		lastCycleTime: 	3259261
		alarms: 	a Heap()
		lastAlarmTime: 	3259239
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(58125568)


WorldMorph>>doOneSubCycle
	Receiver: a WorldMorph(562956288) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1600@837)
		owner: 	nil
		submorphs: 	an Array(a GLMSystemWindow(296897024) a BGSArenaWindow(127324672) a ...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)
		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		session: 	nil


MenuMorph>>invokeModalAt:in:allowKeyboard:
	Receiver: a MenuMorph(917990912)
	Arguments and temporary variables: 
		aPoint: 	(650@410.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(644251648)
	Receiver's instance variables: 
		bounds: 	(648.0@402.0) corner: (876.0@621.0)
		owner: 	nil
		submorphs: 	an Array(a ToggleMenuItemMorph(192898048)'Do it and go' a ToggleMenu...etc...
		fullBounds: 	(648.0@402.0) corner: (876.0@621.0)
		color: 	Color veryDarkGray
		extension: 	a MorphExtension (702317568) [other:  (basicColor -> Color veryDarkG...etc...
		borderWidth: 	1
		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)
		defaultTarget: 	nil
		selectedItem: 	a ToggleMenuItemMorph(413615104)'Do it'
		stayUp: 	false
		popUpOwner: 	nil
		activeSubMenu: 	nil
		titleMorph: 	nil


MenuMorph>>invokeModal:
	Receiver: a MenuMorph(917990912)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of WalkingBrushRobot class did not understand #north
29 September 2017 1:08:35.669418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

WalkingBrushRobot class(Object)>>doesNotUnderstand: #north
	Receiver: WalkingBrushRobot
	Arguments and temporary variables: 
		aMessage: 	north
		exception: 	MessageNotUnderstood: WalkingBrushRobot class>>north
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	OTFRobot
		methodDict: 	a MethodDictionary(#battery->WalkingBrushRobot>>#battery #battery:-...etc...
		format: 	65542
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{WalkingBrushWirelessRobot}
		name: 	#WalkingBrushRobot
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'BotArena-Robots'
		traitComposition: 	{}
		localSelectors: 	nil


WalkingBrushRobot class>>DoIt
	Receiver: WalkingBrushRobot
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	OTFRobot
		methodDict: 	a MethodDictionary(#battery->WalkingBrushRobot>>#battery #battery:-...etc...
		format: 	65542
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{WalkingBrushWirelessRobot}
		name: 	#WalkingBrushRobot
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'BotArena-Robots'
		traitComposition: 	{}
		localSelectors: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
		selectedSource: 	'self north.'
		itsSelection: 	a Text for 'self north.'
		itsSelectionString: 	'self north.'
	Receiver's instance variables: 
		ast: 	DoIt
	^ self north
		source: 	a ReadStream
		context: 	nil
		receiver: 	WalkingBrushRobot
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:08:39.423418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary()
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(117326080)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:08:44.019418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary()
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(337245952)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (978645248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(337245952)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (978645248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(337245952)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (978645248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(337245952)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (978645248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(753579776)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(88391936) a GLMPagerBarBr...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (346640640) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(939841280)
		scrollBrick: 	a GLMPagerScrollBrick(88391936)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=217790208 title=nil pane=a GLMPane(14147840 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=217790208 title=nil pane=a GLMPane(14147840 root))...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=217790208 title=nil pane=a GLMPane(14147840 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=217790208 title=nil pane=a GLMPane(14147840 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(14147840 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wanTHERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:09:20.332418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (6@27), direction 270 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	61
		stepDelay: 	a Delay(100 msecs; 62 msecs remaining)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(365531392)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (609130240)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(365531392)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (609130240)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(365531392)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (609130240)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(365531392)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (609130240)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(597393664)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(280753920) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (909256448) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(379482368)
		scrollBrick: 	a GLMPagerScrollBrick(280753920)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(650273024 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(485970176 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1007466240 title=nil pane=a GLMPane(650273024 root...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=590067456 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (Robot at (6@27), direct...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(650273024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1007466240 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(690849536)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(843069184)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(690849536)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (Robot at (6@27), direct...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(650273024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1007466240 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (Robot at (6@27), direct...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (6@27), direction 270
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(650273024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1007466240 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (Robot at (6@27), direct...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (6@27), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(650273024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1007466240 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=590067456 title=Inspector on a WalkingBrushRobot (Robot at (6@27), direct...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (6@27), direction 270
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger:THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:09:29.793418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (6@27), direction 270 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	61
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(587613952)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (824135936)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(587613952)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (824135936)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(587613952)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (824135936)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(587613952)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (824135936)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(1056888576)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (997994752)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(1056888576)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (997994752)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(1056888576)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (997994752)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=470226688 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=937600768 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=470226688 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=470226688 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=470226688 title=nil pane=a GLMPane(360...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=470226688 title=nil pane=a GLMPane(360120576 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(360120576 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=21098752 title=nil pane=a GLMPan...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=937600768 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=470226688 title=nil pane=a GLMPane(3...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=470226688 title=nil pane=a GLMPane(3601...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(177129216)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(360120576 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(177129216)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(360120576 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(177129216)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(360120576 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(360120576 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(360120576 stack)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:10:32.533418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950277888 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(950277888 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=967812864 title=nil pane=a GLMPa...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9502...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(950277888 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(950277888 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		container: 	a GLMPanelMorph(388228864)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 ro...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicBrowserRenderer
		methodDict: 	a MethodDictionary(#margin->GLMMorphicTabulatorRenderer>>#margin #r...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabulatorRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabulator:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
	Receiver's instance variables: 
		window: 	nil


GLMTabulator>>renderGlamorouslyOn:
	Receiver: a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(265535744 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection(GLMTransmission (origins=an OrderedCollecti...etc...
		panes: 	an OrderedCollection(a GLMPane(950277888 stack) a GLMPane(635228416 code...etc...
		initialExtent: 	nil
		watcherPane: 	nil
		cell: 	a GLMCustomColumn


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 ro...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArrayTHERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:10:45.946418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: hasStepsToGo
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#hasStepsToGo
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950277888 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(950277888 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=967812864 title=nil pane=a GLMPa...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9502...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(950277888 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(950277888 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		container: 	a GLMPanelMorph(388228864)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 ro...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicBrowserRenderer
		methodDict: 	a MethodDictionary(#margin->GLMMorphicTabulatorRenderer>>#margin #r...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabulatorRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabulator:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
	Receiver's instance variables: 
		window: 	nil


GLMTabulator>>renderGlamorouslyOn:
	Receiver: a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(265535744 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection(GLMTransmission (origins=an OrderedCollecti...etc...
		panes: 	an OrderedCollection(a GLMPane(950277888 stack) a GLMPane(635228416 code...etc...
		initialExtent: 	nil
		watcherPane: 	nil
		cell: 	a GLMCustomColumn


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root...etc...
	Receiver's instance variables: 
		window: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMTabSelectorBrick(GLMFoundationBrick)>>changed
GLMTabSelectorBrick(Morph)>>color:
GLMTabSelectorBrick(Morph)>>beTransparent
GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
GLMTabSelectorBrick class(Behavior)>>new
LazyTabGroupMorph>>newTabSelectorMorph
LazyTabGroupMorph(TabGroupMorph)>>initialize
LazyTabGroupMorph>>initialize
LazyTabGroupMorph class(Behavior)>>new
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GLMCompositePresentation>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicPaneRenderer>>renderContainerFor:
GLMMorphicPaneRenderer>>render:
GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPane:
GLMPane>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
GLMMorphicTabulatorRenderer>>render:
GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabulator:
GLMTabulator>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTGenericStackDebugger(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTGenericStackDebugger(GLMCompositePresentation)>>openWith:
GTGenericStackDebugger(GLMCompositePresentation)>>open
GTGenericStackDebugger(GTMoldableDebugger)>>open
GTGenericStackDebugger>>openWithFullView
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:andNotification:
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:
RubSmalltalkEditor>>debug:receiver:in:
RubSmalltalkEditor>>debug:
RubSmalltalkEditor>>debugHighlight
[ textMorph textArea editor debugHighlight.
textMorph shoutStyler style: textMorph text ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>debugHighlightedText
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:10:49.921418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: hasStepsToGo
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#hasStepsToGo
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: hasStepsToGo
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#hasStepsToGo
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950277888 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(950277888 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=967812864 title=nil pane=a GLMPa...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9502...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(950277888 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(950277888 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		container: 	a GLMPanelMorph(388228864)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 ro...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicBrowserRenderer
		methodDict: 	a MethodDictionary(#margin->GLMMorphicTabulatorRenderer>>#margin #r...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabulatorRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabulator:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
	Receiver's instance variables: 
		window: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMTabSelectorBrick(GLMFoundationBrick)>>changed
GLMTabSelectorBrick(Morph)>>color:
GLMTabSelectorBrick(Morph)>>beTransparent
GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
GLMTabSelectorBrick class(Behavior)>>new
LazyTabGroupMorph>>newTabSelectorMorph
LazyTabGroupMorph(TabGroupMorph)>>initialize
LazyTabGroupMorph>>initialize
LazyTabGroupMorph class(Behavior)>>new
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GLMCompositePresentation>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicPaneRenderer>>renderContainerFor:
GLMMorphicPaneRenderer>>render:
GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPane:
GLMPane>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
GLMMorphicTabulatorRenderer>>render:
GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabulator:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GLMTabulator>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTGenericStackDebugger(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTGenericStackDebugger(GLMCompositePresentation)>>openWith:
GTGenericStackDebugger(GLMCompositePresentation)>>open
GTGenericStackDebugger(GTMoldableDebugger)>>open
GTGenericStackDebugger>>openWithFullView
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:andNotification:
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:
RubSmalltalkEditor>>debug:receiver:in:
RubSmalltalkEditor>>debug:
RubSmalltalkEditor>>debugHighlight
[ textMorph textArea editor debugHighlight.
textMorph shoutStyler style: textMorph text ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>debugHighlightedText
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:10:50.708418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: hasStepsToGo
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#hasStepsToGo
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: hasStepsToGo
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#hasStepsToGo
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
	Receiver's instance variables: 
nil

Message>>sentTo:
	Receiver: hasStepsToGo
	Arguments and temporary variables: 
		receiver: 	nil
	Receiver's instance variables: 
		selector: 	#hasStepsToGo
		args: 	#()
		lookupClass: 	UndefinedObject


UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(234303744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (531756800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(483336448)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (578782976)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=578294016 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(950277888 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(950277888 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=967812864 title=nil pane=a GLMPa...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=484573440 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane(9502...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(213442816)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(950277888 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(950277888 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=578294016 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(950277888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(265535744 root)
		aMorph: 	a GLMPanelMorph(388228864)
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=47994624 title=nil pane=a GLMPane(265535744 root))
		container: 	a GLMPanelMorph(388228864)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
Message>>sentTo:
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMTabSelectorBrick(GLMFoundationBrick)>>changed
GLMTabSelectorBrick(Morph)>>color:
GLMTabSelectorBrick(Morph)>>beTransparent
GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
GLMTabSelectorBrick class(Behavior)>>new
LazyTabGroupMorph>>newTabSelectorMorph
LazyTabGroupMorph(TabGroupMorph)>>initialize
LazyTabGroupMorph>>initialize
LazyTabGroupMorph class(Behavior)>>new
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GLMCompositePresentation>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicPaneRenderer>>renderContainerFor:
GLMMorphicPaneRenderer>>render:
GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPane:
GLMPane>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
GLMMorphicTabulatorRenderer>>render:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabulator:
GLMTabulator>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTGenericStackDebugger(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTGenericStackDebugger(GLMCompositePresentation)>>openWith:
GTGenericStackDebugger(GLMCompositePresentation)>>open
GTGenericStackDebugger(GTMoldableDebugger)>>open
GTGenericStackDebugger>>openWithFullView
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:andNotification:
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:
RubSmalltalkEditor>>debug:receiver:in:
RubSmalltalkEditor>>debug:
RubSmalltalkEditor>>debugHighlight
[ textMorph textArea editor debugHighlight.
textMorph shoutStyler style: textMorph text ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>debugHighlightedText
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:10:51.901418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(916600576)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (331931904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(916600576)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (331931904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(916600576)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (331931904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(916600576)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (331931904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(690734848)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (957731072)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(690734848)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (957731072)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(690734848)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (957731072)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=613672704 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=122443520 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane(618...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane(618905856 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(618905856 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=706916608 title=nil pane=a GLMPa...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=613672704 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane(6...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane(6189...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(232261376)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(618905856 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(232261376)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(618905856 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(232261376)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(618905856 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(618905856 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(618905856 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=122443520 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(618905856 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(618905856 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(334796544 root)
		aMorph: 	a GLMPanelMorph(518357248)
		aBrowser: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))...etc...
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(334796544 root)
		aMorph: 	a GLMPanelMorph(518357248)
		aBrowser: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))...etc...
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))...etc...
		container: 	a GLMPanelMorph(518357248)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 r...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicBrowserRenderer
		methodDict: 	a MethodDictionary(#margin->GLMMorphicTabulatorRenderer>>#margin #r...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabulatorRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabulator:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabulator>>renderGlamorouslyOn:
	Receiver: a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(334796544 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection(GLMTransmission (origins=an OrderedCollecti...etc...
		panes: 	an OrderedCollection(a GLMPane(618905856 stack) a GLMPane(552777472 code...etc...
		initialExtent: 	nil
		watcherPane: 	nil
		cell: 	a GLMCustomColumn


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 roo...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 root))...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=565416192 title=nil pane=a GLMPane(334796544 r...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMTabSelectorBrick(GLMFoundationBrick)>>changed
GLMTabSelectorBrick(Morph)>>color:
GLMTabSelectorBrick(Morph)>>beTransparent
GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
GLMTabSelectorBrick class(Behavior)>>new
LazyTabGroupMorph>>newTabSelectorMorph
LazyTabGroupMorph(TabGroupMorph)>>initialize
LazyTabGroupMorph>>initialize
LazyTabGroupMorph class(Behavior)>>new
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GLMCompositePresentation>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicPaneRenderer>>renderContainerFor:
GLMMorphicPaneRenderer>>render:
GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPane:
GLMPane>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
GLMMorphicTabulatorRenderer>>render:
GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabulator:
GLMTabulator>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTGenericStackDebugger(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTGenericStackDebugger(GLMCompositePresentation)>>openWith:
GTGenericStackDebugger(GLMCompositePresentation)>>open
GTGenericStackDebugger(GTMoldableDebugger)>>open
GTSpecPreDebugWindow>>openFullDebugger
GTSpecPreDebugWindow(Object)>>perform:withEnoughArguments:
PreDebugAction(MessageSendDebugAction)>>executeAction
PreDebugAction(DebugAction)>>execute
[ aDebugAction execute ] in SpecDebugActionButton>>update
SpecDebugActionButton(ButtonModel)>>performAction
MorphicButtonAdapter>>action
PluggableButtonMorph>>performAction:
[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
Array(SequenceableCollection)>>do:
PluggableButtonMorph>>mouseUp:
PluggableButtonMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
PluggableButtonMorph(Morph)>>handleEvent:
PluggableButtonMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:10:53.208418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(749278976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (287637760)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(749278976)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (287637760)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(749278976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (287637760)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(749278976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (287637760)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(342140672)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (470806784)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(342140672)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (470806784)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(342140672)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (470806784)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=80791296 titl...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=446117632 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane(103...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane(1033625856 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1033625856 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=649646336 title=nil pane=a GLMPa...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=80791296 titl...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane(1...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane(1033...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(513337088)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(1033625856 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(513337088)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(1033625856 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(513337088)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(1033625856 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(1033625856 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(1033625856 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=446117632 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(1033625856 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(1033625856 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(206010112 root)
		aMorph: 	a GLMPanelMorph(668311808)
		aBrowser: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))...etc...
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(206010112 root)
		aMorph: 	a GLMPanelMorph(668311808)
		aBrowser: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))...etc...
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))...etc...
		container: 	a GLMPanelMorph(668311808)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 r...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicBrowserRenderer
		methodDict: 	a MethodDictionary(#margin->GLMMorphicTabulatorRenderer>>#margin #r...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabulatorRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabulator:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabulator>>renderGlamorouslyOn:
	Receiver: a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(206010112 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection(GLMTransmission (origins=an OrderedCollecti...etc...
		panes: 	an OrderedCollection(a GLMPane(1033625856 stack) a GLMPane(17405696 code...etc...
		initialExtent: 	nil
		watcherPane: 	nil
		cell: 	a GLMCustomColumn


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 roo...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 root))...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=140882176 title=nil pane=a GLMPane(206010112 r...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMTabSelectorBrick(GLMFoundationBrick)>>changed
GLMTabSelectorBrick(Morph)>>color:
GLMTabSelectorBrick(Morph)>>beTransparent
GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
GLMTabSelectorBrick class(Behavior)>>new
LazyTabGroupMorph>>newTabSelectorMorph
LazyTabGroupMorph(TabGroupMorph)>>initialize
LazyTabGroupMorph>>initialize
LazyTabGroupMorph class(Behavior)>>new
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GLMCompositePresentation>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicPaneRenderer>>renderContainerFor:
GLMMorphicPaneRenderer>>render:
GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPane:
GLMPane>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
GLMMorphicTabulatorRenderer>>render:
GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabulator:
GLMTabulator>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTGenericStackDebugger(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTGenericStackDebugger(GLMCompositePresentation)>>openWith:
GTGenericStackDebugger(GLMCompositePresentation)>>open
GTGenericStackDebugger(GTMoldableDebugger)>>open
GTSpecPreDebugWindow>>openFullDebugger
GTSpecPreDebugWindow(Object)>>perform:withEnoughArguments:
PreDebugAction(MessageSendDebugAction)>>executeAction
PreDebugAction(DebugAction)>>execute
[ aDebugAction execute ] in SpecDebugActionButton>>update
SpecDebugActionButton(ButtonModel)>>performAction
MorphicButtonAdapter>>action
PluggableButtonMorph>>performAction:
[ :m | 
(m containsPoint: evt cursorPoint)
	ifTrue: [ m enabled
			ifTrue: [ m performAction: evt ] ] ] in PluggableButtonMorph>>mouseUp:
Array(SequenceableCollection)>>do:
PluggableButtonMorph>>mouseUp:
PluggableButtonMorph(Morph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
PluggableButtonMorph(Morph)>>handleEvent:
PluggableButtonMorph(Morph)>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:11:04.210418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(744222976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (137049856)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(744222976)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (137049856)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(744222976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (137049856)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(744222976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (137049856)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(220717312)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(538744576) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (891602688) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(25481472)
		scrollBrick: 	a GLMPagerScrollBrick(538744576)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(996327680 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(498184448 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=917853952 title=nil pane=a GLMPane(996327680 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=225728256 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(996327680 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=917853952 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(744595712)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(1032914688)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(744595712)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(996327680 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=917853952 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(996327680 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=917853952 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(996327680 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=917853952 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=225728256 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(996327680 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=917853952 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


[ :result | result inspect ] in [ :aPresentation | aPresentation highlightEvaluateAndDo: [ :result | result inspect ] ] in GLMPharoScriptPresentation(GLMRubricSmalltalkCodePresentation)>>executionSelectionActions
	Receiver: a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEditableTabLabel(362381568) ...etc...
	Arguments and temporary variables: 
		aPresentation: 	a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEd...etc...
		result: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1053606144 1)
		title: 	THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:11:47.227418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(788559616)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (126132480)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(788559616)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (126132480)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(788559616)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (126132480)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(788559616)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (126132480)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(342230784)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(739393792) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (911577344) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(732075776)
		scrollBrick: 	a GLMPagerScrollBrick(739393792)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(608577280 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(618706688 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1063747840 title=nil pane=a GLMPane(608577280 root...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=465600768 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(608577280 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1063747840 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(453134080)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(847466752)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(453134080)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(608577280 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1063747840 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(608577280 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1063747840 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(608577280 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1063747840 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=465600768 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(608577280 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1063747840 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


BotArenaGridView>>handleEvent:position:cellContent:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(980@439) mouseDown red 2085828 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


BotArenaGridView>>mouseDownEvt:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(980@439) mouseDown red 2085828 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


MorphEventSubscription>>notify:from:
	Receiver: a MorphEventSubscription
	Arguments and temporary variables: 
		anEvent: 	[(980@439) mouseDown red 2085828 nil]
		sourceMorph: 	a BotArenaGridView(966965760)
		arity: 	1
	Receiver's instance variables: 
		event: 	#click
		selector: 	#mouseDownEvt:
		recipient: 	a BotArenaGridView(966965760)
		valueParameter: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
BotArenaGridView>>handleEvent:position:cellContent:
BotArenaGridView>>mouseDownEvt:
MorphEventSubscription>>notify:from:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:11:47.723418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(666212096)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (46956800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(666212096)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (46956800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(666212096)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (46956800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(666212096)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (46956800)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(2696960)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(992354560) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (230650112) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(328447744)
		scrollBrick: 	a GLMPagerScrollBrick(992354560)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(528828160 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(948819712 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=114516224 title=nil pane=a GLMPane(528828160 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=336355584 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(528828160 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=114516224 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(440231680)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(892678400)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(440231680)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(528828160 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=114516224 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(528828160 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=114516224 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(528828160 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=114516224 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=336355584 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(528828160 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=114516224 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


BotArenaGridView>>handleEvent:position:cellContent:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(981@440) mouseDown red 2086343 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


BotArenaGridView>>mouseDownEvt:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(981@440) mouseDown red 2086343 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


MorphEventSubscription>>notify:from:
	Receiver: a MorphEventSubscription
	Arguments and temporary variables: 
		anEvent: 	[(981@440) mouseDown red 2086343 nil]
		sourceMorph: 	a BotArenaGridView(966965760)
		arity: 	1
	Receiver's instance variables: 
		event: 	#click
		selector: 	#mouseDownEvt:
		recipient: 	a BotArenaGridView(966965760)
		valueParameter: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
BotArenaGridView>>handleEvent:position:cellContent:
BotArenaGridView>>mouseDownEvt:
MorphEventSubscription>>notify:from:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ :s | result := result | ((s notify: anEvent from: sourceMorph) == true) ] in MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
Set>>do:
MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
MorphicEventHandler>>click:fromMorph:
BotArenaGridView(Morph)>>click:
MouseClickState>>click
MouseClickState>>handleEvent:from:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:13:14.637418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMTabSelectorBrick(GLMFoundationBrick)>>changed
	Receiver: a GLMTabSelectorBrick(1058121472)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (535490816)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>color:
	Receiver: a GLMTabSelectorBrick(1058121472)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (535490816)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>beTransparent
	Receiver: a GLMTabSelectorBrick(1058121472)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (535490816)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
	Receiver: a GLMTabSelectorBrick(1058121472)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (535490816)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick class(Behavior)>>new
	Receiver: GLMTabSelectorBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMFoundationBrick
		methodDict: 	a MethodDictionary(#addTab:->GLMTabSelectorBrick>>#addTab: #addTab:...etc...
		format: 	65548
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMTabSelectorBrick
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


LazyTabGroupMorph>>newTabSelectorMorph
	Receiver: a LazyTabGroupMorph(963917568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1019666688)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph(TabGroupMorph)>>initialize
	Receiver: a LazyTabGroupMorph(963917568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1019666688)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(963917568)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1019666688)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	nil
		contentMorph: 	nil
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	nil
		headerMorph: 	nil
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=232675072 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GLMCompositePresentation(id=618514176 title=nil pane=...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane(473...etc...


GLMCompositePresentation>>renderGlamorouslyOn:
	Receiver: a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane(473157888 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(473157888 stack)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	a GLMCompositePresentation(id=2212096 title=nil pane=a GLMPane...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=232675072 tit...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane(4...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane(4731...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(501511936)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>renderContainerFor:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(473157888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(501511936)
		contentMorph: 	nil


GLMMorphicPaneRenderer>>render:
	Receiver: a GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(473157888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	a GLMPanelMorph(501511936)
		contentMorph: 	nil


GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPaneRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPane(473157888 stack)
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnMatchingPresentationChanged:->GLMMorphicPa...etc...
		format: 	65539
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPaneRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPane:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPane: 	a GLMPane(473157888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMPane>>renderGlamorouslyOn:
	Receiver: a GLMPane(473157888 stack)
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		browser: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
		name: 	#stack
		presentations: 	a GLMCompositePresentation(id=618514176 title=nil pane=a GLMPane...etc...
		ports: 	an OrderedCollection(Port (pane=#stack name=#entity value=a DebugSession...etc...
		lastActivePresentation: 	nil
		allowedToNotePresentationsChanged: 	true
		cachedMatchingPresentations: 	an OrderedCollection(a GLMFastTablePresentation(id...etc...


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPane(473157888 stack)
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPane(473157888 stack)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(554305280 root)
		aMorph: 	a GLMPanelMorph(424775936)
		aBrowser: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
		totalSpans: 	4
		index: 	1
		each: 	a GLMCustomRow
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
	Receiver: an OrderedCollection(a GLMCustomRow a GLMCustomRow a GLMCustomRow)
	Arguments and temporary variables: 
		aBlock: 	[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBr...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMCustomRow a GLMCustomRow a GLMCustomRow nil nil nil nil ni...etc...
		firstIndex: 	1
		lastIndex: 	3


GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		pane: 	nil
		currentOffset: 	0
		currentSpanPosition: 	0
		aCell: 	a GLMCustomColumn
		aPane: 	a GLMPane(554305280 root)
		aMorph: 	a GLMPanelMorph(424775936)
		aBrowser: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
		totalSpans: 	4
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer>>render:
	Receiver: a GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
		container: 	a GLMPanelMorph(424775936)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabulatorRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 ro...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicBrowserRenderer
		methodDict: 	a MethodDictionary(#margin->GLMMorphicTabulatorRenderer>>#margin #r...etc...
		format: 	65537
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabulatorRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabulator:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
	Receiver's instance variables: 
		window: 	nil


GLMTabulator>>renderGlamorouslyOn:
	Receiver: a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(554305280 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection(GLMTransmission (origins=an OrderedCollecti...etc...
		panes: 	an OrderedCollection(a GLMPane(473157888 stack) a GLMPane(409609984 code...etc...
		initialExtent: 	nil
		watcherPane: 	nil
		cell: 	a GLMCustomColumn


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMTabulator(id=37789952 title=nil pane=a GLMPane(554305280 ro...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMTabSelectorBrick(GLMFoundationBrick)>>changed
GLMTabSelectorBrick(Morph)>>color:
GLMTabSelectorBrick(Morph)>>beTransparent
GLMTabSelectorBrick(GLMFoundationBrick)>>initialize
GLMTabSelectorBrick class(Behavior)>>new
LazyTabGroupMorph>>newTabSelectorMorph
LazyTabGroupMorph(TabGroupMorph)>>initialize
LazyTabGroupMorph>>initialize
LazyTabGroupMorph class(Behavior)>>new
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GLMCompositePresentation>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicPaneRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicPaneRenderer>>renderContainerFor:
GLMMorphicPaneRenderer>>render:
GLMMorphicPaneRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPane:
GLMPane>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabulatorRenderer(GLMMorphicWidgetRenderer)>>renderObject:
[ :index :each | 
each hasId
	ifTrue: [ pane := self renderObject: (aBrowser paneNamed: each id) ]
	ifFalse: [ pane := GLMMorphic containerMorph.
		self
			renderCustomRow: each
			ofPane: aPane
			inUI: pane
			inBrowser: aBrowser.
		pane addPaneSplitters ].
pane
	layoutFrame:
		(LayoutFrame new
			topFraction: currentSpanPosition / totalSpans
				offset: currentOffset + self margin;
			leftFraction: 0 offset: 0;
			bottomFraction: (currentSpanPosition + each span) / totalSpans
				offset: currentOffset + each size - self margin;
			rightFraction: 1 offset: 0;
			yourself).
aMorph addMorphBack: pane.
currentSpanPosition := currentSpanPosition + each span.
currentOffset := currentOffset + each size ] in GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
OrderedCollection(SequenceableCollection)>>keysAndValuesDo:
GLMMorphicTabulatorRenderer>>renderCustomColumn:ofPane:inUI:inBrowser:
GLMMorphicTabulatorRenderer>>render:
GLMMorphicTabulatorRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabulator:
GLMTabulator>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTGenericStackDebugger(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTGenericStackDebugger(GLMCompositePresentation)>>openWith:
GTGenericStackDebugger(GLMCompositePresentation)>>open
GTGenericStackDebugger(GTMoldableDebugger)>>open
GTGenericStackDebugger>>openWithFullView
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:andNotification:
GTGenericStackDebugger class(GTMoldableDebugger class)>>openOn:withFullView:
RubSmalltalkEditor>>debug:receiver:in:
RubSmalltalkEditor>>debug:
RubSmalltalkEditor>>debugHighlight
[ textMorph textArea editor debugHighlight.
textMorph shoutStyler style: textMorph text ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>debugHighlightedText
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:14:28.484418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(120153856)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (791228672)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(120153856)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (791228672)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(120153856)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (791228672)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(120153856)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (791228672)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(961541888)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(597741824) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (820060416) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(205358848)
		scrollBrick: 	a GLMPagerScrollBrick(597741824)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(276961024 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(1034790656 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=459936000 title=nil pane=a GLMPane(276961024 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=601035008 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(276961024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=459936000 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(38811392)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(541778176)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(38811392)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(276961024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=459936000 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(276961024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=459936000 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(276961024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=459936000 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=601035008 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(276961024 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=459936000 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


BotArenaGridView>>handleEvent:position:cellContent:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(984@437) mouseDown red 2247015 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


BotArenaGridView>>mouseDownEvt:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(984@437) mouseDown red 2247015 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


MorphEventSubscription>>notify:from:
	Receiver: a MorphEventSubscription
	Arguments and temporary variables: 
		anEvent: 	[(984@437) mouseDown red 2247015 nil]
		sourceMorph: 	a BotArenaGridView(966965760)
		arity: 	1
	Receiver's instance variables: 
		event: 	#click
		selector: 	#mouseDownEvt:
		recipient: 	a BotArenaGridView(966965760)
		valueParameter: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
BotArenaGridView>>handleEvent:position:cellContent:
BotArenaGridView>>mouseDownEvt:
MorphEventSubscription>>notify:from:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ :s | result := result | ((s notify: anEvent from: sourceMorph) == true) ] in MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
Set>>do:
MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
MorphicEventHandler>>click:fromMorph:
BotArenaGridView(Morph)>>click:
MouseClickState>>click
MouseClickState>>handleEvent:from:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:14:28.851418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(748660480)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (629993728)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(748660480)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (629993728)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(748660480)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (629993728)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(748660480)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (629993728)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(136460032)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(438079744) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1044963584) [other:  (brickRenderer -> a GLMBrickR...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(581682944)
		scrollBrick: 	a GLMPagerScrollBrick(438079744)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(684480256 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(773056256 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=999674112 title=nil pane=a GLMPane(684480256 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=431935744 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(684480256 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=999674112 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(1024620288)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(121807104)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(1024620288)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(684480256 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=999674112 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(684480256 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=999674112 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(684480256 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=999674112 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=431935744 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(684480256 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=999674112 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


BotArenaGridView>>handleEvent:position:cellContent:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(984@437) mouseDown red 2247437 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


BotArenaGridView>>mouseDownEvt:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(984@437) mouseDown red 2247437 nil]
		cellPosition: 	(20@30)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


MorphEventSubscription>>notify:from:
	Receiver: a MorphEventSubscription
	Arguments and temporary variables: 
		anEvent: 	[(984@437) mouseDown red 2247437 nil]
		sourceMorph: 	a BotArenaGridView(966965760)
		arity: 	1
	Receiver's instance variables: 
		event: 	#click
		selector: 	#mouseDownEvt:
		recipient: 	a BotArenaGridView(966965760)
		valueParameter: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
BotArenaGridView>>handleEvent:position:cellContent:
BotArenaGridView>>mouseDownEvt:
MorphEventSubscription>>notify:from:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ :s | result := result | ((s notify: anEvent from: sourceMorph) == true) ] in MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
Set>>do:
MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
MorphicEventHandler>>click:fromMorph:
BotArenaGridView(Morph)>>click:
MouseClickState>>click
MouseClickState>>handleEvent:from:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:14:39.454418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(96510208)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (696911616)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(96510208)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (696911616)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(96510208)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (696911616)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(96510208)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (696911616)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPopupActionBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPopupActionBrick(617713920)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMActionButtonBrick(981899008) a GLMBandBric...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (438534400) [other:  (brickRenderer -> a GLMBrickAr...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		normalImage: 	nil
		pressedImage: 	nil
		selectedImage: 	nil
		checkedImage: 	nil
		announcer: 	nil
		checkedColor: 	nil
		normalColor: 	nil
		pressedColor: 	nil
		selectedColor: 	nil
		isSelected: 	false
		isPressed: 	false
		isChecked: 	false
		isEnabled: 	true
		isDoubleClickEnabled: 	nil
		anchorBrick: 	a GLMPluggableButtonMorph(775528704)
		triggerBrick: 	a GLMActionButtonBrick(981899008)
		contentBrick: 	a GLMBandBrick(283780864)
		popupLayout: 	a GLMPopupBrickDownwardLayout
		closer: 	a GLMPopupBrickCloser
		padding: 	nil
		inset: 	a Margin top: 1 left: 1 bottom: 1 right: 1
		spacing: 	0
		onCreatedBlock: 	[ :popup | 
self action
	glamourValueWithArgs:
		(Array
			with...etc...


GLMPopupActionBrick(GLMEmptyPopupBrick)>>openAt:
	Receiver: a GLMPopupActionBrick(617713920)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:14:42.368418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(297674496)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (452096256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(297674496)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (452096256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(297674496)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (452096256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(297674496)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (452096256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPopupActionBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPopupActionBrick(584627968)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMActionButtonBrick(30826752) a GLMBandBrick...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (561661696) [other:  (brickRenderer -> a GLMBrickAr...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		normalImage: 	nil
		pressedImage: 	nil
		selectedImage: 	nil
		checkedImage: 	nil
		announcer: 	nil
		checkedColor: 	nil
		normalColor: 	nil
		pressedColor: 	nil
		selectedColor: 	nil
		isSelected: 	false
		isPressed: 	false
		isChecked: 	false
		isEnabled: 	true
		isDoubleClickEnabled: 	nil
		anchorBrick: 	a GLMPluggableButtonMorph(559212288)
		triggerBrick: 	a GLMActionButtonBrick(30826752)
		contentBrick: 	a GLMBandBrick(583749888)
		popupLayout: 	a GLMPopupBrickDownwardLayout
		closer: 	a GLMPopupBrickCloser
		padding: 	nil
		inset: 	a Margin top: 1 left: 1 bottom: 1 right: 1
		spacing: 	0
		onCreatedBlock: 	[ :popup | 
self action
	glamourValueWithArgs:
		(Array
			with...etc...


GLMPopupActionBrick(GLMEmptyPopupBrick)>>openAt:
	Receiver: a GLMPopupActionBrick(584627968)
	Arguments and temporary variables: 
		aPoint: 	(1294.0@425.0)
		aFoundationBrick: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMActionButtonBrick(30826752) a GLMBandBrick...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (561661696) [other:  (brickRenderer -> a GLMBrickAr...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		normalImage: 	nil
		pressedImage: 	nil
		selectedImage: 	nil
		checkedImage: 	nil
		announcer: 	nil
		checkedColor: 	nil
		normalColor: 	nil
		pressedColor: 	nil
		selectedColor: 	nil
		isSelected: 	false
		isPressed: 	false
		isChecked: 	false
		isEnabled: 	true
		isDoubleClickEnabled: 	nil
		anchorBrick: 	a GLMPluggableButtonMorph(559212288)
		triggerBrick: 	a GLMActionButtonBrick(30826752)
		contentBrick: 	a GLMBandBrick(583749888)
		popupLayout: 	a GLMPopupBrickDownwardLayout
		closer: 	a GLMPopupBrickCloser
		padding: 	nil
		inset: 	a Margin top: 1 left: 1 bottom: 1 right: 1
		spacing: 	0
		onCreatedBlock: 	[ :popup | 
self action
	glamourValueWithArgs:
		(Array
			with...etc...


GLMPopupActionBrick(GLMEmptyPopupBrick)>>openBelow:
	Receiver: a GLMPopupActionBrick(584627968)
	Arguments and temporary variables: 
		aRectangle: 	(1294.0@425.0) corner: (1320.0@451.0)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMActionButtonBrick(30826752) a GLMBandBrick...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (561661696) [other:  (brickRenderer -> a GLMBrickAr...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		normalImage: 	nil
		pressedImage: 	nil
		selectedImage: 	nil
		checkedImage: 	nil
		announcer: 	nil
		checkedColor: 	nil
		normalColor: 	nil
		pressedColor: 	nil
		selectedColor: 	nil
		isSelected: 	false
		isPressed: 	false
		isChecked: 	false
		isEnabled: 	true
		isDoubleClickEnabled: 	nil
		anchorBrick: 	a GLMPluggableButtonMorph(559212288)
		triggerBrick: 	a GLMActionButtonBrick(30826752)
		contentBrick: 	a GLMBandBrick(583749888)
		popupLayout: 	a GLMPopupBrickDownwardLayout
		closer: 	a GLMPopupBrickCloser
		padding: 	nil
		inset: 	a Margin top: 1 left: 1 bottom: 1 right: 1
		spacing: 	0
		onCreatedBlock: 	[ :popup | 
self action
	glamourValueWithArgs:
		(Array
			with...etc...


GLMPopupBrickDownwardLayout>>open:with:
	Receiver: a GLMPopupBrickDownwardLayout
	Arguments and temporary variables: 
		aPopupBrick: 	a GLMPopupActionBrick(584627968)
		aRectangle: 	(1294.0@425.0) corner: (1320.0@451.0)
	Receiver's instance variables: 
a GLMPopupBrickDownwardLayout

GLMPopupActionBrick(GLMEmptyPopupBrick)>>openOn:
	Receiver: a GLMPopupActionBrick(584627968)
	Arguments and temporary variables: 
		aBrick: 	a GLMPluggableButtonMorph(559212288)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMActionButtonBrick(30826752) a GLMBandBrick...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (561661696) [other:  (brickRenderer -> a GLMBrickAr...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		normalImage: 	nil
		pressedImage: 	nil
		selectedImage: 	nil
		checkedImage: 	nil
		announcer: 	nil
		checkedColor: 	nil
		normalColor: 	nil
		pressedColor: 	nil
		selectedColor: 	nil
		isSelected: 	false
		isPressed: 	false
		isChecked: 	false
		isEnabled: 	true
		isDoubleClickEnabled: 	nil
		anchorBrick: 	a GLMPluggableButtonMorph(559212288)
		triggerBrick: 	a GLMActionButtonBrick(30826752)
		contentBrick: 	a GLMBandBrick(583749888)
		popupLayout: 	a GLMPopupBrickDownwardLayout
		closer: 	a GLMPopupBrickCloser
		padding: 	nil
		inset: 	a Margin top: 1 left: 1 bottom: 1 right: 1
		spacing: 	0
		onCreatedBlock: 	[ :popup | 
self action
	glamourValueWithArgs:
		(Array
			with...etc...


GLMPopupAction>>popupActOn:from:
	Receiver: a GLMPopupAction
	Arguments and temporary variables: 
		aPresentation: 	a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEd...etc...
		aButton: 	a GLMPluggableButtonMorph(559212288)
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		action: 	[ :text :page :popup | 
GTPlaygroundPlayPagesList new
	on: GTPlayBook i...etc...
		title: 	'Play pages'
		help: 	nil
		keymap: 	nil
		position: 	nil
		category: 	nil
		icon: 	Form(16x16x32)
		condition: 	nil
		enabledCondition: 	nil
		separatorAfter: 	nil
		separatorBefore: 	nil
		shouldShowTitle: 	false


GLMPluggableButtonMorph(PluggableButtonMorph)>>performAction:
	Receiver: a GLMPluggableButtonMorph(559212288)
	Arguments and temporary variables: 
		event: 	[(1308@440) mouseUp 2261046 nil]
	Receiver's instance variables: 
		bounds: 	(1295.0@426.0) corner: (1319.0@450.0)
		owner: 	a ToolDockingBarMorph(218738944)
		submorphs: 	an Array(an AlignmentMorph(602800384))
		fullBounds: 	(1295@426) corner: (1319@450)
		color: 	Color transparent
		extension: 	a MorphExtension (701845760) [balloonText]  [other:  (noBorder -> tr...etc...
		borderWidth: 	0
		borderColor: 	#none
		model: 	a GLMPopupAction
		label: 	an AlphaImageMorph(511944448)
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#popupActOn:from:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:14:53.171418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 270 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	61
		stepDelay: 	a Delay(100 msecs; 60 msecs remaining)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(771178752)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (63727360)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(771178752)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (63727360)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(771178752)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (63727360)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(771178752)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (63727360)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(545140992)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(187418368) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1019410176) [other:  (brickRenderer -> a GLMBrickR...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(602284288)
		scrollBrick: 	a GLMPagerScrollBrick(187418368)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(85922048 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(303628544 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=427853568 title=nil pane=a GLMPane(85922048 root))...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=737117952 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(85922048 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=427853568 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(163836160)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(520304384)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(163836160)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(85922048 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=427853568 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(85922048 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=427853568 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(85922048 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=427853568 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=737117952 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 270
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(85922048 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=427853568 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 270
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


[ :result | result inspect ] in [ :aPresentation | aPresentation highlightEvaluateAndDo: [ :result | result inspect ] ] in GLMPharoScriptPresentation(GLMRubricSmalltalkCodePresentation)>>executionSelectionActions
	Receiver: a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEditableTabLabel(534982912) ...etc...
	Arguments and temporary variables: 
		aPresentation: 	a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEd...etc...
		result: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1053606144 1)
		title: 	[ :page | 
GTPlaygroundEditableTabLabel new
	text: page title;
	when: #a...etc...
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMPopupA...etc...
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	<<error during printing>>

[ :result | aBlock value: result ] in RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
		result: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(887488768)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:15:02.187418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 270 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	61
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(245430016)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (699932928)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(245430016)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (699932928)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(245430016)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (699932928)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(245430016)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (699932928)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(931038976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(1039515904) a GLMPagerBar...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (332468480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(45291264)
		scrollBrick: 	a GLMPagerScrollBrick(1039515904)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(399419136 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(358692608 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1001062656 title=nil pane=a GLMPane(399419136 root...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=260309248 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(399419136 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1001062656 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(553305856)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(807325952)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(553305856)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(399419136 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1001062656 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(399419136 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1001062656 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(399419136 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1001062656 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=260309248 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 270
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(399419136 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=1001062656 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 270
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


[ :result | result inspect ] in [ :aPresentation | aPresentation highlightEvaluateAndDo: [ :result | result inspect ] ] in GLMPharoScriptPresentation(GLMRubricSmalltalkCodePresentation)>>executionSelectionActions
	Receiver: a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEditableTabLabel(540116736) ...etc...
	Arguments and temporary variables: 
		aPresentation: 	a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEd...etc...
		result: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1053606144 1)
		title: 	[ :page | 
GTPlaygroundEditableTabLabel new
	text: page title;
	when: #a...etc...
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMPopupA...etc...
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	<<error during printing>>

[ :result | aBlock value: result ] in RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
		result: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(887488768)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	Robot at (20@30), direction 270
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(887488768)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
[ :result | result inspect ] in [ :aPresentation | aPresentation highlightEvaluateAndDo: [ :result | result inspect ] ] in GLMPharoScriptPresentation(GLMRubricSmalltalkCodePresentation)>>executionSelectionActions
[ :result | aBlock value: result ] in RubSmalltalkEditor>>highlightEvaluateAndDo:
RubSmalltalkEditor>>evaluate:andDo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:15:08.197418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (20@30), direction 270 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	61
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(788735744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (938832128)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(788735744)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (938832128)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(788735744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (938832128)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(788735744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (938832128)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(315471616)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(441782528) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1068065024) [other:  (brickRenderer -> a GLMBrickR...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(153044736)
		scrollBrick: 	a GLMPagerScrollBrick(441782528)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109565696 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(647456512 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=611209472 title=nil pane=a GLMPane(109565696 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=118968576 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109565696 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=611209472 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(1004402432)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(696459520)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(1004402432)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109565696 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=611209472 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109565696 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=611209472 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109565696 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=611209472 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=118968576 title=Inspector on a WalkingBrushRobot (Robot at (20@30), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (20@30), direction 270
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109565696 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=611209472 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (20@30), direction 270
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


[ :result | result inspect ] in [ :aPresentation | aPresentation highlightEvaluateAndDo: [ :result | result inspect ] ] in GLMPharoScriptPresentation(GLMRubricSmalltalkCodePresentation)>>executionSelectionActions
	Receiver: a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEditableTabLabel(1014019840)...etc...
	Arguments and temporary variables: 
		aPresentation: 	a GLMPharoScriptPresentation(id=891643648 title=a GTPlaygroundEd...etc...
		result: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1053606144 1)
		title: 	[ :page | 
GTPlaygroundEditableTabLabel new
	text: page title;
	when: #a...etc...
		titleIcon: 	nil
		transformation: 	[ :x | x ]
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMPopupA...etc...
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	<<error during printing>>

[ :result | aBlock value: result ] in RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
		result: 	Robot at (20@30), direction 270
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(887488768)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	Robot at (20@30), direction 270
		rcvr: 	nil
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(887488768)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
[ :result | result inspect ] in [ :aPresentation | aPresentation highlightEvaluateAndDo: [ :result | result inspect ] ] in GLMPharoScriptPresentation(GLMRubricSmalltalkCodePresentation)>>executionSelectionActions
[ :result | aBlock value: result ] in RubSmalltalkEditor>>highlightEvaluateAndDo:
RubSmalltalkEditor>>evaluate:andDo:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldState>>doOneSubCycleFor:
WorldMorph>>doOneSubCycle
MenuMorph>>invokeModalAt:in:allowKeyboard:
MenuMorph>>invokeModal:
MenuMorph>>invokeModal
RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:
RubEditingArea(RubAbstractTextArea)>>mouseDown:
RubEditingArea(Morph)>>handleMouseDown:
MouseButtonEvent>>sentTo:
RubEditingArea(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubEditingArea(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
TransformWithLayoutMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubTextScrollPane(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
RubScrolledTextMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
LazyTabGroupMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPanelMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMMorphBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMScrollPaneBandBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerScrollBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMPagerBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMFoundationBrick(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
GLMSystemWindow(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchMouseDown:with:
MorphicEventDispatcher>>handleMouseDown:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
WorldMorph(Morph)>>processEvent:using:
WorldMorph(Morph)>>processEvent:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:15:50.084418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (17@25), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(116463360)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1042088192)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(116463360)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1042088192)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(116463360)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1042088192)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(116463360)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (1042088192)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(573351680)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(491168000) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (562557184) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(601831168)
		scrollBrick: 	a GLMPagerScrollBrick(491168000)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(295225088 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(132732672 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=328458496 title=nil pane=a GLMPane(295225088 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=223142144 title=Inspector on a Walking...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (R...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (Robot at (17@25), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(295225088 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=328458496 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (Ro...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(174122752)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot ...etc...
		dock: 	a ToolDockingBarMorph(534622464)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(174122752)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot ...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (Robot at (17@25), direc...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(295225088 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=328458496 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (Robot at (17@25), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(295225088 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=328458496 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (Robot at (17@25), direc...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(295225088 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=328458496 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=223142144 title=Inspector on a WalkingBrushRobot (Robot at (17@25), direc...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (17@25), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(295225088 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=328458496 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (17@25), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


BotArenaGridView>>handleEvent:position:cellContent:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(949@384) mouseDown red 2328687 nil]
		cellPosition: 	(17@25)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


BotArenaGridView>>mouseDownEvt:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(949@384) mouseDown red 2328687 nil]
		cellPosition: 	(17@25)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


MorphEventSubscription>>notify:from:
	Receiver: a MorphEventSubscription
	Arguments and temporary variables: 
		anEvent: 	[(949@384) mouseDown red 2328687 nil]
		sourceMorph: 	a BotArenaGridView(966965760)
		arity: 	1
	Receiver's instance variables: 
		event: 	#click
		selector: 	#mouseDownEvt:
		recipient: 	a BotArenaGridView(966965760)
		valueParameter: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
BotArenaGridView>>handleEvent:position:cellContent:
BotArenaGridView>>mouseDownEvt:
MorphEventSubscription>>notify:from:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ :s | result := result | ((s notify: anEvent from: sourceMorph) == true) ] in MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
Set>>do:
MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
MorphicEventHandler>>click:fromMorph:
BotArenaGridView(Morph)>>click:
MouseClickState>>click
MouseClickState>>handleEvent:from:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:15:50.435418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (17@25), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(23458048)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (196163328)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(23458048)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (196163328)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(23458048)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (196163328)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(23458048)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (196163328)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(529654016)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(224564992) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (575325952) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(458150144)
		scrollBrick: 	a GLMPagerScrollBrick(224564992)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109887744 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(607891712 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	nil
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=326850304 title=nil pane=a GLMPane(109887744 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot ...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=3823360 title=Inspector on a WalkingBr...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Rob...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Robot at (17@25), directi...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109887744 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=326850304 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (R...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Robo...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(407609600)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (R...etc...
		dock: 	a ToolDockingBarMorph(221710080)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(407609600)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot ...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (R...etc...
	Receiver's instance variables: 
		window: 	nil


GTInspector(GLMCompositePresentation)>>openWith:
	Receiver: a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Robot at (17@25), directi...etc...
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109887744 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=326850304 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Robot at (17@25), directi...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109887744 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=326850304 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector(GLMCompositePresentation)>>openOn:
	Receiver: a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Robot at (17@25), directi...etc...
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109887744 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=326850304 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector>>openOn:
	Receiver: a GTInspector(id=3823360 title=Inspector on a WalkingBrushRobot (Robot at (17@25), directi...etc...
	Arguments and temporary variables: 
		aPage: 	Robot at (17@25), direction 0
		window: 	nil
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(109887744 root)
		title: 	[ :anObject | 'Inspector on ' , (self printObjectAsAnItem: anObject) ]
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=326850304 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GTInspector class>>openOn:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


GTInspector class>>inspect:
	Receiver: GTInspector
	Arguments and temporary variables: 
		anObject: 	Robot at (17@25), direction 0
	Receiver's instance variables: 
		superclass: 	GLMCompositePresentation
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GTInspector>>#actOnPaneAdded: ...etc...
		format: 	65572
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GTDebuggerInspector}
		name: 	#GTInspector
		classPool: 	a Dictionary(#EnabledStepRefreshStatus->nil #GTInspectorEnabledStatu...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'GT-Inspector'
		traitComposition: 	{}
		localSelectors: 	nil
		logger: 	nil


WalkingBrushRobot(Object)>>inspect
	Receiver: Robot at (17@25), direction 0
	Arguments and temporary variables: 

	Receiver's instance variables: 
		id: 	#robotech
		body: 	a BGSRobotBodyWithFrontRangeSensor
		commands: 	an OrderedCollection()
		semaphore: 	a Semaphore()
		battery: 	a Battery
		brush: 	a Brush


BotArenaGridView>>handleEvent:position:cellContent:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(949@384) mouseDown red 2329062 nil]
		cellPosition: 	(17@25)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


BotArenaGridView>>mouseDownEvt:
	Receiver: a BotArenaGridView(966965760)
	Arguments and temporary variables: 
		evt: 	[(949@384) mouseDown red 2329062 nil]
		cellPosition: 	(17@25)
		clickedCellContent: 	a BGSRobotBodyWithFrontRangeSensor
	Receiver's instance variables: 
		bounds: 	(762.0@105.0) corner: (1323.0@666.0)
		owner: 	an AlignmentMorph(713711104)
		submorphs: 	#()
		fullBounds: 	(762.0@105.0) corner: (1323.0@666.0)
		color: 	(Color r: 0.1 g: 0.5 b: 0.3 alpha: 1.0)
		extension: 	a MorphExtension (556134656) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	2
		borderColor: 	#complexRaised
		grid: 	a BGSGrid
		visitedCellPosition: 	(50@50)
		botParts: 	a Set(a BGSDirectionalRangeSensor)
		cellExtent: 	(10@10)
		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)
		colorMap: 	nil
		container: 	a BGSArenaWindow(574222336)


MorphEventSubscription>>notify:from:
	Receiver: a MorphEventSubscription
	Arguments and temporary variables: 
		anEvent: 	[(949@384) mouseDown red 2329062 nil]
		sourceMorph: 	a BotArenaGridView(966965760)
		arity: 	1
	Receiver's instance variables: 
		event: 	#click
		selector: 	#mouseDownEvt:
		recipient: 	a BotArenaGridView(966965760)
		valueParameter: 	nil



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTInspector(GLMCompositePresentation)>>openWith:
GTInspector(GLMCompositePresentation)>>openOn:with:
GTInspector(GLMCompositePresentation)>>openOn:
GTInspector>>openOn:
GTInspector class>>openOn:
GTInspector class>>inspect:
WalkingBrushRobot(Object)>>inspect
BotArenaGridView>>handleEvent:position:cellContent:
BotArenaGridView>>mouseDownEvt:
MorphEventSubscription>>notify:from:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ :s | result := result | ((s notify: anEvent from: sourceMorph) == true) ] in MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
Set>>do:
MorphicEventHandler>>notifyMorphsOfEvent:ofType:from:
MorphicEventHandler>>click:fromMorph:
BotArenaGridView(Morph)>>click:
MouseClickState>>click
MouseClickState>>handleEvent:from:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:18:33.691418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (17@25), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(647071488)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (473305344)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(647071488)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (473305344)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(647071488)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (473305344)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(647071488)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (473305344)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(563484416)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(748269824) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (79692032) [other:  (brickRenderer -> a GLMBrickRen...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(427927296)
		scrollBrick: 	a GLMPagerScrollBrick(748269824)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1021589248 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(21874432 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	GLMTransmission (origins=an OrderedCollection() destination=...etc...
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=251326720 title=nil pane=a GLMPane(1021589248 root...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=423874816 title=nil pane=a GLMPane(1021589248 r...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=423874816 title=nil pane=a GLMPane(102...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=423874816 title=nil pane=a GLMPane(1021589248 root)...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=423874816 title=nil pane=a GLMPane(1021589248 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1021589248 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		presentations: 	an OrderedCollection(a GLMPager(id=251326720 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=423874816 title=nil pane=a GLMPane(1021589248 roo...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=423874816 title=nil pane=a GLMPane(1021589248 root))...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=423874816 title=nil pane=a GLMPane(1021589248 r...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(1021...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTPlayground(id=625209600 title=Playground pane=a GLM...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(10215892...etc...


GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTPlayground(id=625209600 title=Playground pane=a GLMPane(1021589248 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1021589248 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=423874816 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(102158...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(102158924...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(108390144)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(102158...etc...
		dock: 	a ToolDockingBarMorph(647016704)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(108390144)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(1021...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=625209600 title=Playground pane=a GLMPane(102158...etc...
	Receiver's instance variables: 
		window: 	nil


GTPlayground(GLMCompositePresentation)>>openWith:
	Receiver: a GTPlayground(id=625209600 title=Playground pane=a GLMPane(1021589248 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1021589248 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=423874816 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement


GTPlayground(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTPlayground(id=625209600 title=Playground pane=a GLMPane(1021589248 root))
	Arguments and temporary variables: 
		anObject: 	a GTPlayPage
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(1021589248 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=423874816 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTPlayground(GLMCompositePresentation)>>openWith:
GTPlayground(GLMCompositePresentation)>>openOn:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GTPlayground(GLMCompositePresentation)>>openOn:
GTPlayground>>openOn:
GTPlayground class(GLMCompositePresentation class)>>openOn:
GTPlayground class>>open
PharoCommonTools(ToolRegistry)>>openWorkspace
[ Smalltalk tools openWorkspace ] in [ (aBuilder item: #'System Browser')
	action: [ Smalltalk tools openClassBrowser ];
	keyText: 'o, b';
	icon: Smalltalk tools browser taskbarIcon.
(aBuilder item: Smalltalk tools workspace title asSymbol)
	action: [ Smalltalk tools openWorkspace ];
	keyText: 'o, w';
	icon: Smalltalk tools workspace taskbarIcon.
Smalltalk globals
	at: #TestRunner
	ifPresent: [ :class | 
		(aBuilder item: #'Test Runner')
			action: [ Smalltalk tools openTestRunner ];
			keyText: 'o, u';
			icon: class taskbarIcon ].
Smalltalk globals
	at: #GTSpotter
	ifPresent: [ :class | 
		(aBuilder item: #Spotter)
			action: [ GTSpotterGlobalShortcut openGlobalSpotter ];
			keyText: 'Shift + Enter';
			iconName: #smallFindIcon ].
(aBuilder item: #'Monticello Browser')
	action: [ Smalltalk tools openMonticelloBrowser ];
	keyText: 'o, p';
	icon: Smalltalk tools monticelloBrowser taskbarIcon ] in WorldState class>>mostUsedToolsOn:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:19:21.750418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (17@25), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(201197312)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (310219008)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(201197312)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (310219008)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(201197312)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (310219008)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(201197312)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (310219008)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(834311936)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(319893760) a GLMPagerBarB...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (286228736) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(282994432)
		scrollBrick: 	a GLMPagerScrollBrick(319893760)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root)...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(267958016 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(479872768 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	GLMTransmission (origins=an OrderedCollection() destination=...etc...
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=684880128 title=nil pane=a GLMPane(267958016 root)...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=346771712 title=nil pane=a GLMPane(267958016 ro...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=346771712 title=nil pane=a GLMPane(267...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=346771712 title=nil pane=a GLMPane(267958016 root))...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=346771712 title=nil pane=a GLMPane(267958016 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(267958016 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		presentations: 	an OrderedCollection(a GLMPager(id=684880128 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=346771712 title=nil pane=a GLMPane(267958016 root...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=346771712 title=nil pane=a GLMPane(267958016 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=346771712 title=nil pane=a GLMPane(267958016 ro...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(2679...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTPlayground(id=714830080 title=Playground pane=a GLM...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(26795801...etc...


GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958016 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(267958016 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=346771712 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958016...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(397567744)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958...etc...
		dock: 	a ToolDockingBarMorph(25702656)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(397567744)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(2679...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958...etc...
	Receiver's instance variables: 
		window: 	nil


GTPlayground(GLMCompositePresentation)>>openWith:
	Receiver: a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958016 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(267958016 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=346771712 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement


GTPlayground(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTPlayground(id=714830080 title=Playground pane=a GLMPane(267958016 root))
	Arguments and temporary variables: 
		anObject: 	a GTPlayPage
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(267958016 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=346771712 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTPlayground(GLMCompositePresentation)>>openWith:
GTPlayground(GLMCompositePresentation)>>openOn:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GTPlayground(GLMCompositePresentation)>>openOn:
GTPlayground>>openOn:
GTPlayground class(GLMCompositePresentation class)>>openOn:
GTPlayground class>>open
PharoCommonTools(ToolRegistry)>>openWorkspace
[ Smalltalk tools openWorkspace ] in [ (aBuilder item: #'System Browser')
	action: [ Smalltalk tools openClassBrowser ];
	keyText: 'o, b';
	icon: Smalltalk tools browser taskbarIcon.
(aBuilder item: Smalltalk tools workspace title asSymbol)
	action: [ Smalltalk tools openWorkspace ];
	keyText: 'o, w';
	icon: Smalltalk tools workspace taskbarIcon.
Smalltalk globals
	at: #TestRunner
	ifPresent: [ :class | 
		(aBuilder item: #'Test Runner')
			action: [ Smalltalk tools openTestRunner ];
			keyText: 'o, u';
			icon: class taskbarIcon ].
Smalltalk globals
	at: #GTSpotter
	ifPresent: [ :class | 
		(aBuilder item: #Spotter)
			action: [ GTSpotterGlobalShortcut openGlobalSpotter ];
			keyText: 'Shift + Enter';
			iconName: #smallFindIcon ].
(aBuilder item: #'Monticello Browser')
	action: [ Smalltalk tools openMonticelloBrowser ];
	keyText: 'o, p';
	icon: Smalltalk tools monticelloBrowser taskbarIcon ] in WorldState class>>mostUsedToolsOn:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:19:25.006418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (17@25), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(634230528)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (477397248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(634230528)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (477397248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(634230528)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (477397248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(634230528)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (477397248)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(616638208)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(97394944) a GLMPagerBarBr...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (82276608) [other:  (brickRenderer -> a GLMBrickRen...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(917223168)
		scrollBrick: 	a GLMPagerScrollBrick(97394944)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(421349120 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(547739392 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	GLMTransmission (origins=an OrderedCollection() destination=...etc...
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=58417408 title=nil pane=a GLMPane(421349120 root))...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=667304192 title=nil pane=a GLMPane(421349120 ro...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=667304192 title=nil pane=a GLMPane(421...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=667304192 title=nil pane=a GLMPane(421349120 root))...etc...


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=667304192 title=nil pane=a GLMPane(421349120 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(421349120 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		presentations: 	an OrderedCollection(a GLMPager(id=58417408 title=nil pane=a GLM...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=667304192 title=nil pane=a GLMPane(421349120 root...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=667304192 title=nil pane=a GLMPane(421349120 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=667304192 title=nil pane=a GLMPane(421349120 ro...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(4213...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTPlayground(id=951345408 title=Playground pane=a GLM...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(42134912...etc...


GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349120 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(421349120 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=667304192 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349120...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(71038720)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349...etc...
		dock: 	a ToolDockingBarMorph(1020600576)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(71038720)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(4213...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349...etc...
	Receiver's instance variables: 
		window: 	nil


GTPlayground(GLMCompositePresentation)>>openWith:
	Receiver: a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349120 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(421349120 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=667304192 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement


GTPlayground(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTPlayground(id=951345408 title=Playground pane=a GLMPane(421349120 root))
	Arguments and temporary variables: 
		anObject: 	a GTPlayPage
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(421349120 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=667304192 title=nil pane=a...etc...
		arrangement: 	a GLMTabbedArrangement



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTPlayground(GLMCompositePresentation)>>openWith:
GTPlayground(GLMCompositePresentation)>>openOn:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GTPlayground(GLMCompositePresentation)>>openOn:
GTPlayground>>openOn:
GTPlayground class(GLMCompositePresentation class)>>openOn:
GTPlayground class>>open
PharoCommonTools(ToolRegistry)>>openWorkspace
[ Smalltalk tools openWorkspace ] in [ (aBuilder item: #'System Browser')
	action: [ Smalltalk tools openClassBrowser ];
	keyText: 'o, b';
	icon: Smalltalk tools browser taskbarIcon.
(aBuilder item: Smalltalk tools workspace title asSymbol)
	action: [ Smalltalk tools openWorkspace ];
	keyText: 'o, w';
	icon: Smalltalk tools workspace taskbarIcon.
Smalltalk globals
	at: #TestRunner
	ifPresent: [ :class | 
		(aBuilder item: #'Test Runner')
			action: [ Smalltalk tools openTestRunner ];
			keyText: 'o, u';
			icon: class taskbarIcon ].
Smalltalk globals
	at: #GTSpotter
	ifPresent: [ :class | 
		(aBuilder item: #Spotter)
			action: [ GTSpotterGlobalShortcut openGlobalSpotter ];
			keyText: 'Shift + Enter';
			iconName: #smallFindIcon ].
(aBuilder item: #'Monticello Browser')
	action: [ Smalltalk tools openMonticelloBrowser ];
	keyText: 'o, p';
	icon: Smalltalk tools monticelloBrowser taskbarIcon ] in WorldState class>>mostUsedToolsOn:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
29 September 2017 1:19:33.269418 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#robotech->Robot at (17@25), direction 0 )
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	0
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(451383552)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (417371904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(451383552)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (417371904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(451383552)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (417371904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(451383552)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (417371904)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(14254336)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMPagerScrollBrick(42858240) a GLMPagerBarBr...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (128198400) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		firstCombination: 	nil
		pagerBar: 	a GLMPagerBarBrick(704409856)
		scrollBrick: 	a GLMPagerScrollBrick(42858240)
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root))
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root))
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(775971072 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(915755264 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	GLMTransmission (origins=an OrderedCollection() destination=...etc...
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	nil


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root))...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=1012840192 title=nil pane=a GLMPane(775971072 root...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=83416832 title=nil pane=a GLMPane(775971072 roo...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTInspector(id=83416832 title=nil pane=a GLMPane(7759...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTInspector(id=83416832 title=nil pane=a GLMPane(775971072 root))


GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTInspector(id=83416832 title=nil pane=a GLMPane(775971072 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(775971072 root)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		presentations: 	an OrderedCollection(a GLMPager(id=1012840192 title=nil pane=a G...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTInspector(id=83416832 title=nil pane=a GLMPane(775971072 root)...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GTInspector(id=83416832 title=nil pane=a GLMPane(775971072 root))
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTInspector(id=83416832 title=nil pane=a GLMPane(775971072 roo...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(7759...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTPlayground(id=628995840 title=Playground pane=a GLM...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(77597107...etc...


GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971072 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(775971072 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=83416832 title=nil pane=a ...etc...
		arrangement: 	a GLMTabbedArrangement


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		anObject: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971072...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(741486848)


GLMMorphicWindowRenderer>>render:
	Receiver: a GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971...etc...
		dock: 	a ToolDockingBarMorph(321844992)
		offset: 	4
		bottomOffset: 	0
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		window: 	a GLMSystemWindow(741486848)


GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicWindowRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(7759...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actOnPresentationToolbarUpdated:->GLMMorphicWin...etc...
		format: 	65538
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicWindowRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'
		traitComposition: 	{}
		localSelectors: 	nil


GLMMorphicRenderer>>open:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971...etc...
	Receiver's instance variables: 
		window: 	nil


GTPlayground(GLMCompositePresentation)>>openWith:
	Receiver: a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971072 root))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(775971072 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=83416832 title=nil pane=a ...etc...
		arrangement: 	a GLMTabbedArrangement


GTPlayground(GLMCompositePresentation)>>openOn:with:
	Receiver: a GTPlayground(id=628995840 title=Playground pane=a GLMPane(775971072 root))
	Arguments and temporary variables: 
		anObject: 	a GTPlayPage
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(775971072 root)
		title: 	'Playground'
		titleIcon: 	nil
		transformation: 	nil
		actions: 	an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGeneri...etc...
		condition: 	nil
		implicitNotNil: 	nil
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	nil
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GTInspector(id=83416832 title=nil pane=a ...etc...
		arrangement: 	a GLMTabbedArrangement



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
OnTheFlyConfigurableSimulation>>update:
[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
DependentsArray>>do:
UndefinedObject(Object)>>changed:
UndefinedObject(Object)>>changed
GLMFoundationBrick>>changed
GLMFoundationBrick(Morph)>>color:
GLMFoundationBrick(Morph)>>beTransparent
GLMFoundationBrick>>initialize
GLMFoundationBrick class(Behavior)>>new
GLMPagerBrick(GLMBrick)>>asBrickedMorph
GLMMorphicPagerRenderer>>render:
GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderPager:
GLMPager>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
GLMMorphicTabbedRenderer>>render:
GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>renderTabbedCompositePresentation:
GLMTabbedArrangement>>renderGlamorouslyOn:
GTPlayground(GLMCompositePresentation)>>renderGlamorouslyOn:
GLMMorphicRenderer(GLMRenderer)>>render:
GLMMorphicWindowRenderer(GLMMorphicWidgetRenderer)>>renderObject:
GLMMorphicWindowRenderer>>render:
GLMMorphicWindowRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
GLMMorphicRenderer>>open:
GTPlayground(GLMCompositePresentation)>>openWith:
GTPlayground(GLMCompositePresentation)>>openOn:with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
GTPlayground(GLMCompositePresentation)>>openOn:
GTPlayground>>openOn:
GTPlayground class(GLMCompositePresentation class)>>openOn:
GTPlayground class>>open
PharoCommonTools(ToolRegistry)>>openWorkspace
[ Smalltalk tools openWorkspace ] in [ (aBuilder item: #'System Browser')
	action: [ Smalltalk tools openClassBrowser ];
	keyText: 'o, b';
	icon: Smalltalk tools browser taskbarIcon.
(aBuilder item: Smalltalk tools workspace title asSymbol)
	action: [ Smalltalk tools openWorkspace ];
	keyText: 'o, w';
	icon: Smalltalk tools workspace taskbarIcon.
Smalltalk globals
	at: #TestRunner
	ifPresent: [ :class | 
		(aBuilder item: #'Test Runner')
			action: [ Smalltalk tools openTestRunner ];
			keyText: 'o, u';
			icon: class taskbarIcon ].
Smalltalk globals
	at: #GTSpotter
	ifPresent: [ :class | 
		(aBuilder item: #Spotter)
			action: [ GTSpotterGlobalShortcut openGlobalSpotter ];
			keyText: 'Shift + Enter';
			iconName: #smallFindIcon ].
(aBuilder item: #'Monticello Browser')
	action: [ Smalltalk tools openMonticelloBrowser ];
	keyText: 'o, p';
	icon: Smalltalk tools monticelloBrowser taskbarIcon ] in WorldState class>>mostUsedToolsOn:
BlockClosure>>cull:
[ | selArgCount |
"show cursor in case item opens a new MVC window"
(selArgCount := selector numArgs) = 0
	ifTrue: [ target perform: selector ]
	ifFalse: [ selArgCount = arguments size
			ifTrue: [ target perform: selector withArguments: arguments ]
			ifFalse: [ target perform: selector withArguments: (arguments copyWith: evt) ].
		self showShortcut ].
self changed ] in ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
ToggleMenuItemMorph(MenuItemMorph)>>handleMouseUp:
MouseButtonEvent>>sentTo:
ToggleMenuItemMorph(Morph)>>handleEvent:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
ToggleMenuItemMorph(Morph)>>processEvent:using:
MorphicEventDispatcher>>dispatchDefault:with:
MorphicEventDispatcher>>handleMouseUp:
MouseButtonEvent>>sentTo:
[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:
BlockClosure>>ensure:
MorphicEventDispatcher>>dispatchEvent:with:
MenuMorph(Morph)>>processEvent:using:
MenuMorph(Morph)>>processEvent:
MenuMorph>>handleFocusEvent:
[ ActiveHand := self.
ActiveEvent := anEvent.
result := focusHolder
	handleFocusEvent: (anEvent transformedBy: (focusHolder transformedFrom: self)) ] in HandMorph>>sendFocusEvent:to:clear:
BlockClosure>>on:do:
WorldMorph(PasteUpMorph)>>becomeActiveDuring:
HandMorph>>sendFocusEvent:to:clear:
HandMorph>>sendEvent:focus:clear:
HandMorph>>sendMouseEvent:
HandMorph>>handleEvent:
HandMorph>>processEventsFromQueue:
HandMorph>>processEvents
[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:
Array(SequenceableCollection)>>do:
WorldState>>handsDo:
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
1 October 2017 5:12:19.539111 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#patrol->Robot at (20@20), direction 0 #sniper->Robot ...etc...
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	8
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(131189760)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#hasStepsToGo was sent to nil
1 October 2017 5:12:26.073111 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #hasStepsToGo
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	hasStepsToGo
		exception: 	MessageNotUnderstood: receiver of "hasStepsToGo" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

OnTheFlyConfigurableSimulation>>update:
	Receiver: an OnTheFlyConfigurableSimulation
	Arguments and temporary variables: 
		aRobot: 	nil
	Receiver's instance variables: 
		robotsDict: 	a Dictionary(#patrol->Robot at (20@20), direction 0 #sniper->Robot ...etc...
		terrain: 	a BGSGrid
		pauseFlagLock: 	a Mutex
		isPaused: 	true
		stepCount: 	8
		stepDelay: 	a Delay(100 msecs)
		stepDelayMilliseconds: 	100
		robotClass: 	WalkingBrushRobot
		constructorSelector: 	#withBattery
		lastBotNumber: 	0


[ :aDependent | aDependent update: aParameter ] in UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
		aDependent: 	an OnTheFlyConfigurableSimulation
	Receiver's instance variables: 
nil

DependentsArray>>do:
	Receiver: a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)
	Arguments and temporary variables: 
		aBlock: 	[ :aDependent | aDependent update: aParameter ]
		dep: 	an OnTheFlyConfigurableSimulation
		i: 	2
	Receiver's instance variables: 
a DependentsArray(a BGSGrid an OnTheFlyConfigurableSimulation)

UndefinedObject(Object)>>changed:
	Receiver: nil
	Arguments and temporary variables: 
		aParameter: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>changed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

GLMFoundationBrick>>changed
	Receiver: a GLMFoundationBrick(369599488)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (335072256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>color:
	Receiver: a GLMFoundationBrick(369599488)
	Arguments and temporary variables: 
		aColor: 	Color transparent
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (335072256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>beTransparent
	Receiver: a GLMFoundationBrick(369599488)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (335072256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick>>initialize
	Receiver: a GLMFoundationBrick(369599488)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (335072256)
		brickRoot: 	nil
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick class(Behavior)>>new
	Receiver: GLMFoundationBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Morph
		methodDict: 	a MethodDictionary(#addAllBricks:->GLMFoundationBrick>>#addAllBrick...etc...
		format: 	65545
		layout: 	a FixedLayout
		instanceVariables: 	nil
		organization: 	a ClassOrganization
		subclasses: 	{GLMTabSelectorBrick. GTSpotterMorph}
		name: 	#GLMFoundationBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Brick-Morphic'
		traitComposition: 	{}
		localSelectors: 	nil
		announcer: 	nil


GLMPagerBrick(GLMBrick)>>asBrickedMorph
	Receiver: a GLMPagerBrick(656381952)
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
#add: was sent to nil
24 October 2017 3:55:58.141079 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

UndefinedObject(Object)>>doesNotUnderstand: #add:
	Receiver: nil
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
User Interrupt
24 October 2017 4:05:02.451079 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $

Image: Pharo6.0 [Latest update: #60510]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		scheduler: 	a DelaySpinScheduler
		schedulerResumptionTime: 	3686324702378079


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		scheduler: 	a DelaySpinScheduler
		schedulerResumptionTime: 	3686324702378079


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE

#today was sent to nil

10 November 2017 2:50:22.331738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #today

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	today
		exception: 	MessageNotUnderstood: receiver of "today" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		sis: 	31 December 1900

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|sis|

sis := Date new.

date today.'
		itsSelection: 	a Text for '|sis|

sis := Date new.

date today.'
		itsSelectionString: 	'|sis|

sis := Date new.

date today.'

	Receiver's instance variables: 

		ast: 	DoIt
	| sis |
	sis := Date new.
	^ date today

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(557643264)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1270275

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	1270289
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1270275

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	1270289
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(729932032))(a SearchMorp...etc...

		lastStepTime: 	1270268

		lastStepMessage: 	nil

		lastCycleTime: 	1270289

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1270268

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	1270289
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(729932032))(a SearchMorp...etc...

		lastStepTime: 	1270268

		lastStepMessage: 	nil

		lastCycleTime: 	1270289

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1270268

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(729932032))(a SearchMorp...etc...

		lastStepTime: 	1270268

		lastStepMessage: 	nil

		lastCycleTime: 	1270289

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1270268

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a N...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(729932032))(a SearchMorp...etc...

		lastStepTime: 	1270268

		lastStepMessage: 	nil

		lastCycleTime: 	1270289

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1270268

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(729932032))(a SearchMorp...etc...

		lastStepTime: 	1270268

		lastStepMessage: 	nil

		lastCycleTime: 	1270289

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1270268

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a N...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	Transcript





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

UndefinedObject(Object)>>doesNotUnderstand: #today

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Date did not understand #today

10 November 2017 2:51:07.411738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Date(Object)>>doesNotUnderstand: #today

	Receiver: 31 December 1900

	Arguments and temporary variables: 

		aMessage: 	today
		exception: 	MessageNotUnderstood: Date>>today
		resumeValue: 	nil

	Receiver's instance variables: 

		start: 	1900-12-31T00:00:00-03:00

		duration: 	1:00:00:00





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		sis: 	31 December 1900

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|sis|

sis := Date new.

sis today.'
		itsSelection: 	a Text for '|sis|

sis := Date new.

sis today.'
		itsSelectionString: 	'|sis|

sis := Date new.

sis today.'

	Receiver's instance variables: 

		ast: 	DoIt
	| sis |
	sis := Date new.
	^ sis today

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(557643264)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1315392

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	1315400
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1315392

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	1315400
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(315170816))(a DropList...etc...

		lastStepTime: 	1315378

		lastStepMessage: 	nil

		lastCycleTime: 	1315400

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1315378

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	1315400
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(315170816))(a DropList...etc...

		lastStepTime: 	1315378

		lastStepMessage: 	nil

		lastCycleTime: 	1315400

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1315378

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(315170816))(a DropList...etc...

		lastStepTime: 	1315378

		lastStepMessage: 	nil

		lastCycleTime: 	1315400

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1315378

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a G...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(315170816))(a DropList...etc...

		lastStepTime: 	1315378

		lastStepMessage: 	nil

		lastCycleTime: 	1315400

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1315378

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(315170816))(a DropList...etc...

		lastStepTime: 	1315378

		lastStepMessage: 	nil

		lastCycleTime: 	1315400

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1315378

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a G...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Date(Object)>>doesNotUnderstand: #today

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Date did not understand #year:month:day:

10 November 2017 2:56:07.419738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Date(Object)>>doesNotUnderstand: #year:month:day:

	Receiver: 31 December 1900

	Arguments and temporary variables: 

		aMessage: 	year: 1995 month: 9 day: 2
		exception: 	MessageNotUnderstood: Date>>year:month:day:
		resumeValue: 	nil

	Receiver's instance variables: 

		start: 	1900-12-31T00:00:00-03:00

		duration: 	1:00:00:00





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		sis: 	31 December 1900

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|sis|

sis := Date new.

sis year:1995 month: 9 day: 2.'
		itsSelection: 	a Text for '|sis|

sis := Date new.

sis year:1995 month: 9 day: ...etc...
		itsSelectionString: 	'|sis|

sis := Date new.

sis year:1995 month: 9 day: 2.'

	Receiver's instance variables: 

		ast: 	DoIt
	| sis |
	sis := Date new.
	^ sis year: 1995 month: 9 day: 2

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(557643264)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1615378

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	1615391
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1615378

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	1615391
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1615371

		lastStepMessage: 	nil

		lastCycleTime: 	1615391

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1615371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	1615391
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1615371

		lastStepMessage: 	nil

		lastCycleTime: 	1615391

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1615371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1615371

		lastStepMessage: 	nil

		lastCycleTime: 	1615391

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1615371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a G...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1615371

		lastStepMessage: 	nil

		lastCycleTime: 	1615391

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1615371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1615371

		lastStepMessage: 	nil

		lastCycleTime: 	1615391

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1615371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a G...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Date(Object)>>doesNotUnderstand: #year:month:day:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Date did not understand #yesterday

10 November 2017 2:56:53.227738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Date(Object)>>doesNotUnderstand: #yesterday

	Receiver: 31 December 1900

	Arguments and temporary variables: 

		aMessage: 	yesterday
		exception: 	MessageNotUnderstood: Date>>yesterday
		resumeValue: 	nil

	Receiver's instance variables: 

		start: 	1900-12-31T00:00:00-03:00

		duration: 	1:00:00:00





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		sis: 	31 December 1900

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|sis|

sis := Date new.

sis yesterday.'
		itsSelection: 	a Text for '|sis|

sis := Date new.

sis yesterday.'
		itsSelectionString: 	'|sis|

sis := Date new.

sis yesterday.'

	Receiver's instance variables: 

		ast: 	DoIt
	| sis |
	sis := Date new.
	^ sis yesterday

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(128126976)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(557643264)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1661190

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	1661203
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1661190

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	1661203
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1661183

		lastStepMessage: 	nil

		lastCycleTime: 	1661203

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1661183

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	1661203
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1661183

		lastStepMessage: 	nil

		lastCycleTime: 	1661203

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1661183

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1661183

		lastStepMessage: 	nil

		lastCycleTime: 	1661203

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1661183

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a G...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1661183

		lastStepMessage: 	nil

		lastCycleTime: 	1661203

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1661183

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#autoScroll: -> a RubEditingArea(128126976))(a Rub...etc...

		lastStepTime: 	1661183

		lastStepMessage: 	nil

		lastCycleTime: 	1661203

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(829799936)))

		lastAlarmTime: 	1661183

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(72465408) a NautilusWindow(218882048) a G...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Date(Object)>>doesNotUnderstand: #yesterday

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Date did not understand #today

10 November 2017 2:59:37.785738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Date(Object)>>doesNotUnderstand: #today

	Receiver: 31 December 1900

	Arguments and temporary variables: 

		aMessage: 	today
		exception: 	MessageNotUnderstood: Date>>today
		resumeValue: 	nil

	Receiver's instance variables: 

		start: 	1900-12-31T00:00:00-03:00

		duration: 	1:00:00:00





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		d: 	31 December 1900

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|d|

d := Date new.

d today.'
		itsSelection: 	a Text for '|d|

d := Date new.

d today.'
		itsSelectionString: 	'|d|

d := Date new.

d today.'

	Receiver's instance variables: 

		ast: 	DoIt
	| d |
	d := Date new.
	^ d today

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(222002688)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(222002688)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(109056512)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1825762

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	1825772
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	1825762

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	1825772
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(539770368)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	1825752

		lastStepMessage: 	nil

		lastCycleTime: 	1825772

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(539770368)))

		lastAlarmTime: 	1825752

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	1825772
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	1825752

		lastStepMessage: 	nil

		lastCycleTime: 	1825772

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(539770368)))

		lastAlarmTime: 	1825752

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	1825752

		lastStepMessage: 	nil

		lastCycleTime: 	1825772

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(539770368)))

		lastAlarmTime: 	1825752

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(923229696) a NautilusWindow(218882048) a ...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	1825752

		lastStepMessage: 	nil

		lastCycleTime: 	1825772

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(539770368)))

		lastAlarmTime: 	1825752

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	1825752

		lastStepMessage: 	nil

		lastCycleTime: 	1825772

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(539770368)))

		lastAlarmTime: 	1825752

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(923229696) a NautilusWindow(218882048) a ...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.861 g: 1.0 b: 0.722 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Date(Object)>>doesNotUnderstand: #today

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Error: A DateLapse must be created with the message #from:to:

10 November 2017 3:15:08.722738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



DateLapse class(Object)>>error:

	Receiver: DateLapse

	Arguments and temporary variables: 

		aString: 	'A DateLapse must be created with the message #from:to:'

	Receiver's instance variables: 

		superclass: 	Object

		methodDict: 	a MethodDictionary(#from:to:->DateLapse>>#from:to: )

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	nil

		name: 	#DateLapse

		classPool: 	a Dictionary()

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Objetos1-DateLapse'

		traitComposition: 	{}

		localSelectors: 	nil





DateLapse class>>new

	Receiver: DateLapse

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	Object

		methodDict: 	a MethodDictionary(#from:to:->DateLapse>>#from:to: )

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	nil

		name: 	#DateLapse

		classPool: 	a Dictionary()

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Objetos1-DateLapse'

		traitComposition: 	{}

		localSelectors: 	nil





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		d: 	nil

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|d|

d := DateLapse new.'
		itsSelection: 	a Text for '|d|

d := DateLapse new.'
		itsSelectionString: 	'|d|

d := DateLapse new.'

	Receiver's instance variables: 

		ast: 	DoIt
	| d |
	^ d := DateLapse new

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(964252160)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(964252160)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(798531072)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	2756703

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	2756716
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	2756703

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	2756716
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1051729408)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	2756696

		lastStepMessage: 	nil

		lastCycleTime: 	2756716

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1051729408)))

		lastAlarmTime: 	2756696

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	2756716
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	2756696

		lastStepMessage: 	nil

		lastCycleTime: 	2756716

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1051729408)))

		lastAlarmTime: 	2756696

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	2756696

		lastStepMessage: 	nil

		lastCycleTime: 	2756716

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1051729408)))

		lastAlarmTime: 	2756696

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(895204864) a NautilusWindow(218882048) an...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	2756696

		lastStepMessage: 	nil

		lastCycleTime: 	2756716

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1051729408)))

		lastAlarmTime: 	2756696

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(472637440))(a SearchMorp...etc...

		lastStepTime: 	2756696

		lastStepMessage: 	nil

		lastCycleTime: 	2756716

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1051729408)))

		lastAlarmTime: 	2756696

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(895204864) a NautilusWindow(218882048) an...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

DateLapse class(Object)>>error:

DateLapse class>>new

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Warning

10 November 2017 3:16:19.450738 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



SlotClassBuilder>>validateClassName

	Receiver: a SlotClassBuilder

	Arguments and temporary variables: 



	Receiver's instance variables: 

		installer: 	a PharoClassInstaller

		oldClasses: 	an OrderedCollection()

		newClasses: 	an OrderedCollection()

		classSlots: 	#()

		category: 	nil

		superclass: 	Object

		name: 	#NameOfSubclass

		layoutClass: 	nil

		slots: 	#()

		traitComposition: 	{}

		classTraitComposition: 	{}

		result: 	nil

		sharedPoolsString: 	''

		sharedVariables: 	#()

		comment: 	nil

		commentStamp: 	nil





SlotClassBuilder>>name:

	Receiver: a SlotClassBuilder

	Arguments and temporary variables: 

		aName: 	#NameOfSubclass

	Receiver's instance variables: 

		installer: 	a PharoClassInstaller

		oldClasses: 	an OrderedCollection()

		newClasses: 	an OrderedCollection()

		classSlots: 	#()

		category: 	nil

		superclass: 	Object

		name: 	#NameOfSubclass

		layoutClass: 	nil

		slots: 	#()

		traitComposition: 	{}

		classTraitComposition: 	{}

		result: 	nil

		sharedPoolsString: 	''

		sharedVariables: 	#()

		comment: 	nil

		commentStamp: 	nil





[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self classLayout class;
	slots: f asSlotCollection;
	sharedVariablesFromString: d;
	sharedPools: s;
	category: cat;
	environment: self environment;
	copyClassSlotsFromExistingClass ] in Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:

	Receiver: Object

	Arguments and temporary variables: 

		t: 	#NameOfSubclass
		f: 	'from to'
		d: 	''
		s: 	''
		cat: 	'Objetos1-DateLapse'
		builder: 	a SlotClassBuilder

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





PharoClassInstaller class(AbstractClassInstaller class)>>make:

	Receiver: PharoClassInstaller

	Arguments and temporary variables: 

		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
		builder: 	a SlotClassBuilder

	Receiver's instance variables: 

		superclass: 	AbstractClassInstaller

		methodDict: 	a MethodDictionary(#basicClassDefinitionChangedFrom:to:using:->Phar...etc...

		format: 	65540

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	nil

		name: 	#PharoClassInstaller

		classPool: 	a Dictionary()

		sharedPools: 	nil

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Slot-ClassBuilder'

		traitComposition: 	{}

		localSelectors: 	nil





Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:

	Receiver: Object

	Arguments and temporary variables: 

		t: 	#NameOfSubclass
		f: 	'from to'
		d: 	''
		s: 	''
		cat: 	'Objetos1-DateLapse'

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVariableNames
	classVariableNames: someClassVariableNames
	poolDictionaries: someSharedPoolNames
	category: aCategory ] in Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:

	Receiver: Object

	Arguments and temporary variables: 

		aName: 	#NameOfSubclass
		aTraitCompositionOrArray: 	#()
		someInstanceVariableNames: 	'from to'
		someClassVariableNames: 	''
		someSharedPoolNames: 	''
		aCategory: 	'Objetos1-DateLapse'

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





[ | newClass |
"Create the class and set the trait composition"
newClass := aBlock value.
newClass setTraitComposition: aTraitComposition asTraitComposition.
SystemAnnouncer uniqueInstance classModificationAppliedTo: newClass.
newClass ] in Object class(Class)>>subclass:uses:with:

	Receiver: Object

	Arguments and temporary variables: 

		aName: 	#NameOfSubclass
		aTraitComposition: 	#()
		aBlock: 	[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVar...etc...
		newClass: 	nil

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





SystemDictionary(Dictionary)>>at:ifPresent:ifAbsent:

	Receiver: a SystemDictionary(lots of globals)

	Arguments and temporary variables: 

		key: 	#NameOfSubclass
		aPresentBlock: 	[ :old | 
| copyOfOld newClass |
copyOfOld := old copy.

"Modify...etc...
		anAbsentBlock: 	[ | newClass |
"Create the class and set the trait composition"
...etc...

	Receiver's instance variables: 

		tally: 	6676

		array: 	an Array(#ChangeSetClassChangesTest->ChangeSetClassChangesTest nil #Text...etc...

		cachedClassNames: 	an OrderedCollection(#AColorSelectorMorph #AGroupContentHasBe...etc...

		cachedNonClassNames: 	an OrderedCollection(#ActiveEvent #ActiveHand #ActiveWorld...etc...





Object class(Class)>>subclass:uses:with:

	Receiver: Object

	Arguments and temporary variables: 

		aName: 	#NameOfSubclass
		aTraitComposition: 	#()
		aBlock: 	[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVar...etc...

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:

	Receiver: Object

	Arguments and temporary variables: 

		aName: 	#NameOfSubclass
		aTraitCompositionOrArray: 	#()
		someInstanceVariableNames: 	'from to'
		someClassVariableNames: 	''
		someSharedPoolNames: 	''
		aCategory: 	'Objetos1-DateLapse'

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





Object class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:

	Receiver: Object

	Arguments and temporary variables: 

		t: 	#NameOfSubclass
		f: 	'from to'
		d: 	''
		s: 	''
		cat: 	'Objetos1-DateLapse'

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





Object class(Class)>>subclass:instanceVariableNames:classVariableNames:package:

	Receiver: Object

	Arguments and temporary variables: 

		aSubclassSymbol: 	#NameOfSubclass
		instVarNames: 	'from to'
		classVarNames: 	''
		aPackageSymbol: 	'Objetos1-DateLapse'

	Receiver's instance variables: 

		superclass: 	ProtoObject

		methodDict: 	a MethodDictionary(size 408)

		format: 	0

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{BalloonState. UndefinedObject. Boolean. FillStyle. ConnectionQueue...etc...

		name: 	#Object

		classPool: 	a Dictionary(#DependentsFields->a WeakIdentityKeyDictionary(TextStyl...etc...

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Kernel-Objects'

		traitComposition: 	{}

		localSelectors: 	nil





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 



	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	a ReadStream
		itsSelection: 	nil
		itsSelectionString: 	nil

	Receiver's instance variables: 

		ast: 	DoIt
	^ Object
		subclass: #NameOfSubclass
		instanceVariableNames: 'from ...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





NautilusUI(AbstractTool)>>compileANewClassFrom:notifying:startingFrom:

	Receiver: a NautilusUI

	Arguments and temporary variables: 

		aString: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''from to''
...etc...
		aController: 	a RubScrolledTextMorph(463724544)
		aClass: 	nil
		oldClass: 	nil
		class: 	nil
		newClassName: 	'NameOfSubclass'
		defTokens: 	an OrderedCollection('Object' 'subclass:' '#NameOfSubclass' 'instanc...etc...
		keywdIx: 	2
		envt: 	a SystemDictionary(lots of globals)

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...

		announceur: 	nil

		model: 	a Nautilus

		window: 	a NautilusWindow(218882048)

		sourceCodePanel: 	a PanelMorph(600252416)

		fullDisplayedComment: 	false

		sourceCodeContainer: 	a PanelMorph(637919232)

		shouldUpdateTitle: 	true

		contentSelection: 	a Text for ''

		acceptor: 	a ClassDefinitionAcceptor

		commentWidget: 	nil

		sourceTextWidget: 	a RubScrolledTextMorph(463724544)

		sourceCodeSelectionInterval: 	(66 to: 65)

		sourceTextModel: 	a RubScrolledTextModel

		methodClassifier: 	nil

		commentTextModel: 	a RubScrolledTextModel

		instanceButtonWidget: 	a PluggableToggleButtonMorph(211886080)

		categoryWidget: 	a CategoryWidget

		methodWidget: 	a MethodWidget

		classWidget: 	a ClassWidget

		packageWidget: 	a PackageWidget

		packagePatternString: 	'mot|Collections-Abstract'

		packagePattern: 	a RxMatcher

		searchWidget: 	a SearchMorph(472637440)





NautilusUI(AbstractNautilusUI)>>compileAClassFrom:notifying:

	Receiver: a NautilusUI

	Arguments and temporary variables: 

		aString: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''from to''
...etc...
		aController: 	a RubScrolledTextMorph(463724544)

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...

		announceur: 	nil

		model: 	a Nautilus

		window: 	a NautilusWindow(218882048)

		sourceCodePanel: 	a PanelMorph(600252416)

		fullDisplayedComment: 	false

		sourceCodeContainer: 	a PanelMorph(637919232)

		shouldUpdateTitle: 	true

		contentSelection: 	a Text for ''

		acceptor: 	a ClassDefinitionAcceptor

		commentWidget: 	nil

		sourceTextWidget: 	a RubScrolledTextMorph(463724544)

		sourceCodeSelectionInterval: 	(66 to: 65)

		sourceTextModel: 	a RubScrolledTextModel

		methodClassifier: 	nil

		commentTextModel: 	a RubScrolledTextModel

		instanceButtonWidget: 	a PluggableToggleButtonMorph(211886080)

		categoryWidget: 	a CategoryWidget

		methodWidget: 	a MethodWidget

		classWidget: 	a ClassWidget

		packageWidget: 	a PackageWidget

		packagePatternString: 	'mot|Collections-Abstract'

		packagePattern: 	a RxMatcher

		searchWidget: 	a SearchMorph(472637440)





ClassDefinitionAcceptor>>accept:notifying:

	Receiver: a ClassDefinitionAcceptor

	Arguments and temporary variables: 

		aText: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''from to''
	c...etc...
		aController: 	a RubScrolledTextMorph(463724544)

	Receiver's instance variables: 

		model: 	a NautilusUI





NautilusUI>>compileSource:notifying:

	Receiver: a NautilusUI

	Arguments and temporary variables: 

		aText: 	'Object subclass: #NameOfSubclass
	instanceVariableNames: ''from to''
	c...etc...
		aController: 	a RubScrolledTextMorph(463724544)

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...

		announceur: 	nil

		model: 	a Nautilus

		window: 	a NautilusWindow(218882048)

		sourceCodePanel: 	a PanelMorph(600252416)

		fullDisplayedComment: 	false

		sourceCodeContainer: 	a PanelMorph(637919232)

		shouldUpdateTitle: 	true

		contentSelection: 	a Text for ''

		acceptor: 	a ClassDefinitionAcceptor

		commentWidget: 	nil

		sourceTextWidget: 	a RubScrolledTextMorph(463724544)

		sourceCodeSelectionInterval: 	(66 to: 65)

		sourceTextModel: 	a RubScrolledTextModel

		methodClassifier: 	nil

		commentTextModel: 	a RubScrolledTextModel

		instanceButtonWidget: 	a PluggableToggleButtonMorph(211886080)

		categoryWidget: 	a CategoryWidget

		methodWidget: 	a MethodWidget

		classWidget: 	a ClassWidget

		packageWidget: 	a PackageWidget

		packagePatternString: 	'mot|Collections-Abstract'

		packagePattern: 	a RxMatcher

		searchWidget: 	a SearchMorph(472637440)





NautilusUI(AbstractNautilusUI)>>whenTextAcceptedInView:

	Receiver: a NautilusUI

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a CategoryWidget a MethodWidget a ClassWidget a P...etc...

		announceur: 	nil

		model: 	a Nautilus

		window: 	a NautilusWindow(218882048)

		sourceCodePanel: 	a PanelMorph(600252416)

		fullDisplayedComment: 	false

		sourceCodeContainer: 	a PanelMorph(637919232)

		shouldUpdateTitle: 	true

		contentSelection: 	a Text for ''

		acceptor: 	a ClassDefinitionAcceptor

		commentWidget: 	nil

		sourceTextWidget: 	a RubScrolledTextMorph(463724544)

		sourceCodeSelectionInterval: 	(66 to: 65)

		sourceTextModel: 	a RubScrolledTextModel

		methodClassifier: 	nil

		commentTextModel: 	a RubScrolledTextModel

		instanceButtonWidget: 	a PluggableToggleButtonMorph(211886080)

		categoryWidget: 	a CategoryWidget

		methodWidget: 	a MethodWidget

		classWidget: 	a ClassWidget

		packageWidget: 	a PackageWidget

		packagePatternString: 	'mot|Collections-Abstract'

		packagePattern: 	a RxMatcher

		searchWidget: 	a SearchMorph(472637440)





MessageSend>>value:

	Receiver: MessageSend(#whenTextAcceptedInView: -> a NautilusUI)

	Arguments and temporary variables: 

		anObject: 	a RubTextAccepted

	Receiver's instance variables: 

		receiver: 	a NautilusUI

		selector: 	#whenTextAcceptedInView:

		arguments: 	#()





MessageSend>>cull:

	Receiver: MessageSend(#whenTextAcceptedInView: -> a NautilusUI)

	Arguments and temporary variables: 

		arg: 	a RubTextAccepted

	Receiver's instance variables: 

		receiver: 	a NautilusUI

		selector: 	#whenTextAcceptedInView:

		arguments: 	#()





MessageSend>>cull:cull:

	Receiver: MessageSend(#whenTextAcceptedInView: -> a NautilusUI)

	Arguments and temporary variables: 

		arg1: 	a RubTextAccepted
		arg2: 	an Announcer

	Receiver's instance variables: 

		receiver: 	a NautilusUI

		selector: 	#whenTextAcceptedInView:

		arguments: 	#()





[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

	Receiver: an AnnouncementSubscription

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted

	Receiver's instance variables: 

		announcer: 	an Announcer

		announcementClass: 	RubTextAccepted

		subscriber: 	a NautilusUI

		action: 	MessageSend(#whenTextAcceptedInView: -> a NautilusUI)





BlockClosure>>on:do:

	Receiver: [ action cull: anAnnouncement cull: announcer ]

	Arguments and temporary variables: 

		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...

	Receiver's instance variables: 

		outerContext: 	AnnouncementSubscription>>deliver:

		startpc: 	47

		numArgs: 	0





BlockClosure>>on:fork:

	Receiver: [ action cull: anAnnouncement cull: announcer ]

	Arguments and temporary variables: 

		exception: 	UnhandledError
		handlerAction: 	[ :ex | ex pass ]

	Receiver's instance variables: 

		outerContext: 	AnnouncementSubscription>>deliver:

		startpc: 	47

		numArgs: 	0





AnnouncementSubscription>>deliver:

	Receiver: an AnnouncementSubscription

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted

	Receiver's instance variables: 

		announcer: 	an Announcer

		announcementClass: 	RubTextAccepted

		subscriber: 	a NautilusUI

		action: 	MessageSend(#whenTextAcceptedInView: -> a NautilusUI)





[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:

	Receiver: a SubscriptionRegistry

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription)
		startIndex: 	1
		index: 	1
		subscription: 	an AnnouncementSubscription

	Receiver's instance variables: 

		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...

		monitor: 	a Semaphore()





BlockClosure>>ifCurtailed:

	Receiver: [ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ]

	Arguments and temporary variables: 

		aBlock: 	[ self deliver: anAnnouncement to: subs startingAt: index + 1 ]
		complete: 	nil
		result: 	nil

	Receiver's instance variables: 

		outerContext: 	SubscriptionRegistry>>deliver:to:startingAt:

		startpc: 	54

		numArgs: 	0





SubscriptionRegistry>>deliver:to:startingAt:

	Receiver: a SubscriptionRegistry

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription)
		startIndex: 	1
		subscription: 	an AnnouncementSubscription
		index: 	1

	Receiver's instance variables: 

		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...

		monitor: 	a Semaphore()





SubscriptionRegistry>>deliver:to:

	Receiver: a SubscriptionRegistry

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted
		subs: 	an Array(an AnnouncementSubscription)

	Receiver's instance variables: 

		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...

		monitor: 	a Semaphore()





SubscriptionRegistry>>deliver:

	Receiver: a SubscriptionRegistry

	Arguments and temporary variables: 

		interestedSubscriptions: 	an Array(an AnnouncementSubscription)
		anAnnouncement: 	a RubTextAccepted

	Receiver's instance variables: 

		subscriptions: 	an IdentitySet(an AnnouncementSubscription an AnnouncementSubscr...etc...

		monitor: 	a Semaphore()





Announcer>>announce:

	Receiver: an Announcer

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAccepted
		announcement: 	a RubTextAccepted

	Receiver's instance variables: 

		registry: 	a SubscriptionRegistry





RubScrolledTextMorph>>acceptContents

	Receiver: a RubScrolledTextMorph(463724544)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(440.0@402.0) corner: (1257.0@651.0)

		owner: 	a PanelMorph(600252416)

		submorphs: 	an Array(a RubTextScrollPane(150544384) a RubAdornmentDisplayer(3570...etc...

		fullBounds: 	(440@402) corner: (1257@651)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (172503552) [other:  (announcer -> an Announcer) (k...etc...

		hasEditingConflicts: 	false

		hasUnacceptedEdits: 	false

		alwaysAccept: 	nil

		setTextSelector: 	#setText:from:

		getTextSelector: 	#getText

		getSelectionSelector: 	#primarySelectionInterval

		setSelectionSelector: 	nil

		autoAccept: 	false

		scrollPane: 	a RubTextScrollPane(150544384)

		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(476782592) a RubTextSe...etc...

		enabled: 	true

		highlights: 	an OrderedCollection()





RubScrolledTextMorph>>whenTextAcceptRequest:

	Receiver: a RubScrolledTextMorph(463724544)

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAcceptRequest

	Receiver's instance variables: 

		bounds: 	(440.0@402.0) corner: (1257.0@651.0)

		owner: 	a PanelMorph(600252416)

		submorphs: 	an Array(a RubTextScrollPane(150544384) a RubAdornmentDisplayer(3570...etc...

		fullBounds: 	(440@402) corner: (1257@651)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (172503552) [other:  (announcer -> an Announcer) (k...etc...

		hasEditingConflicts: 	false

		hasUnacceptedEdits: 	false

		alwaysAccept: 	nil

		setTextSelector: 	#setText:from:

		getTextSelector: 	#getText

		getSelectionSelector: 	#primarySelectionInterval

		setSelectionSelector: 	nil

		autoAccept: 	false

		scrollPane: 	a RubTextScrollPane(150544384)

		rulers: 	a SortedCollection(a NautilusAnnotationDisplayer(476782592) a RubTextSe...etc...

		enabled: 	true

		highlights: 	an OrderedCollection()





MessageSend>>value:

	Receiver: MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(463724544))

	Arguments and temporary variables: 

		anObject: 	a RubTextAcceptRequest

	Receiver's instance variables: 

		receiver: 	a RubScrolledTextMorph(463724544)

		selector: 	#whenTextAcceptRequest:

		arguments: 	#()





MessageSend>>cull:

	Receiver: MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(463724544))

	Arguments and temporary variables: 

		arg: 	a RubTextAcceptRequest

	Receiver's instance variables: 

		receiver: 	a RubScrolledTextMorph(463724544)

		selector: 	#whenTextAcceptRequest:

		arguments: 	#()





MessageSend>>cull:cull:

	Receiver: MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(463724544))

	Arguments and temporary variables: 

		arg1: 	a RubTextAcceptRequest
		arg2: 	an Announcer

	Receiver's instance variables: 

		receiver: 	a RubScrolledTextMorph(463724544)

		selector: 	#whenTextAcceptRequest:

		arguments: 	#()





[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

	Receiver: an AnnouncementSubscription

	Arguments and temporary variables: 

		anAnnouncement: 	a RubTextAcceptRequest

	Receiver's instance variables: 

		announcer: 	an Announcer

		announcementClass: 	RubTextAcceptRequest

		subscriber: 	a RubScrolledTextMorph(463724544)

		action: 	MessageSend(#whenTextAcceptRequest: -> a RubScrolledTextMorph(463724544...etc...





BlockClosure>>on:do:

	Receiver: [ action cull: anAnnouncement cull: announcer ]

	Arguments and temporary variables: 

		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...

	Receiver's instance variables: 

		outerContext: 	AnnouncementSubscription>>deliver:

		startpc: 	47

		numArgs: 	0







--- The full stack ---

SlotClassBuilder>>validateClassName

SlotClassBuilder>>name:

[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self classLayout class;
	slots: f asSlotCollection;
	sharedVariablesFromString: d;
	sharedPools: s;
	category: cat;
	environment: self environment;
	copyClassSlotsFromExistingClass ] in Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:

PharoClassInstaller class(AbstractClassInstaller class)>>make:

Object class(Class)>>private_subclass:instanceVariableNames:classVariableNames:poolDictionaries:category:

[ self
	private_subclass: aName
	instanceVariableNames: someInstanceVariableNames
	classVariableNames: someClassVariableNames
	poolDictionaries: someSharedPoolNames
	category: aCategory ] in Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:

[ | newClass |
"Create the class and set the trait composition"
newClass := aBlock value.
newClass setTraitComposition: aTraitComposition asTraitComposition.
SystemAnnouncer uniqueInstance classModificationAppliedTo: newClass.
newClass ] in Object class(Class)>>subclass:uses:with:

SystemDictionary(Dictionary)>>at:ifPresent:ifAbsent:

Object class(Class)>>subclass:uses:with:

Object class(Class)>>subclass:uses:instanceVariableNames:classVariableNames:poolDictionaries:package:

Object class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:

Object class(Class)>>subclass:instanceVariableNames:classVariableNames:package:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

NautilusUI(AbstractTool)>>compileANewClassFrom:notifying:startingFrom:

NautilusUI(AbstractNautilusUI)>>compileAClassFrom:notifying:

ClassDefinitionAcceptor>>accept:notifying:

NautilusUI>>compileSource:notifying:

NautilusUI(AbstractNautilusUI)>>whenTextAcceptedInView:

MessageSend>>value:

MessageSend>>cull:

MessageSend>>cull:cull:

[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

BlockClosure>>on:do:

BlockClosure>>on:fork:

AnnouncementSubscription>>deliver:

[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:

BlockClosure>>ifCurtailed:

SubscriptionRegistry>>deliver:to:startingAt:

SubscriptionRegistry>>deliver:to:

SubscriptionRegistry>>deliver:

Announcer>>announce:

RubScrolledTextMorph>>acceptContents

RubScrolledTextMorph>>whenTextAcceptRequest:

MessageSend>>value:

MessageSend>>cull:

MessageSend>>cull:cull:

[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

BlockClosure>>on:do:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

BlockClosure>>on:fork:

AnnouncementSubscription>>deliver:

[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:

BlockClosure>>ifCurtailed:

SubscriptionRegistry>>deliver:to:startingAt:

SubscriptionRegistry>>deliver:to:

SubscriptionRegistry>>deliver:

Announcer>>announce:

RubEditingArea(RubAbstractTextArea)>>announce:

[ :view | view textArea announce: (RubTextAcceptRequest morph: view textArea) ] in RubScrolledTextModel>>acceptEditsInView

RubScrolledTextMorph>>whenConfigurationChanged:

MessageSend>>value:

MessageSend>>cull:

MessageSend>>cull:cull:

[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

BlockClosure>>on:do:

BlockClosure>>on:fork:

AnnouncementSubscription>>deliver:

[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:

BlockClosure>>ifCurtailed:

SubscriptionRegistry>>deliver:to:startingAt:

SubscriptionRegistry>>deliver:to:

SubscriptionRegistry>>deliver:

Announcer>>announce:

RubScrolledTextMorph>>whenConfigurationChangedFromModel:

MessageSend>>value:

MessageSend>>cull:

MessageSend>>cull:cull:

[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

BlockClosure>>on:do:

BlockClosure>>on:fork:

AnnouncementSubscription>>deliver:

[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:

BlockClosure>>ifCurtailed:

SubscriptionRegistry>>deliver:to:startingAt:

SubscriptionRegistry>>deliver:to:

SubscriptionRegistry>>deliver:

Announcer>>announce:

RubScrolledTextModel>>announce:

RubScrolledTextModel>>reconfigureViewWith:

RubScrolledTextModel>>acceptEditsInView

NautilusUI(AbstractNautilusUI)>>acceptSourceCodeFromView

NautilusUI(AbstractNautilusUI)>>okToChange

NautilusUI(AbstractNautilusUI)>>okToChangeSourceAndComment

NautilusUI>>selectedClassWithoutChangingSelection:

ClassWidget>>selectedClassIndex:

FTPluggableIconListMorphAdaptor>>selectionChangedUpdateIndex:

FTPluggableIconListMorphAdaptor>>selectionChanged:

MessageSend>>value:

MessageSend>>cull:

MessageSend>>cull:cull:

[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:

BlockClosure>>on:do:

BlockClosure>>on:fork:

AnnouncementSubscription>>deliver:

[ "Ensure delivery to remaining announcements" subscription deliver: anAnnouncement ] in SubscriptionRegistry>>deliver:to:startingAt:

BlockClosure>>ifCurtailed:

SubscriptionRegistry>>deliver:to:startingAt:

SubscriptionRegistry>>deliver:to:

SubscriptionRegistry>>deliver:

Announcer>>announce:

FTPluggableIconListMorphAdaptor(Morph)>>doAnnounce:

FTPluggableIconListMorphAdaptor(FTTableMorph)>>selectRowIndexes:andMakeVisibleIf:

FTPluggableIconListMorphAdaptor(FTTableMorph)>>selectRowIndexes:

FTPluggableIconListMorphAdaptor(FTTableMorph)>>selectRowIndex:

FTMultipleSelection(FTSelectionStrategy)>>toggleRowIndex:

FTMultipleSelection>>selectRowIndex:event:

FTPluggableIconListMorphAdaptor(FTTableMorph)>>selectRowIndex:event:

FTPluggableIconListMorphAdaptor(FTTableMorph)>>mouseDown:

FTPluggableIconListMorphAdaptor(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

FTPluggableIconListMorphAdaptor(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

FTPluggableIconListMorphAdaptor(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

PanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

NautilusWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Date did not understand #substractDate:

14 November 2017 1:04:01.879783 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Date(Object)>>doesNotUnderstand: #substractDate:

	Receiver: 1 July 2017

	Arguments and temporary variables: 

		aMessage: 	substractDate: 1 June 2017
		exception: 	MessageNotUnderstood: Date>>substractDate:
		resumeValue: 	nil

	Receiver's instance variables: 

		start: 	2017-07-01T00:00:00-03:00

		duration: 	1:00:00:00





DateLapse>>sizeInDays

	Receiver: a DateLapse

	Arguments and temporary variables: 



	Receiver's instance variables: 

		from: 	1 June 2017

		to: 	1 July 2017





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		d: 	a DateLapse
		f1: 	1 June 2017
		f2: 	1 July 2017
		f3: 	6 August 2017

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|d f1 f2 f3|


f1 := Date year: 2017 month: 6 day: 1.
 
f2 := ...etc...
		itsSelection: 	a Text for '|d f1 f2 f3|


f1 := Date year: 2017 month: 6 day: 1....etc...
		itsSelectionString: 	'|d f1 f2 f3|


f1 := Date year: 2017 month: 6 day: 1.
 
f2...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| d f1 f2 f3 |
	f1 := Date year: 2017 month: 6 day: 1.
	f2 := Date y...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

#substractDate: was sent to nil

14 November 2017 1:04:35.844783 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #substractDate:

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	substractDate: nil
		exception: 	MessageNotUnderstood: receiver of "substractDate:" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 



	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'f3 substractDate: f1.'
		itsSelection: 	a Text for 'f3 substractDate: f1.'
		itsSelectionString: 	'f3 substractDate: f1.'

	Receiver's instance variables: 

		ast: 	DoIt
	^ f3 substractDate: f1

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

#item was sent to nil

14 November 2017 1:45:14.836783 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #item

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	item
		exception: 	MessageNotUnderstood: receiver of "item" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



PackageTreeModel>>acceptDroppingMorph:event:inMorph:

	Receiver: a PackageTreeModel

	Arguments and temporary variables: 

		aMorph: 	a TransferMorph(158443264)
		evt: 	[(373@427.0) dropEvent nil]
		aTreeMorph: 	a MorphTreeMorph(33338624)
		target: 	nil
		items: 	nil

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a MorphTreeMorph(33338624))

		announceur: 	an Announcer

		selection: 	nil

		rootItems: 	nil

		autoMultiSelection: 	nil

		headerLabel: 	nil

		multiSelection: 	nil

		wrapBlockOrSelector: 	nil

		isCheckList: 	nil

		enabled: 	nil

		model: 	a NautilusUI





MorphTreeMorph>>acceptDroppingMorph:event:

	Receiver: a MorphTreeMorph(33338624)

	Arguments and temporary variables: 

		aMorph: 	a TransferMorph(158443264)
		evt: 	[(373@427.0) dropEvent nil]

	Receiver's instance variables: 

		bounds: 	(328.0@287.0) corner: (511.0@507.0)

		owner: 	a PanelMorph(125918976)

		submorphs: 	an Array(a ScrollBar(1011569408) a Morph(404132096) a MorphTreeTrans...etc...

		fullBounds: 	(328.0@287.0) corner: (512.0@507.0)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (831638272) [other:  (announcer -> an Announcer) (d...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		model: 	a PackageTreeModel

		scrollBar: 	a ScrollBar(450879232)

		scroller: 	a MorphTreeTransformMorph(1006216448)

		getMenuSelector: 	#menu:shifted:

		getMenuTitleSelector: 	nil

		hasFocus: 	false

		hScrollBar: 	a ScrollBar(1011569408)

		columns: 	an OrderedCollection(a MorphTreeColumn)

		potentialDropMorph: 	nil

		rowInset: 	0

		columnInset: 	0

		columnResizers: 	an OrderedCollection()

		withHLines: 	false

		preferedPaneColor: 	nil

		indentGap: 	20

		expandedToggleImage: 	an ImageMorph(531737856)

		notExpandedToggleImage: 	an ImageMorph(168709376)

		resizerWidth: 	3

		gapAfterToggle: 	5

		hasToggleAtRoot: 	nil

		topHeader: 	a Morph(404132096)

		topHeaderBackground: 	Color transparent

		unboundLastColumn: 	true

		columnDropUnabled: 	nil

		columnColors: 	{Color transparent. Color transparent}

		rowColors: 	{(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0). (Color r: 0.13 g: 0.13 ...etc...

		nodeList: 	an OrderedCollection(Node(a MethodGroup ( Last Modified Methods )) No...etc...

		iconBlock: 	nil

		treeLineWidth: 	0

		lineColorBlock: 	nil

		treeLineDashes: 	nil

		listManager: 	a MorphTreeListManager

		mouseOverAllowed: 	true

		maxNodeWidth: 	220.0

		enabled: 	true





MorphTreeMorph(Morph)>>handleDropMorph:

	Receiver: a MorphTreeMorph(33338624)

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

#'~>' was sent to nil

14 November 2017 2:01:41.934783 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #'~>'

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	~> nil
		exception: 	MessageNotUnderstood: receiver of "~>" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 



	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'f1 ~> f2.'
		itsSelection: 	a Text for 'f1 ~> f2.'
		itsSelectionString: 	'f1 ~> f2.'

	Receiver's instance variables: 

		ast: 	DoIt
	^ f1 ~> f2

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(988012032)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | result inspect ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(988012032)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(1030230528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(988012032)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@292)

		owner: 	a TransformWithLayoutMorph(100913664)

		submorphs: 	an Array(a RubPrimarySelectionMorph(952341248) a RubCursor(657325568...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (653034752) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(577084928)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(657325568)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(840431360))

		getMenuPolicy: 	a RubEditingArea(988012032)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(1030230528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvTHERE_BE_DRAGONS_HERE

Instance of Random class did not understand #between:and:

23 November 2017 11:54:24.409124 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Random class(Object)>>doesNotUnderstand: #between:and:

	Receiver: Random

	Arguments and temporary variables: 

		aMessage: 	between: 1 and: 100
		exception: 	MessageNotUnderstood: Random class>>between:and:
		resumeValue: 	nil

	Receiver's instance variables: 

		superclass: 	Object

		methodDict: 	a MethodDictionary(#initialize->Random>>#initialize #next->Random>>...etc...

		format: 	65541

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{SharedRandom}

		name: 	#Random

		classPool: 	a Dictionary()

		sharedPools: 	nil

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Random-Core'

		traitComposition: 	{}

		localSelectors: 	nil





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		t: 	nil

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|t|

t := Random between:1 and: 100.'
		itsSelection: 	a Text for '|t|

t := Random between:1 and: 100.'
		itsSelectionString: 	'|t|

t := Random between:1 and: 100.'

	Receiver's instance variables: 

		ast: 	DoIt
	| t |
	^ t := Random between: 1 and: 100

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(582967040)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(582967040)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(1037499648)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	454735

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	454748
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	454735

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	454748
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	454727

		lastStepMessage: 	nil

		lastCycleTime: 	454748

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	454727

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	454748
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	454727

		lastStepMessage: 	nil

		lastCycleTime: 	454748

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	454727

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	454727

		lastStepMessage: 	nil

		lastCycleTime: 	454748

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	454727

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(547962624) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	454727

		lastStepMessage: 	nil

		lastCycleTime: 	454748

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	454727

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	454727

		lastStepMessage: 	nil

		lastCycleTime: 	454748

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	454727

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(547962624) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	Transcript





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Random class(Object)>>doesNotUnderstand: #between:and:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Random did not understand #between:and:

23 November 2017 11:55:20.164124 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Random(Object)>>doesNotUnderstand: #between:and:

	Receiver: a Random

	Arguments and temporary variables: 

		aMessage: 	between: 1 and: 100
		exception: 	MessageNotUnderstood: Random>>between:and:
		resumeValue: 	nil

	Receiver's instance variables: 

		seed: 	346709323

		a: 	16807.0

		m: 	2.147483647e9

		q: 	127773.0

		r: 	2836.0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		t: 	a Random

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|t|

t := Random new.

t between: 1 and: 100.'
		itsSelection: 	a Text for '|t|

t := Random new.

t between: 1 and: 100.'
		itsSelectionString: 	'|t|

t := Random new.

t between: 1 and: 100.'

	Receiver's instance variables: 

		ast: 	DoIt
	| t |
	t := Random new.
	^ t between: 1 and: 100

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(582967040)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(582967040)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(1037499648)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	510510

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	510523
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	510510

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	510523
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	510502

		lastStepMessage: 	nil

		lastCycleTime: 	510523

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	510502

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	510523
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	510502

		lastStepMessage: 	nil

		lastCycleTime: 	510523

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	510502

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	510502

		lastStepMessage: 	nil

		lastCycleTime: 	510523

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	510502

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(547962624) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	510502

		lastStepMessage: 	nil

		lastCycleTime: 	510523

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	510502

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	510502

		lastStepMessage: 	nil

		lastCycleTime: 	510523

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(155044096)))

		lastAlarmTime: 	510502

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(547962624) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Random(Object)>>doesNotUnderstand: #between:and:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of SmallInteger did not understand #,

24 November 2017 12:02:13.992999 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



SmallInteger(Object)>>doesNotUnderstand: #,

	Receiver: 54

	Arguments and temporary variables: 

		aMessage: 	, 53
		exception: 	MessageNotUnderstood: SmallInteger>>,
		resumeValue: 	nil

	Receiver's instance variables: 

54



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		t: 	a SortedCollection()

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|t|

t := SortedCollection new.

t add: (54,53,78,1,5,9,32).'
		itsSelection: 	a Text for '|t|

t := SortedCollection new.

t add: (54,53,78,1,5...etc...
		itsSelectionString: 	'|t|

t := SortedCollection new.

t add: (54,53,78,1,5,9,32...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| t |
	t := SortedCollection new.
	^ t add: 54 , 53 , 78 , 1 , 5 , 9...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(842760448)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

Instance of BlockClosure did not understand #do:

24 November 2017 12:11:30.065999 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



BlockClosure(Object)>>doesNotUnderstand: #do:

	Receiver: [ 54 , 78 , 1 , 90 , 21 , 67 ]

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

#item was sent to nil

25 November 2017 2:58:14.390292 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #item

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	item
		exception: 	MessageNotUnderstood: receiver of "item" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



PackageTreeModel>>acceptDroppingMorph:event:inMorph:

	Receiver: a PackageTreeModel

	Arguments and temporary variables: 

		aMorph: 	a TransferMorph(687422208)
		evt: 	[(252@268.0) dropEvent nil]
		aTreeMorph: 	a MorphTreeMorph(33338624)
		target: 	nil
		items: 	nil

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a MorphTreeMorph(33338624))

		announceur: 	an Announcer

		selection: 	nil

		rootItems: 	nil

		autoMultiSelection: 	nil

		headerLabel: 	nil

		multiSelection: 	nil

		wrapBlockOrSelector: 	nil

		isCheckList: 	nil

		enabled: 	nil

		model: 	a NautilusUI





MorphTreeMorph>>acceptDroppingMorph:event:

	Receiver: a MorphTreeMorph(33338624)

	Arguments and temporary variables: 

		aMorph: 	a TransferMorph(687422208)
		evt: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		bounds: 	(196.0@127.0) corner: (379.0@375.0)

		owner: 	a PanelMorph(125918976)

		submorphs: 	an Array(a ScrollBar(1011569408) a Morph(404132096) a MorphTreeTrans...etc...

		fullBounds: 	(196@127) corner: (380@375)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (831638272) [other:  (announcer -> an Announcer) (d...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		model: 	a PackageTreeModel

		scrollBar: 	a ScrollBar(450879232)

		scroller: 	a MorphTreeTransformMorph(1006216448)

		getMenuSelector: 	#menu:shifted:

		getMenuTitleSelector: 	nil

		hasFocus: 	false

		hScrollBar: 	a ScrollBar(1011569408)

		columns: 	an OrderedCollection(a MorphTreeColumn)

		potentialDropMorph: 	nil

		rowInset: 	0

		columnInset: 	0

		columnResizers: 	an OrderedCollection()

		withHLines: 	false

		preferedPaneColor: 	nil

		indentGap: 	20

		expandedToggleImage: 	an ImageMorph(531737856)

		notExpandedToggleImage: 	an ImageMorph(168709376)

		resizerWidth: 	3

		gapAfterToggle: 	5

		hasToggleAtRoot: 	nil

		topHeader: 	a Morph(404132096)

		topHeaderBackground: 	Color transparent

		unboundLastColumn: 	true

		columnDropUnabled: 	nil

		columnColors: 	{Color transparent. Color transparent}

		rowColors: 	{(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0). (Color r: 0.13 g: 0.13 ...etc...

		nodeList: 	an OrderedCollection(Node(a MethodGroup ( Last Modified Methods )) No...etc...

		iconBlock: 	nil

		treeLineWidth: 	0

		lineColorBlock: 	nil

		treeLineDashes: 	nil

		listManager: 	a MorphTreeListManager

		mouseOverAllowed: 	true

		maxNodeWidth: 	205.0

		enabled: 	true





MorphTreeMorph(Morph)>>handleDropMorph:

	Receiver: a MorphTreeMorph(33338624)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a TransferMorph(687422208)
		localPt: 	(307.5@302.5)

	Receiver's instance variables: 

		bounds: 	(196.0@127.0) corner: (379.0@375.0)

		owner: 	a PanelMorph(125918976)

		submorphs: 	an Array(a ScrollBar(1011569408) a Morph(404132096) a MorphTreeTrans...etc...

		fullBounds: 	(196@127) corner: (380@375)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (831638272) [other:  (announcer -> an Announcer) (d...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		model: 	a PackageTreeModel

		scrollBar: 	a ScrollBar(450879232)

		scroller: 	a MorphTreeTransformMorph(1006216448)

		getMenuSelector: 	#menu:shifted:

		getMenuTitleSelector: 	nil

		hasFocus: 	false

		hScrollBar: 	a ScrollBar(1011569408)

		columns: 	an OrderedCollection(a MorphTreeColumn)

		potentialDropMorph: 	nil

		rowInset: 	0

		columnInset: 	0

		columnResizers: 	an OrderedCollection()

		withHLines: 	false

		preferedPaneColor: 	nil

		indentGap: 	20

		expandedToggleImage: 	an ImageMorph(531737856)

		notExpandedToggleImage: 	an ImageMorph(168709376)

		resizerWidth: 	3

		gapAfterToggle: 	5

		hasToggleAtRoot: 	nil

		topHeader: 	a Morph(404132096)

		topHeaderBackground: 	Color transparent

		unboundLastColumn: 	true

		columnDropUnabled: 	nil

		columnColors: 	{Color transparent. Color transparent}

		rowColors: 	{(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0). (Color r: 0.13 g: 0.13 ...etc...

		nodeList: 	an OrderedCollection(Node(a MethodGroup ( Last Modified Methods )) No...etc...

		iconBlock: 	nil

		treeLineWidth: 	0

		lineColorBlock: 	nil

		treeLineDashes: 	nil

		listManager: 	a MorphTreeListManager

		mouseOverAllowed: 	true

		maxNodeWidth: 	205.0

		enabled: 	true





DropEvent>>sentTo:

	Receiver: [(252@268.0) dropEvent nil]

	Arguments and temporary variables: 

		anObject: 	a MorphTreeMorph(33338624)

	Receiver's instance variables: 

		timeStamp: 	nil

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		position: 	(252@268.0)

		contents: 	a TransferMorph(687422208)

		wasHandled: 	true





MorphTreeMorph(Morph)>>handleEvent:

	Receiver: a MorphTreeMorph(33338624)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		bounds: 	(196.0@127.0) corner: (379.0@375.0)

		owner: 	a PanelMorph(125918976)

		submorphs: 	an Array(a ScrollBar(1011569408) a Morph(404132096) a MorphTreeTrans...etc...

		fullBounds: 	(196@127) corner: (380@375)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (831638272) [other:  (announcer -> an Announcer) (d...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		model: 	a PackageTreeModel

		scrollBar: 	a ScrollBar(450879232)

		scroller: 	a MorphTreeTransformMorph(1006216448)

		getMenuSelector: 	#menu:shifted:

		getMenuTitleSelector: 	nil

		hasFocus: 	false

		hScrollBar: 	a ScrollBar(1011569408)

		columns: 	an OrderedCollection(a MorphTreeColumn)

		potentialDropMorph: 	nil

		rowInset: 	0

		columnInset: 	0

		columnResizers: 	an OrderedCollection()

		withHLines: 	false

		preferedPaneColor: 	nil

		indentGap: 	20

		expandedToggleImage: 	an ImageMorph(531737856)

		notExpandedToggleImage: 	an ImageMorph(168709376)

		resizerWidth: 	3

		gapAfterToggle: 	5

		hasToggleAtRoot: 	nil

		topHeader: 	a Morph(404132096)

		topHeaderBackground: 	Color transparent

		unboundLastColumn: 	true

		columnDropUnabled: 	nil

		columnColors: 	{Color transparent. Color transparent}

		rowColors: 	{(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0). (Color r: 0.13 g: 0.13 ...etc...

		nodeList: 	an OrderedCollection(Node(a MethodGroup ( Last Modified Methods )) No...etc...

		iconBlock: 	nil

		treeLineWidth: 	0

		lineColorBlock: 	nil

		treeLineDashes: 	nil

		listManager: 	a MorphTreeListManager

		mouseOverAllowed: 	true

		maxNodeWidth: 	205.0

		enabled: 	true





MorphicEventDispatcher>>dispatchDropEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a MorphTreeMorph(33338624)
		inside: 	true
		index: 	4
		morphs: 	an Array(a ScrollBar(1011569408) a Morph(404132096) a MorphTreeTransfor...etc...
		child: 	a MorphTreeTransformMorph(1006216448)
		localEvt: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleDropMorph:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





DropEvent>>sentTo:

	Receiver: [(252@268.0) dropEvent nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	nil

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		position: 	(252@268.0)

		contents: 	a TransferMorph(687422208)

		wasHandled: 	true





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a MorphTreeMorph(33338624)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a MorphTreeMorph(33338624)

	Receiver's instance variables: 

		morph: 	nil





MorphTreeMorph(Morph)>>processEvent:using:

	Receiver: a MorphTreeMorph(33338624)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(196.0@127.0) corner: (379.0@375.0)

		owner: 	a PanelMorph(125918976)

		submorphs: 	an Array(a ScrollBar(1011569408) a Morph(404132096) a MorphTreeTrans...etc...

		fullBounds: 	(196@127) corner: (380@375)

		color: 	(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0)

		extension: 	a MorphExtension (831638272) [other:  (announcer -> an Announcer) (d...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		model: 	a PackageTreeModel

		scrollBar: 	a ScrollBar(450879232)

		scroller: 	a MorphTreeTransformMorph(1006216448)

		getMenuSelector: 	#menu:shifted:

		getMenuTitleSelector: 	nil

		hasFocus: 	false

		hScrollBar: 	a ScrollBar(1011569408)

		columns: 	an OrderedCollection(a MorphTreeColumn)

		potentialDropMorph: 	nil

		rowInset: 	0

		columnInset: 	0

		columnResizers: 	an OrderedCollection()

		withHLines: 	false

		preferedPaneColor: 	nil

		indentGap: 	20

		expandedToggleImage: 	an ImageMorph(531737856)

		notExpandedToggleImage: 	an ImageMorph(168709376)

		resizerWidth: 	3

		gapAfterToggle: 	5

		hasToggleAtRoot: 	nil

		topHeader: 	a Morph(404132096)

		topHeaderBackground: 	Color transparent

		unboundLastColumn: 	true

		columnDropUnabled: 	nil

		columnColors: 	{Color transparent. Color transparent}

		rowColors: 	{(Color r: 0.13 g: 0.13 b: 0.13 alpha: 1.0). (Color r: 0.13 g: 0.13 ...etc...

		nodeList: 	an OrderedCollection(Node(a MethodGroup ( Last Modified Methods )) No...etc...

		iconBlock: 	nil

		treeLineWidth: 	0

		lineColorBlock: 	nil

		treeLineDashes: 	nil

		listManager: 	a MorphTreeListManager

		mouseOverAllowed: 	true

		maxNodeWidth: 	205.0

		enabled: 	true





MorphicEventDispatcher>>dispatchDropEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a PanelMorph(125918976)
		inside: 	false
		index: 	1
		morphs: 	an Array(a MorphTreeMorph(33338624) a SearchMorph(764313856))
		child: 	a MorphTreeMorph(33338624)
		localEvt: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleDropMorph:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





DropEvent>>sentTo:

	Receiver: [(252@268.0) dropEvent nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	nil

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		position: 	(252@268.0)

		contents: 	a TransferMorph(687422208)

		wasHandled: 	false





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a PanelMorph(125918976)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a PanelMorph(125918976)

	Receiver's instance variables: 

		morph: 	nil





PanelMorph(Morph)>>processEvent:using:

	Receiver: a PanelMorph(125918976)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(196.0@100.0) corner: (379.0@375.0)

		owner: 	a NautilusWindow(1049373952)

		submorphs: 	an Array(a MorphTreeMorph(33338624) a SearchMorph(764313856))

		fullBounds: 	(196@100) corner: (379@375)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (379008768) [sticky] 

		borderWidth: 	0

		borderColor: 	Color veryDarkGray





MorphicEventDispatcher>>dispatchDropEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a NautilusWindow(1049373952)
		inside: 	false
		index: 	11
		morphs: 	an Array(a WindowEdgeGripMorph(417015552) a WindowEdgeGripMorph(9303872...etc...
		child: 	a PanelMorph(125918976)
		localEvt: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleDropMorph:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





DropEvent>>sentTo:

	Receiver: [(252@268.0) dropEvent nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	nil

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		position: 	(252@268.0)

		contents: 	a TransferMorph(687422208)

		wasHandled: 	false





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a NautilusWindow(1049373952)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a NautilusWindow(1049373952)

	Receiver's instance variables: 

		morph: 	nil





NautilusWindow(Morph)>>processEvent:using:

	Receiver: a NautilusWindow(1049373952)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(191.0@41.0) corner: (1041.0@721.0)

		owner: 	a WorldMorph(562956288) [world]

		submorphs: 	an Array(a WindowEdgeGripMorph(417015552) a WindowEdgeGripMorph(9303...etc...

		fullBounds: 	(191@41) corner: (1041@721)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (566552832) [other:  (paneColor -> Color veryDarkGr...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		model: 	a NautilusUI

		labelString: 	'LibroDeLiteratura'

		stripes: 	an Array(a Morph(112565504) a Morph(1031762688))

		label: 	a LabelMorph(115530240)'LibroDeLiteratura'

		closeBox: 	a MultistateButtonMorph(1062427904)

		collapseBox: 	a MultistateButtonMorph(126570752)

		paneMorphs: 	an Array(a QANautilusPluginMorph(602269952) a PanelMorph(661031168)...etc...

		collapsedFrame: 	nil

		fullFrame: 	(191.0@41.0) corner: (1041.0@721.0)

		isCollapsed: 	false

		menuBox: 	a MultistateButtonMorph(980394752)

		mustNotClose: 	false

		labelWidgetAllowance: 	98

		updatablePanes: 	#()

		labelArea: 	an AlignmentMorph(463958784)

		expandBox: 	a MultistateButtonMorph(523769600)

		embeddable: 	nil

		menuBuilder: 	nil

		isResizeable: 	true





MorphicEventDispatcher>>dispatchDropEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a WorldMorph(562956288) [world]
		inside: 	false
		index: 	1
		morphs: 	an Array(a NautilusWindow(1049373952) a GLMSystemWindow(15686144) an Im...etc...
		child: 	a NautilusWindow(1049373952)
		localEvt: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleDropMorph:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		morph: 	nil





DropEvent>>sentTo:

	Receiver: [(252@268.0) dropEvent nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	nil

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		position: 	(252@268.0)

		contents: 	a TransferMorph(687422208)

		wasHandled: 	false





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		aMorph: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		morph: 	nil





WorldMorph(Morph)>>processEvent:using:

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1361)

		owner: 	nil

		submorphs: 	an Array(a NautilusWindow(1049373952) a GLMSystemWindow(15686144) an...etc...

		fullBounds: 	(0@0) corner: (1278@1361)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph(Morph)>>processEvent:

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1361)

		owner: 	nil

		submorphs: 	an Array(a NautilusWindow(1049373952) a GLMSystemWindow(15686144) an...etc...

		fullBounds: 	(0@0) corner: (1278@1361)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





HandMorph>>sendEvent:focus:clear:

	Receiver: a HandMorph(58125568)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		focusHolder: 	nil
		aBlock: 	[ nil ]
		result: 	nil

	Receiver's instance variables: 

		bounds: 	(252@268.0) corner: (268@284.0)

		owner: 	a WorldMorph(562956288) [world]

		submorphs: 	#()

		fullBounds: 	nil

		color: 	Color blue

		extension: 	a MorphExtension (185609472) [other:  (kmDispatcher -> a KMDispatche...etc...

		mouseFocus: 	a MorphTreeMorph(33338624)

		keyboardFocus: 	a TransferMorph(687422208)

		eventListeners: 	nil

		mouseListeners: 	nil

		keyboardListeners: 	nil

		mouseClickState: 	nil

		mouseOverHandler: 	a MouseOverHandler

		lastMouseEvent: 	[(252@268) mouseDown yellow 16368718 nil]

		targetOffset: 	(2.0@22.0)

		damageRecorder: 	a DamageRecorder

		cacheCanvas: 	nil

		cachedCanvasHasHoles: 	true

		temporaryCursor: 	nil

		temporaryCursorOffset: 	nil

		hardwareCursor: 	nil

		hasChanged: 	false

		savedPatch: 	Form(115x55x32)

		lastEventBuffer: 	#(1 16368718 252 268 2 0 1 1)

		lastKeyScanCode: 	9

		combinedChar: 	nil

		eventSource: 	nil

		lastSystemEvent: 	nil

		captureBlock: 	nil

		recentModifiers: 	0





HandMorph>>sendEvent:focus:

	Receiver: a HandMorph(58125568)

	Arguments and temporary variables: 

		anEvent: 	[(252@268.0) dropEvent nil]
		focusHolder: 	nil

	Receiver's instance variables: 

		bounds: 	(252@268.0) corner: (268@284.0)

		owner: 	a WorldMorph(562956288) [world]

		submorphs: 	#()

		fullBounds: 	nil

		color: 	Color blue

		extension: 	a MorphExtension (185609472) [other:  (kmDispatcher -> a KMDispatche...etc...

		mouseFocus: 	a MorphTreeMorph(33338624)

		keyboardFocus: 	a TransferMorph(687422208)

		eventListeners: 	nil

		mouseListeners: 	nil

		keyboardListeners: 	nil

		mouseClickState: 	nil

		mouseOverHandler: 	a MouseOverHandler

		lastMouseEvent: 	[(252@268) mouseDown yellow 16368718 nil]

		targetOffset: 	(2.0@22.0)

		damageRecorder: 	a DamageRecorder

		cacheCanvas: 	nil

		cachedCanvasHasHoles: 	true

		temporaryCursor: 	nil

		temporaryCursorOffset: 	nil

		hardwareCursor: 	nil

		hasChanged: 	false

		savedPatch: 	Form(115x55x32)

		lastEventBuffer: 	#(1 16368718 252 268 2 0 1 1)

		lastKeyScanCode: 	9

		combinedChar: 	nil

		eventSource: 	nil

		lastSystemEvent: 	nil

		captureBlock: 	nil

		recentModifiers: 	0





HandMorph>>dropMorph:event:

	Receiver: a HandMorph(58125568)

	Arguments and temporary variables: 

		aMorph: 	a TransferMorph(687422208)
		anEvent: 	[(252@268) mouseDown yellow 16368718 nil]
		event: 	[(252@268.0) dropEvent nil]
		dropped: 	a TransferMorph(687422208)

	Receiver's instance variables: 

		bounds: 	(252@268.0) corner: (268@284.0)

		owner: 	a WorldMorph(562956288) [world]

		submorphs: 	#()

		fullBounds: 	nil

		color: 	Color blue

		extension: 	a MorphExtension (185609472) [other:  (kmDispatcher -> a KMDispatche...etc...

		mouseFocus: 	a MorphTreeMorph(33338624)

		keyboardFocus: 	a TransferMorph(687422208)

		eventListeners: 	nil

		mouseListeners: 	nil

		keyboardListeners: 	nil

		mouseClickState: 	nil

		mouseOverHandler: 	a MouseOverHandler

		lastMouseEvent: 	[(252@268) mouseDown yellow 16368718 nil]

		targetOffset: 	(2.0@22.0)

		damageRecorder: 	a DamageRecorder

		cacheCanvas: 	nil

		cachedCanvasHasHoles: 	true

		temporaryCursor: 	nil

		temporaryCursorOffset: 	nil

		hardwareCursor: 	nil

		hasChanged: 	false

		savedPatch: 	Form(115x55x32)

		lastEventBuffer: 	#(1 16368718 252 268 2 0 1 1)

		lastKeyScanCode: 	9

		combinedChar: 	nil

		eventSource: 	nil

		lastSystemEvent: 	nil

		captureBlock: 	nil

		recentModifiers: 	0





[ :m | "Drop back to front to maintain z-order" self dropMorph: m event: anEvent ] in HandMorph>>dropMorphs:

	Receiver: a HandMorph(58125568)

	Arguments and temporary variables: 

		anEvent: 	[(252@268) mouseDown yellow 16368718 nil]
		m: 	a TransferMorph(687422208)

	Receiver's instance variables: 

		bounds: 	(252@268.0) corner: (268@284.0)

		owner: 	a WorldMorph(562956288) [world]

		submorphs: 	#()

		fullBounds: 	nil

		color: 	Color blue

		extension: 	a MorphExtension (185609472) [other:  (kmDispatcher -> a KMDispatche...etc...

		mouseFocus: 	a MorphTreeMorph(33338624)

		keyboardFocus: 	a TransferMorph(687422208)

		eventListeners: 	nil

		mouseListeners: 	nil

		keyboardListeners: 	nil

		mouseClickState: 	nil

		mouseOverHandler: 	a MouseOverHandler

		lastMouseEvent: 	[(252@268) mouseDown yellow 16368718 nil]

		targetOffset: 	(2.0@22.0)

		damageRecorder: 	a DamageRecorder

		cacheCanvas: 	nil

		cachedCanvasHasHoles: 	true

		temporaryCursor: 	nil

		temporaryCursorOffset: 	nil

		hardwareCursor: 	nil

		hasChanged: 	false

		savedPatch: 	Form(115x55x32)

		lastEventBuffer: 	#(1 16368718 252 268 2 0 1 1)

		lastKeyScanCode: 	9

		combinedChar: 	nil

		eventSource: 	nil

		lastSystemEvent: 	nil

		captureBlock: 	nil

		recentModifiers: 	0







--- The full stack ---

UndefinedObject(Object)>>doesNotUnderstand: #item

PackageTreeModel>>acceptDroppingMorph:event:inMorph:

MorphTreeMorph>>acceptDroppingMorph:event:

MorphTreeMorph(Morph)>>handleDropMorph:

DropEvent>>sentTo:

MorphTreeMorph(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchDropEvent:with:

MorphicEventDispatcher>>handleDropMorph:

DropEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

MorphTreeMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchDropEvent:with:

MorphicEventDispatcher>>handleDropMorph:

DropEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

PanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchDropEvent:with:

MorphicEventDispatcher>>handleDropMorph:

DropEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

NautilusWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchDropEvent:with:

MorphicEventDispatcher>>handleDropMorph:

DropEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendEvent:focus:

HandMorph>>dropMorph:event:

[ :m | "Drop back to front to maintain z-order" self dropMorph: m event: anEvent ] in HandMorph>>dropMorphs:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

Array(SequenceableCollection)>>reverseDo:

HandMorph(Morph)>>submorphsReverseDo:

HandMorph>>dropMorphs:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

#new was sent to nil

25 November 2017 7:59:23.760292 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #new

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		cliente: 	a Cliente
		facturador: 	nil
		l1: 	nil
		l2: 	nil
		l3: 	nil
		col: 	nil

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente withNomb...etc...
		itsSelection: 	a Text for '|cliente facturador l1 l2 l3 col|

cliente := Cliente...etc...
		itsSelectionString: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente with...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| cliente facturador l1 l2 l3 col |
	cliente := Cliente withNombre: ...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(487846144))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	18081371

		lastStepMessage: 	nil

		lastCycleTime: 	18081393

		alarms: 	a Heap()

		lastAlarmTime: 	18081371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	18081371

		lastStepMessage: 	nil

		lastCycleTime: 	18081393

		alarms: 	a Heap()

		lastAlarmTime: 	18081371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	18081371

		lastStepMessage: 	nil

		lastCycleTime: 	18081393

		alarms: 	a Heap()

		lastAlarmTime: 	18081371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(1012717312))(a DropLis...etc...

		lastStepTime: 	18081371

		lastStepMessage: 	nil

		lastCycleTime: 	18081393

		alarms: 	a Heap()

		lastAlarmTime: 	18081371

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(658775296)

	Arguments and temporary variables: 

		aPoint: 	(151@473.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		bounds: 	(149.0@465.0) corner: (356.0@699.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(872900352)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(149.0@465.0) corner: (356.0@699.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (7927552) [other:  (basicColor -> Color veryDarkGra...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(303288064)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(658775296)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(149.0@465.0) corner: (356.0@699.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(872900352)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(149.0@465.0) corner: (356.0@699.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (7927552) [other:  (basicColor -> Color veryDarkGra...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(303288064)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(658775296)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(149.0@465.0) corner: (356.0@699.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(872900352)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(149.0@465.0) corner: (356.0@699.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (7927552) [other:  (basicColor -> Color veryDarkGra...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(303288064)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		shiftKeyState: 	false
		menu: 	a MenuMorph(658775296)

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(487846144))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(RubAbstractTextArea)>>mouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		evt: 	[(60@19) mouseDown yellow 34437359 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(487846144))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(Morph)>>handleMouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(487846144))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MouseButtonEvent>>sentTo:

	Receiver: [(60@19) mouseDown yellow 34437359 nil]

	Arguments and temporary variables: 

		anObject: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		timeStamp: 	34437359

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(60@19)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





RubEditingArea(Morph)>>handleEvent:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(487846144))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]
		aMorph: 	a RubEditingArea(712853760)
		globalPt: 	(60@19)
		localEvt: 	[(60@19) mouseDown yellow 34437359 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(713215232)
		morphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688))
		handler: 	a RubEditingArea(712853760)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(60@19) mouseDown yellow 34437359 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34437359

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(60@19)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





RubEditingArea(Morph)>>processEvent:using:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(60@19) mouseDown yellow 34437359 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(487846144))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)
		globalPt: 	(151@473)
		localEvt: 	[(60@19) mouseDown yellow 34437359 nil]
		index: 	1
		child: 	a RubEditingArea(712853760)
		morphs: 	an Array(a RubEditingArea(712853760))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(151@473) mouseDown yellow 34437359 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34437359

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(151@473)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





TransformWithLayoutMorph(Morph)>>processEvent:using:

	Receiver: a TransformWithLayoutMorph(124561152)

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(91@454) corner: (1140@783)

		owner: 	a RubTextScrollPane(778080000)

		submorphs: 	an Array(a RubEditingArea(712853760))

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (893491968) [other:  (kmDispatcher -> a KMDispatche...etc...

		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-91@ -454))

		smoothing: 	1

		localBounds: 	nil





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]
		aMorph: 	a RubTextScrollPane(778080000)
		globalPt: 	(151@473)
		localEvt: 	[(151@473) mouseDown yellow 34437359 nil]
		index: 	2
		child: 	a TransformWithLayoutMorph(124561152)
		morphs: 	an Array(a RubScrollBar(642786560) a TransformWithLayoutMorph(124561152...etc...
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(151@473) mouseDown yellow 34437359 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(151@473) mouseDown yellow 34437359 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34437359

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(151@473)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2







--- The full stack ---

UndefinedObject(Object)>>doesNotUnderstand: #new

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

RubEditingArea(RubAbstractTextArea)>>handleEdit:

[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldState>>doOneSubCycleFor:

WorldMorph>>doOneSubCycle

MenuMorph>>invokeModalAt:in:allowKeyboard:

MenuMorph>>invokeModal:

MenuMorph>>invokeModal

RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

RubEditingArea(RubAbstractTextArea)>>mouseDown:

RubEditingArea(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

RubEditingArea(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubEditingArea(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

TransformWithLayoutMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubTextScrollPane(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubScrolledTextMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

LazyTabGroupMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMMorphBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMScrollPaneBandBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerScrollBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMFoundationBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMSystemWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

#new was sent to nil

25 November 2017 7:59:48.126292 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #new

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		cliente: 	a Cliente
		facturador: 	nil
		l1: 	nil
		l2: 	nil
		l3: 	nil
		col: 	nil

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente withNomb...etc...
		itsSelection: 	a Text for '|cliente facturador l1 l2 l3 col|

cliente := Cliente...etc...
		itsSelectionString: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente with...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| cliente facturador l1 l2 l3 col |
	cliente := Cliente withNombre: ...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(675209472))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	18105740

		lastStepMessage: 	nil

		lastCycleTime: 	18105761

		alarms: 	a Heap()

		lastAlarmTime: 	18105740

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	18105740

		lastStepMessage: 	nil

		lastCycleTime: 	18105761

		alarms: 	a Heap()

		lastAlarmTime: 	18105740

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	18105740

		lastStepMessage: 	nil

		lastCycleTime: 	18105761

		alarms: 	a Heap()

		lastAlarmTime: 	18105740

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	18105740

		lastStepMessage: 	nil

		lastCycleTime: 	18105761

		alarms: 	a Heap()

		lastAlarmTime: 	18105740

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(1064186624)

	Arguments and temporary variables: 

		aPoint: 	(142@442.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		bounds: 	(140.0@434.0) corner: (347.0@668.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(372300032)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(140.0@434.0) corner: (347.0@668.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (943613184) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(555718400)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(1064186624)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(140.0@434.0) corner: (347.0@668.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(372300032)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(140.0@434.0) corner: (347.0@668.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (943613184) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(555718400)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(1064186624)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(140.0@434.0) corner: (347.0@668.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(372300032)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(140.0@434.0) corner: (347.0@668.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (943613184) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(555718400)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		shiftKeyState: 	false
		menu: 	a MenuMorph(1064186624)

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(675209472))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(RubAbstractTextArea)>>mouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		evt: 	[(42.0@19.0) mouseDown yellow 34461843 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(675209472))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(Morph)>>handleMouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(675209472))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MouseButtonEvent>>sentTo:

	Receiver: [(42.0@19.0) mouseDown yellow 34461843 nil]

	Arguments and temporary variables: 

		anObject: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		timeStamp: 	34461843

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(42.0@19.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





RubEditingArea(Morph)>>handleEvent:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(675209472))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]
		aMorph: 	a RubEditingArea(712853760)
		globalPt: 	(42.0@19.0)
		localEvt: 	[(42.0@19.0) mouseDown yellow 34461843 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(713215232)
		morphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688))
		handler: 	a RubEditingArea(712853760)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(42.0@19.0) mouseDown yellow 34461843 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34461843

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(42.0@19.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





RubEditingArea(Morph)>>processEvent:using:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(42.0@19.0) mouseDown yellow 34461843 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(675209472))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)
		globalPt: 	(142@442)
		localEvt: 	[(42.0@19.0) mouseDown yellow 34461843 nil]
		index: 	1
		child: 	a RubEditingArea(712853760)
		morphs: 	an Array(a RubEditingArea(712853760))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(142@442) mouseDown yellow 34461843 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34461843

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(142@442)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





TransformWithLayoutMorph(Morph)>>processEvent:using:

	Receiver: a TransformWithLayoutMorph(124561152)

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(100.0@423.0) corner: (1149.0@752.0)

		owner: 	a RubTextScrollPane(778080000)

		submorphs: 	an Array(a RubEditingArea(712853760))

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (893491968) [other:  (kmDispatcher -> a KMDispatche...etc...

		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-100.0@ -423....etc...

		smoothing: 	1

		localBounds: 	nil





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]
		aMorph: 	a RubTextScrollPane(778080000)
		globalPt: 	(142@442)
		localEvt: 	[(142@442) mouseDown yellow 34461843 nil]
		index: 	2
		child: 	a TransformWithLayoutMorph(124561152)
		morphs: 	an Array(a RubScrollBar(642786560) a TransformWithLayoutMorph(124561152...etc...
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(142@442) mouseDown yellow 34461843 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(142@442) mouseDown yellow 34461843 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34461843

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(142@442)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2







--- The full stack ---

UndefinedObject(Object)>>doesNotUnderstand: #new

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

RubEditingArea(RubAbstractTextArea)>>handleEdit:

[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldState>>doOneSubCycleFor:

WorldMorph>>doOneSubCycle

MenuMorph>>invokeModalAt:in:allowKeyboard:

MenuMorph>>invokeModal:

MenuMorph>>invokeModal

RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

RubEditingArea(RubAbstractTextArea)>>mouseDown:

RubEditingArea(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

RubEditingArea(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubEditingArea(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

TransformWithLayoutMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubTextScrollPane(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubScrolledTextMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

LazyTabGroupMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMMorphBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMScrollPaneBandBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerScrollBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMFoundationBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMSystemWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

#new was sent to nil

25 November 2017 7:59:56.849292 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #new

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	new
		exception: 	MessageNotUnderstood: receiver of "new" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 



	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'facturador := facturador new.'
		itsSelection: 	a Text for 'facturador := facturador new.'
		itsSelectionString: 	'facturador := facturador new.'

	Receiver's instance variables: 

		ast: 	DoIt
	^ facturador := facturador new

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498712832))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	18114463

		lastStepMessage: 	nil

		lastCycleTime: 	18114484

		alarms: 	a Heap()

		lastAlarmTime: 	18114463

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	18114463

		lastStepMessage: 	nil

		lastCycleTime: 	18114484

		alarms: 	a Heap()

		lastAlarmTime: 	18114463

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	18114463

		lastStepMessage: 	nil

		lastCycleTime: 	18114484

		alarms: 	a Heap()

		lastAlarmTime: 	18114463

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	18114463

		lastStepMessage: 	nil

		lastCycleTime: 	18114484

		alarms: 	a Heap()

		lastAlarmTime: 	18114463

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(370368256)

	Arguments and temporary variables: 

		aPoint: 	(184@518.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		bounds: 	(182.0@510.0) corner: (389.0@744.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(639142144)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(182.0@510.0) corner: (389.0@744.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (239502592) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(350420224)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(370368256)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(182.0@510.0) corner: (389.0@744.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(639142144)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(182.0@510.0) corner: (389.0@744.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (239502592) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(350420224)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(370368256)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(182.0@510.0) corner: (389.0@744.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(639142144)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(182.0@510.0) corner: (389.0@744.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (239502592) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(350420224)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		shiftKeyState: 	false
		menu: 	a MenuMorph(370368256)

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498712832))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(RubAbstractTextArea)>>mouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		evt: 	[(84.0@95.0) mouseDown yellow 34470375 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498712832))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(Morph)>>handleMouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498712832))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MouseButtonEvent>>sentTo:

	Receiver: [(84.0@95.0) mouseDown yellow 34470375 nil]

	Arguments and temporary variables: 

		anObject: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		timeStamp: 	34470375

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(84.0@95.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





RubEditingArea(Morph)>>handleEvent:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498712832))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]
		aMorph: 	a RubEditingArea(712853760)
		globalPt: 	(84.0@95.0)
		localEvt: 	[(84.0@95.0) mouseDown yellow 34470375 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(713215232)
		morphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688))
		handler: 	a RubEditingArea(712853760)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(84.0@95.0) mouseDown yellow 34470375 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34470375

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(84.0@95.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





RubEditingArea(Morph)>>processEvent:using:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(84.0@95.0) mouseDown yellow 34470375 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(498712832))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)
		globalPt: 	(184@518)
		localEvt: 	[(84.0@95.0) mouseDown yellow 34470375 nil]
		index: 	1
		child: 	a RubEditingArea(712853760)
		morphs: 	an Array(a RubEditingArea(712853760))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(184@518) mouseDown yellow 34470375 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34470375

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(184@518)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





TransformWithLayoutMorph(Morph)>>processEvent:using:

	Receiver: a TransformWithLayoutMorph(124561152)

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(100.0@423.0) corner: (1149.0@752.0)

		owner: 	a RubTextScrollPane(778080000)

		submorphs: 	an Array(a RubEditingArea(712853760))

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (893491968) [other:  (kmDispatcher -> a KMDispatche...etc...

		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-100.0@ -423....etc...

		smoothing: 	1

		localBounds: 	nil





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]
		aMorph: 	a RubTextScrollPane(778080000)
		globalPt: 	(184@518)
		localEvt: 	[(184@518) mouseDown yellow 34470375 nil]
		index: 	2
		child: 	a TransformWithLayoutMorph(124561152)
		morphs: 	an Array(a RubScrollBar(642786560) a TransformWithLayoutMorph(124561152...etc...
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184@518) mouseDown yellow 34470375 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(184@518) mouseDown yellow 34470375 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	34470375

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(184@518)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2







--- The full stack ---

UndefinedObject(Object)>>doesNotUnderstand: #new

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

RubEditingArea(RubAbstractTextArea)>>handleEdit:

[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldState>>doOneSubCycleFor:

WorldMorph>>doOneSubCycle

MenuMorph>>invokeModalAt:in:allowKeyboard:

MenuMorph>>invokeModal:

MenuMorph>>invokeModal

RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

RubEditingArea(RubAbstractTextArea)>>mouseDown:

RubEditingArea(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

RubEditingArea(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubEditingArea(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

TransformWithLayoutMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubTextScrollPane(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubScrolledTextMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

LazyTabGroupMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMMorphBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMScrollPaneBandBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerScrollBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMFoundationBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMSystemWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

#totalDescontado was sent to nil

25 November 2017 8:24:14.052292 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



UndefinedObject(Object)>>doesNotUnderstand: #totalDescontado

	Receiver: nil

	Arguments and temporary variables: 

		aMessage: 	totalDescontado
		exception: 	MessageNotUnderstood: receiver of "totalDescontado" is nil
		resumeValue: 	nil

	Receiver's instance variables: 

nil



UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 



	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'facturador totalDescontado.'
		itsSelection: 	a Text for 'facturador totalDescontado.'
		itsSelectionString: 	'facturador totalDescontado.'

	Receiver's instance variables: 

		ast: 	DoIt
	^ facturador totalDescontado

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	19571665

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	19571673
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	19571665

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	19571673
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543762688)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	19571652

		lastStepMessage: 	nil

		lastCycleTime: 	19571673

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543762688)))

		lastAlarmTime: 	19571652

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	19571673
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	19571652

		lastStepMessage: 	nil

		lastCycleTime: 	19571673

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543762688)))

		lastAlarmTime: 	19571652

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	19571652

		lastStepMessage: 	nil

		lastCycleTime: 	19571673

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543762688)))

		lastAlarmTime: 	19571652

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	19571652

		lastStepMessage: 	nil

		lastCycleTime: 	19571673

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543762688)))

		lastAlarmTime: 	19571652

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	19571652

		lastStepMessage: 	nil

		lastCycleTime: 	19571673

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(543762688)))

		lastAlarmTime: 	19571652

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

UndefinedObject(Object)>>doesNotUnderstand: #totalDescontado

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of ThreadSafeTranscript did not understand #+

26 November 2017 4:32:02.30061 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



ThreadSafeTranscript(Object)>>doesNotUnderstand: #+

	Receiver: Transcript

	Arguments and temporary variables: 

		aMessage: 	+ 160.0
		exception: 	MessageNotUnderstood: ThreadSafeTranscript>>+
		resumeValue: 	nil

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a SystemWindow(669174016) a RubPluggableTextMorph...etc...

		announceur: 	an Announcer

		stream: 	a WriteStream

		accessSemaphore: 	a Mutex

		deferredClear: 	false

		deferredEndEntry: 	true

		stepContents: 	'Se ha generado la factura correspondiente.
Alejo
480.0Total desc...etc...





[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: sum ] in Facturador>>facturar:para:

	Receiver: a Facturador

	Arguments and temporary variables: 

		unosLibros: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)
		unCliente: 	a Cliente
		monto: 	nil
		sum: 	Transcript
		libro: 	a LibroDeTexto

	Receiver's instance variables: 

		totalDescontado: 	0





[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		thisValue: 	0
		binaryBlock: 	[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: sum ...etc...
		nextValue: 	Transcript
		each: 	a LibroDeTexto

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection>>do:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	2

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection(Collection)>>inject:into:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		nextValue: 	Transcript
		thisValue: 	0
		binaryBlock: 	[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: sum ...etc...

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





Facturador>>facturar:para:

	Receiver: a Facturador

	Arguments and temporary variables: 

		unosLibros: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)
		unCliente: 	a Cliente
		monto: 	nil

	Receiver's instance variables: 

		totalDescontado: 	0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		cliente: 	a Cliente
		facturador: 	a Facturador
		l1: 	a LibroDeTexto
		l2: 	a LibroDeTexto
		l3: 	a LibroDeTexto
		col: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente withNomb...etc...
		itsSelection: 	a Text for '|cliente facturador l1 l2 l3 col|

cliente := Cliente...etc...
		itsSelectionString: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente with...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| cliente facturador l1 l2 l3 col |
	cliente := Cliente withNombre: ...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(124633600))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	7132945

		lastStepMessage: 	nil

		lastCycleTime: 	7132965

		alarms: 	a Heap()

		lastAlarmTime: 	7132945

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a SystemWindow(692611328) a Na...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	7132945

		lastStepMessage: 	nil

		lastCycleTime: 	7132965

		alarms: 	a Heap()

		lastAlarmTime: 	7132945

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	7132945

		lastStepMessage: 	nil

		lastCycleTime: 	7132965

		alarms: 	a Heap()

		lastAlarmTime: 	7132945

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(158443264))(a Transfer...etc...

		lastStepTime: 	7132945

		lastStepMessage: 	nil

		lastCycleTime: 	7132965

		alarms: 	a Heap()

		lastAlarmTime: 	7132945

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a SystemWindow(692611328) a Na...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(586037760)

	Arguments and temporary variables: 

		aPoint: 	(258@476.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		bounds: 	(256.0@468.0) corner: (463.0@702.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(266977536)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(256.0@468.0) corner: (463.0@702.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (484576000) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(1000526848)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(586037760)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(256.0@468.0) corner: (463.0@702.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(266977536)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(256.0@468.0) corner: (463.0@702.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (484576000) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(1000526848)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(586037760)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(256.0@468.0) corner: (463.0@702.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(266977536)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(256.0@468.0) corner: (463.0@702.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (484576000) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(1000526848)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		shiftKeyState: 	false
		menu: 	a MenuMorph(586037760)

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(124633600))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(RubAbstractTextArea)>>mouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		evt: 	[(158.0@53.0) mouseDown yellow 12473984 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(124633600))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(Morph)>>handleMouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(124633600))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MouseButtonEvent>>sentTo:

	Receiver: [(158.0@53.0) mouseDown yellow 12473984 nil]

	Arguments and temporary variables: 

		anObject: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		timeStamp: 	12473984

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(158.0@53.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





RubEditingArea(Morph)>>handleEvent:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(124633600))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]
		aMorph: 	a RubEditingArea(712853760)
		globalPt: 	(158.0@53.0)
		localEvt: 	[(158.0@53.0) mouseDown yellow 12473984 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(713215232)
		morphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688))
		handler: 	a RubEditingArea(712853760)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(158.0@53.0) mouseDown yellow 12473984 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	12473984

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(158.0@53.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





RubEditingArea(Morph)>>processEvent:using:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(158.0@53.0) mouseDown yellow 12473984 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(124633600))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(258@476) mouseDown yellow 12473984 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)
		globalPt: 	(258@476)
		localEvt: 	[(158.0@53.0) mouseDown yellow 12473984 nil]
		index: 	1
		child: 	a RubEditingArea(712853760)
		morphs: 	an Array(a RubEditingArea(712853760))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(258@476) mouseDown yellow 12473984 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(258@476) mouseDown yellow 12473984 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	12473984

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(258@476)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(258@476) mouseDown yellow 12473984 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0







--- The full stack ---

ThreadSafeTranscript(Object)>>doesNotUnderstand: #+

[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: sum ] in Facturador>>facturar:para:

[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:

OrderedCollection>>do:

OrderedCollection(Collection)>>inject:into:

Facturador>>facturar:para:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

RubEditingArea(RubAbstractTextArea)>>handleEdit:

[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldState>>doOneSubCycleFor:

WorldMorph>>doOneSubCycle

MenuMorph>>invokeModalAt:in:allowKeyboard:

MenuMorph>>invokeModal:

MenuMorph>>invokeModal

RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

RubEditingArea(RubAbstractTextArea)>>mouseDown:

RubEditingArea(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

RubEditingArea(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubEditingArea(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

MorphicEventDispatcher>>dispatchEvent:with:

TransformWithLayoutMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubTextScrollPane(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubScrolledTextMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

LazyTabGroupMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMMorphBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMScrollPaneBandBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerScrollBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMFoundationBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMSystemWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of ThreadSafeTranscript did not understand #+

26 November 2017 4:32:25.03461 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



ThreadSafeTranscript(Object)>>doesNotUnderstand: #+

	Receiver: Transcript

	Arguments and temporary variables: 

		aMessage: 	+ 160.0
		exception: 	MessageNotUnderstood: ThreadSafeTranscript>>+
		resumeValue: 	nil

	Receiver's instance variables: 

		dependents: 	a DependentsArray(a SystemWindow(669174016) a RubPluggableTextMorph...etc...

		announceur: 	an Announcer

		stream: 	a WriteStream

		accessSemaphore: 	a Mutex

		deferredClear: 	false

		deferredEndEntry: 	true

		stepContents: 	'0'





[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: 'hola' ] in Facturador>>facturar:para:

	Receiver: a Facturador

	Arguments and temporary variables: 

		unosLibros: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)
		unCliente: 	a Cliente
		monto: 	nil
		sum: 	Transcript
		libro: 	a LibroDeTexto

	Receiver's instance variables: 

		totalDescontado: 	0





[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		thisValue: 	0
		binaryBlock: 	[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: 'hol...etc...
		nextValue: 	Transcript
		each: 	a LibroDeTexto

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection>>do:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	2

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection(Collection)>>inject:into:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		nextValue: 	Transcript
		thisValue: 	0
		binaryBlock: 	[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: 'hol...etc...

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





Facturador>>facturar:para:

	Receiver: a Facturador

	Arguments and temporary variables: 

		unosLibros: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)
		unCliente: 	a Cliente
		monto: 	nil

	Receiver's instance variables: 

		totalDescontado: 	0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		cliente: 	a Cliente
		facturador: 	a Facturador
		l1: 	a LibroDeTexto
		l2: 	a LibroDeTexto
		l3: 	a LibroDeTexto
		col: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente withNomb...etc...
		itsSelection: 	a Text for '|cliente facturador l1 l2 l3 col|

cliente := Cliente...etc...
		itsSelectionString: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente with...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| cliente facturador l1 l2 l3 col |
	cliente := Cliente withNombre: ...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940129024))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	7155691

		lastStepMessage: 	nil

		lastCycleTime: 	7155712

		alarms: 	a Heap()

		lastAlarmTime: 	7155691

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	7155691

		lastStepMessage: 	nil

		lastCycleTime: 	7155712

		alarms: 	a Heap()

		lastAlarmTime: 	7155691

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	7155691

		lastStepMessage: 	nil

		lastCycleTime: 	7155712

		alarms: 	a Heap()

		lastAlarmTime: 	7155691

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@1368)

		canvas: 	a FormCanvas on: DisplayScreen(1278x1368x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	7155691

		lastStepMessage: 	nil

		lastCycleTime: 	7155712

		alarms: 	a Heap()

		lastAlarmTime: 	7155691

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@1368)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(811092736) a NautilusWindow(1049373952) a...etc...

		fullBounds: 	(0@0) corner: (1278@1368)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(615311616)

	Arguments and temporary variables: 

		aPoint: 	(284@555.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		bounds: 	(282.0@547.0) corner: (489.0@781.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(840073216)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(282.0@547.0) corner: (489.0@781.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (639986176) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(481717504)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(615311616)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(282.0@547.0) corner: (489.0@781.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(840073216)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(282.0@547.0) corner: (489.0@781.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (639986176) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(481717504)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(615311616)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(282.0@547.0) corner: (489.0@781.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(840073216)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(282.0@547.0) corner: (489.0@781.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (639986176) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(481717504)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		shiftKeyState: 	false
		menu: 	a MenuMorph(615311616)

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940129024))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(RubAbstractTextArea)>>mouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		evt: 	[(184.0@233.0) mouseDown yellow 12497109 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940129024))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(Morph)>>handleMouseDown:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940129024))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MouseButtonEvent>>sentTo:

	Receiver: [(184.0@233.0) mouseDown yellow 12497109 nil]

	Arguments and temporary variables: 

		anObject: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		timeStamp: 	12497109

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(184.0@233.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





RubEditingArea(Morph)>>handleEvent:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940129024))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]
		aMorph: 	a RubEditingArea(712853760)
		globalPt: 	(184.0@233.0)
		localEvt: 	[(184.0@233.0) mouseDown yellow 12497109 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(713215232)
		morphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688))
		handler: 	a RubEditingArea(712853760)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(184.0@233.0) mouseDown yellow 12497109 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	12497109

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(184.0@233.0)

		handler: 	a RubEditingArea(712853760)

		wasHandled: 	true

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]
		aMorph: 	a RubEditingArea(712853760)

	Receiver's instance variables: 

		morph: 	nil





RubEditingArea(Morph)>>processEvent:using:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		anEvent: 	[(184.0@233.0) mouseDown yellow 12497109 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(940129024))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(284@555) mouseDown yellow 12497109 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)
		globalPt: 	(284@555)
		localEvt: 	[(184.0@233.0) mouseDown yellow 12497109 nil]
		index: 	1
		child: 	a RubEditingArea(712853760)
		morphs: 	an Array(a RubEditingArea(712853760))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(91574528)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(284@555) mouseDown yellow 12497109 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(284@555) mouseDown yellow 12497109 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	12497109

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(284@555)

		handler: 	a RubScrolledTextMorph(91574528)

		wasHandled: 	false

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(284@555) mouseDown yellow 12497109 nil]
		aMorph: 	a TransformWithLayoutMorph(124561152)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0







--- The full stack ---

ThreadSafeTranscript(Object)>>doesNotUnderstand: #+

[ :sum :libro | 
sum + libro calcularPrecio.
Transcript show: 'hola' ] in Facturador>>facturar:para:

[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:

OrderedCollection>>do:

OrderedCollection(Collection)>>inject:into:

Facturador>>facturar:para:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

RubEditingArea(RubAbstractTextArea)>>handleEdit:

[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldState>>doOneSubCycleFor:

WorldMorph>>doOneSubCycle

MenuMorph>>invokeModalAt:in:allowKeyboard:

MenuMorph>>invokeModal:

MenuMorph>>invokeModal

RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

RubEditingArea(RubAbstractTextArea)>>mouseDown:

RubEditingArea(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

RubEditingArea(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubEditingArea(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

MorphicEventDispatcher>>dispatchEvent:with:

TransformWithLayoutMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubTextScrollPane(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubScrolledTextMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

LazyTabGroupMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMMorphBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMScrollPaneBandBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerScrollBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMFoundationBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMSystemWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of LibroDeTexto did not understand #adaptToNumber:andSend:

28 November 2017 11:24:51.750153 am



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



LibroDeTexto(Object)>>doesNotUnderstand: #adaptToNumber:andSend:

	Receiver: a LibroDeTexto

	Arguments and temporary variables: 

		aMessage: 	adaptToNumber: 0 andSend: #+
		exception: 	MessageNotUnderstood: LibroDeTexto>>adaptToNumber:andSend:
		resumeValue: 	nil

	Receiver's instance variables: 

		titulo: 	nil

		autor: 	nil

		precio: 	100

		cantPaginas: 	nil





LibroDeTexto(Object)>>adaptToInteger:andSend:

	Receiver: a LibroDeTexto

	Arguments and temporary variables: 

		rcvr: 	0
		selector: 	#+

	Receiver's instance variables: 

		titulo: 	nil

		autor: 	nil

		precio: 	100

		cantPaginas: 	nil





SmallInteger(Integer)>>+

	Receiver: 0

	Arguments and temporary variables: 

		aNumber: 	a LibroDeTexto

	Receiver's instance variables: 

0



SmallInteger>>+

	Receiver: 0

	Arguments and temporary variables: 

		aNumber: 	a LibroDeTexto

	Receiver's instance variables: 

0



[ :element | rcvr perform: selector with: element ] in OrderedCollection(Collection)>>adaptToNumber:andSend:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		rcvr: 	0
		selector: 	#+
		element: 	a LibroDeTexto

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection>>collect:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

Instance of LibroDeTexto did not understand #adaptToNumber:andSend:

28 November 2017 11:25:56.587153 am



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



LibroDeTexto(Object)>>doesNotUnderstand: #adaptToNumber:andSend:

	Receiver: a LibroDeTexto

	Arguments and temporary variables: 

		aMessage: 	adaptToNumber: 0 andSend: #+
		exception: 	MessageNotUnderstood: LibroDeTexto>>adaptToNumber:andSend:
		resumeValue: 	nil

	Receiver's instance variables: 

		titulo: 	nil

		autor: 	nil

		precio: 	100

		cantPaginas: 	nil





LibroDeTexto(Object)>>adaptToInteger:andSend:

	Receiver: a LibroDeTexto

	Arguments and temporary variables: 

		rcvr: 	0
		selector: 	#+

	Receiver's instance variables: 

		titulo: 	nil

		autor: 	nil

		precio: 	100

		cantPaginas: 	nil





SmallInteger(Integer)>>+

	Receiver: 0

	Arguments and temporary variables: 

		aNumber: 	a LibroDeTexto

	Receiver's instance variables: 

0



SmallInteger>>+

	Receiver: 0

	Arguments and temporary variables: 

		aNumber: 	a LibroDeTexto

	Receiver's instance variables: 

0



[ :element | rcvr perform: selector with: element ] in OrderedCollection(Collection)>>adaptToNumber:andSend:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		rcvr: 	0
		selector: 	#+
		element: 	a LibroDeTexto

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection>>collect:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		aBlock: 	[ :element | rcvr perform: selector with: element ]
		newCollection: 	an OrderedCollection()
		index: 	1

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection(Collection)>>adaptToNumber:andSend:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		rcvr: 	0
		selector: 	#+

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





OrderedCollection(Object)>>adaptToInteger:andSend:

	Receiver: an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Arguments and temporary variables: 

		rcvr: 	0
		selector: 	#+

	Receiver's instance variables: 

		array: 	an Array(a LibroDeTexto a LibroDeTexto a LibroDeTexto nil nil nil nil ni...etc...

		firstIndex: 	1

		lastIndex: 	3





SmallInteger(Integer)>>+

	Receiver: 0

	Arguments and temporary variables: 

		aNumber: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Receiver's instance variables: 

0



SmallInteger>>+

	Receiver: 0

	Arguments and temporary variables: 

		aNumber: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Receiver's instance variables: 

0



Facturador>>facturar:para:

	Receiver: a Facturador

	Arguments and temporary variables: 

		unosLibros: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)
		unCliente: 	a Cliente
		monto: 	480.0

	Receiver's instance variables: 

		totalDescontado: 	0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		cliente: 	a Cliente
		facturador: 	a Facturador
		l1: 	a LibroDeTexto
		l2: 	a LibroDeTexto
		l3: 	a LibroDeTexto
		col: 	an OrderedCollection(a LibroDeTexto a LibroDeTexto a LibroDeTexto)

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente withNomb...etc...
		itsSelection: 	a Text for '|cliente facturador l1 l2 l3 col|

cliente := Cliente...etc...
		itsSelectionString: 	'|cliente facturador l1 l2 l3 col|

cliente := Cliente with...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| cliente facturador l1 l2 l3 col |
	cliente := Cliente withNombre: ...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(712853760)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(712853760)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1049@430)

		owner: 	a TransformWithLayoutMorph(124561152)

		submorphs: 	an Array(a RubPrimarySelectionMorph(713215232) a RubCursor(543762688...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (611742976) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(778080000)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(543762688)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(345375488))

		getMenuPolicy: 	a RubEditingArea(712853760)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(91574528)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

Instance of Set did not understand #with:

28 November 2017 12:36:01.224153 pm



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Set(Object)>>doesNotUnderstand: #with:

	Receiver: a Set()

	Arguments and temporary variables: 

		aMessage: 	with: 5
		exception: 	MessageNotUnderstood: Set>>with:
		resumeValue: 	nil

	Receiver's instance variables: 

		tally: 	0

		array: 	#(nil nil nil nil nil)





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		x: 	a Set()

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|x|

x:= Set new.

x with: 5.'
		itsSelection: 	a Text for '|x|

x:= Set new.

x with: 5.'
		itsSelectionString: 	'|x|

x:= Set new.

x with: 5.'

	Receiver's instance variables: 

		ast: 	DoIt
	| x |
	x := Set new.
	^ x with: 5

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(787435520)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | result inspect ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(787435520)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(813452032)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(787435520)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(562955008)

		submorphs: 	an Array(a RubPrimarySelectionMorph(432249600) a RubCursor(631511040...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (944012032) [other:  (announcer -> an Announcer) (k...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(847759360)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(631511040)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(403181568))

		getMenuPolicy: 	a RubEditingArea(787435520)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(813452032)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	5058396

		lastStepMessage: 	nil

		lastCycleTime: 	5058418

		alarms: 	a Heap()

		lastAlarmTime: 	5058396

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(84355072) a GLMSystemWindow(811092736) a ...etc...

		fullBounds: 	(0@0) corner: (1278@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	5058396

		lastStepMessage: 	nil

		lastCycleTime: 	5058418

		alarms: 	a Heap()

		lastAlarmTime: 	5058396

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	5058396

		lastStepMessage: 	nil

		lastCycleTime: 	5058418

		alarms: 	a Heap()

		lastAlarmTime: 	5058396

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1278@821)

		canvas: 	a FormCanvas on: DisplayScreen(1278x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a SearchMorph(764313856))(a SearchMorp...etc...

		lastStepTime: 	5058396

		lastStepMessage: 	nil

		lastCycleTime: 	5058418

		alarms: 	a Heap()

		lastAlarmTime: 	5058396

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1278@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(84355072) a GLMSystemWindow(811092736) a ...etc...

		fullBounds: 	(0@0) corner: (1278@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(19163136)

	Arguments and temporary variables: 

		aPoint: 	(153@406.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(787435520)

	Receiver's instance variables: 

		bounds: 	(151.0@398.0) corner: (358.0@632.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(770924544)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(151.0@398.0) corner: (358.0@632.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (549176064) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(77314816)'Inspect it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(19163136)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(151.0@398.0) corner: (358.0@632.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(770924544)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(151.0@398.0) corner: (358.0@632.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (549176064) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(77314816)'Inspect it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(19163136)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(151.0@398.0) corner: (358.0@632.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(770924544)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(151.0@398.0) corner: (358.0@632.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (549176064) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(77314816)'Inspect it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(787435520)

	Arguments and temporary variables: 

THERE_BE_DRAGONS_HERE

Instance of BlockClosure did not understand #last

14 December 2017 11:22:11.591842 am



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



BlockClosure(Object)>>doesNotUnderstand: #last

	Receiver: [ :n1 :n2 | n1 < n2 ]

	Arguments and temporary variables: 

		aMessage: 	last
		exception: 	MessageNotUnderstood: BlockClosure>>last
		resumeValue: 	nil

	Receiver's instance variables: 

		outerContext: 	UndefinedObject>>DoIt

		startpc: 	65

		numArgs: 	2





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		col: 	an OrderedCollection(2 100 56 103)

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|col|

col := OrderedCollection new.

col add: 2.
col add: 100...etc...
		itsSelection: 	a Text for '|col|

col := OrderedCollection new.

col add: 2.
col...etc...
		itsSelectionString: 	'|col|

col := OrderedCollection new.

col add: 2.
col add:...etc...

	Receiver's instance variables: 

		ast: 	DoIt
	| col |
	col := OrderedCollection new.
	col add: 2.
	col add: 100.
	...etc...

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(174691584)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(174691584)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(589497088)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	4381367

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	4381383
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	4381367

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	4381383
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1045181184)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	4381361

		lastStepMessage: 	nil

		lastCycleTime: 	4381383

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1045181184)))

		lastAlarmTime: 	4381361

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	4381383
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	4381361

		lastStepMessage: 	nil

		lastCycleTime: 	4381383

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1045181184)))

		lastAlarmTime: 	4381361

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	4381361

		lastStepMessage: 	nil

		lastCycleTime: 	4381383

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1045181184)))

		lastAlarmTime: 	4381361

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(708822272) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	4381361

		lastStepMessage: 	nil

		lastCycleTime: 	4381383

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1045181184)))

		lastAlarmTime: 	4381361

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@821)

		canvas: 	a FormCanvas on: DisplayScreen(1584x821x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	4381361

		lastStepMessage: 	nil

		lastCycleTime: 	4381383

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1045181184)))

		lastAlarmTime: 	4381361

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@821)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(708822272) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@821)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	Transcript





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

BlockClosure(Object)>>doesNotUnderstand: #last

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Random did not understand #between:and:

14 December 2017 11:45:05.959842 am



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Random(Object)>>doesNotUnderstand: #between:and:

	Receiver: a Random

	Arguments and temporary variables: 

		aMessage: 	between: 100 and: 200
		exception: 	MessageNotUnderstood: Random>>between:and:
		resumeValue: 	nil

	Receiver's instance variables: 

		seed: 	868786327

		a: 	16807.0

		m: 	2.147483647e9

		q: 	127773.0

		r: 	2836.0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		ran: 	a Random

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|ran|

ran := Random new.

ran between: 100 and: 200.'
		itsSelection: 	a Text for '|ran|

ran := Random new.

ran between: 100 and: 200....etc...
		itsSelectionString: 	'|ran|

ran := Random new.

ran between: 100 and: 200.'

	Receiver's instance variables: 

		ast: 	DoIt
	| ran |
	ran := Random new.
	^ ran between: 100 and: 200

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(367674112)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(367674112)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(759194880)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	5755774

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	5755789
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	5755774

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	5755789
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5755768

		lastStepMessage: 	nil

		lastCycleTime: 	5755789

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5755768

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	5755789
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5755768

		lastStepMessage: 	nil

		lastCycleTime: 	5755789

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5755768

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5755768

		lastStepMessage: 	nil

		lastCycleTime: 	5755789

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5755768

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@819)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(120967936) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@819)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5755768

		lastStepMessage: 	nil

		lastCycleTime: 	5755789

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5755768

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5755768

		lastStepMessage: 	nil

		lastCycleTime: 	5755789

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5755768

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@819)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(120967936) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@819)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Random(Object)>>doesNotUnderstand: #between:and:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Random did not understand #between:and:

14 December 2017 11:46:05.801842 am



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Random(Object)>>doesNotUnderstand: #between:and:

	Receiver: a Random

	Arguments and temporary variables: 

		aMessage: 	between: 1 and: 5
		exception: 	MessageNotUnderstood: Random>>between:and:
		resumeValue: 	nil

	Receiver's instance variables: 

		seed: 	275172949

		a: 	16807.0

		m: 	2.147483647e9

		q: 	127773.0

		r: 	2836.0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		ran: 	a Random

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|ran|

ran := Random new.

ran between: 1 and: 5.'
		itsSelection: 	a Text for '|ran|

ran := Random new.

ran between: 1 and: 5.'
		itsSelectionString: 	'|ran|

ran := Random new.

ran between: 1 and: 5.'

	Receiver's instance variables: 

		ast: 	DoIt
	| ran |
	ran := Random new.
	^ ran between: 1 and: 5

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(367674112)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result |  ]

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(367674112)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(759194880)

		textModel: 	a GLMRubricSmalltalkTextModel





RubEditingArea(RubAbstractTextArea)>>handleEdit:

	Receiver: a RubEditingArea(367674112)

	Arguments and temporary variables: 

		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(114603264)

		submorphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784)...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (1059164928) [other:  (announcer -> an Announcer) (...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(917967616)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(621142784)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892986624))

		getMenuPolicy: 	a RubEditingArea(367674112)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 

		ann: 	a GLMHighlightAndEvaluate

	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(759194880)

		textModel: 	a GLMRubricSmalltalkTextModel





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5815608

		lastStepMessage: 	nil

		lastCycleTime: 	5815629

		alarms: 	a Heap()

		lastAlarmTime: 	5815608

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@819)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(120967936) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@819)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5815608

		lastStepMessage: 	nil

		lastCycleTime: 	5815629

		alarms: 	a Heap()

		lastAlarmTime: 	5815608

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5815608

		lastStepMessage: 	nil

		lastCycleTime: 	5815629

		alarms: 	a Heap()

		lastAlarmTime: 	5815608

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneSubCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		currentHand: 	a HandMorph(58125568)

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(566632448))(a DropList...etc...

		lastStepTime: 	5815608

		lastStepMessage: 	nil

		lastCycleTime: 	5815629

		alarms: 	a Heap()

		lastAlarmTime: 	5815608

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneSubCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@819)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(120967936) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@819)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





MenuMorph>>invokeModalAt:in:allowKeyboard:

	Receiver: a MenuMorph(876602112)

	Arguments and temporary variables: 

		aPoint: 	(231@409.0)
		aWorld: 	a WorldMorph(562956288) [world]
		aBoolean: 	true
		w: 	a WorldMorph(562956288) [world]
		originalFocusHolder: 	a RubEditingArea(367674112)

	Receiver's instance variables: 

		bounds: 	(229.0@401.0) corner: (436.0@635.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(731034368)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(229.0@401.0) corner: (436.0@635.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (158601984) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(740672768)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal:

	Receiver: a MenuMorph(876602112)

	Arguments and temporary variables: 

		allowKeyboardControl: 	true

	Receiver's instance variables: 

		bounds: 	(229.0@401.0) corner: (436.0@635.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(731034368)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(229.0@401.0) corner: (436.0@635.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (158601984) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(740672768)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





MenuMorph>>invokeModal

	Receiver: a MenuMorph(876602112)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(229.0@401.0) corner: (436.0@635.0)

		owner: 	nil

		submorphs: 	an Array(a ToggleMenuItemMorph(731034368)'Do it and go' a ToggleMenu...etc...

		fullBounds: 	(229.0@401.0) corner: (436.0@635.0)

		color: 	Color veryDarkGray

		extension: 	a MorphExtension (158601984) [other:  (basicColor -> Color veryDarkG...etc...

		borderWidth: 	1

		borderColor: 	(Color r: 0.135 g: 0.135 b: 0.135 alpha: 1.0)

		defaultTarget: 	nil

		selectedItem: 	a ToggleMenuItemMorph(740672768)'Do it'

		stayUp: 	false

		popUpOwner: 	nil

		activeSubMenu: 	nil

		titleMorph: 	nil





RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

	Receiver: a RubEditingArea(367674112)

	Arguments and temporary variables: 

		shiftKeyState: 	false
		menu: 	a MenuMorph(876602112)

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(114603264)

		submorphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784)...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (1059164928) [other:  (announcer -> an Announcer) (...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(917967616)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(621142784)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892986624))

		getMenuPolicy: 	a RubEditingArea(367674112)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(RubAbstractTextArea)>>mouseDown:

	Receiver: a RubEditingArea(367674112)

	Arguments and temporary variables: 

		evt: 	[(41@30) mouseDown yellow 9443578 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(114603264)

		submorphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784)...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (1059164928) [other:  (announcer -> an Announcer) (...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(917967616)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(621142784)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892986624))

		getMenuPolicy: 	a RubEditingArea(367674112)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





RubEditingArea(Morph)>>handleMouseDown:

	Receiver: a RubEditingArea(367674112)

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(114603264)

		submorphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784)...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (1059164928) [other:  (announcer -> an Announcer) (...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(917967616)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(621142784)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892986624))

		getMenuPolicy: 	a RubEditingArea(367674112)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MouseButtonEvent>>sentTo:

	Receiver: [(41@30) mouseDown yellow 9443578 nil]

	Arguments and temporary variables: 

		anObject: 	a RubEditingArea(367674112)

	Receiver's instance variables: 

		timeStamp: 	9443578

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(41@30)

		handler: 	a RubEditingArea(367674112)

		wasHandled: 	true

		whichButton: 	2





RubEditingArea(Morph)>>handleEvent:

	Receiver: a RubEditingArea(367674112)

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(114603264)

		submorphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784)...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (1059164928) [other:  (announcer -> an Announcer) (...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(917967616)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(621142784)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892986624))

		getMenuPolicy: 	a RubEditingArea(367674112)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]
		aMorph: 	a RubEditingArea(367674112)
		globalPt: 	(41@30)
		localEvt: 	[(41@30) mouseDown yellow 9443578 nil]
		index: 	3
		child: 	a RubPrimarySelectionMorph(61031168)
		morphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784))
		handler: 	a RubEditingArea(367674112)
		inside: 	false
		lastHandler: 	a RubScrolledTextMorph(759194880)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(41@30) mouseDown yellow 9443578 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	9443578

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(41@30)

		handler: 	a RubEditingArea(367674112)

		wasHandled: 	true

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]
		aMorph: 	a RubEditingArea(367674112)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]
		aMorph: 	a RubEditingArea(367674112)

	Receiver's instance variables: 

		morph: 	nil





RubEditingArea(Morph)>>processEvent:using:

	Receiver: a RubEditingArea(367674112)

	Arguments and temporary variables: 

		anEvent: 	[(41@30) mouseDown yellow 9443578 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1062@107)

		owner: 	a TransformWithLayoutMorph(114603264)

		submorphs: 	an Array(a RubPrimarySelectionMorph(61031168) a RubCursor(621142784)...etc...

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (1059164928) [other:  (announcer -> an Announcer) (...etc...

		model: 	a GLMRubricSmalltalkTextModel

		paragraph: 	a RubShoutStylerDecorator

		editor: 	a RubSmalltalkEditor

		scrollPane: 	a RubTextScrollPane(917967616)

		editingState: 	a RubEditingState

		textStyle: 	a TextStyle Source Code Pro

		textColor: 	Color white

		margins: 	(6@6) corner: (6@6)

		readOnly: 	false

		menuAllowed: 	true

		editingMode: 	a RubSmalltalkScriptingMode

		cursor: 	a RubCursor(621142784)

		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(892986624))

		getMenuPolicy: 	a RubEditingArea(367674112)

		mouseDownPoint: 	nil

		wrapped: 	true

		editorClass: 	RubSmalltalkEditor





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]
		aMorph: 	a TransformWithLayoutMorph(114603264)
		globalPt: 	(231@409)
		localEvt: 	[(41@30) mouseDown yellow 9443578 nil]
		index: 	1
		child: 	a RubEditingArea(367674112)
		morphs: 	an Array(a RubEditingArea(367674112))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(759194880)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(231@409) mouseDown yellow 9443578 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	9443578

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(231@409)

		handler: 	a RubScrolledTextMorph(759194880)

		wasHandled: 	false

		whichButton: 	2





[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]
		aMorph: 	a TransformWithLayoutMorph(114603264)

	Receiver's instance variables: 

		morph: 	nil





BlockClosure>>ensure:

	Receiver: [ ^ anEvent sentTo: self ]

	Arguments and temporary variables: 

		aBlock: 	[ morph := nil ]
		complete: 	nil
		returnValue: 	nil

	Receiver's instance variables: 

		outerContext: 	MorphicEventDispatcher>>dispatchEvent:with:

		startpc: 	28

		numArgs: 	0





MorphicEventDispatcher>>dispatchEvent:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]
		aMorph: 	a TransformWithLayoutMorph(114603264)

	Receiver's instance variables: 

		morph: 	nil





TransformWithLayoutMorph(Morph)>>processEvent:using:

	Receiver: a TransformWithLayoutMorph(114603264)

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]
		defaultDispatcher: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		bounds: 	(190@379) corner: (1252@708)

		owner: 	a RubTextScrollPane(917967616)

		submorphs: 	an Array(a RubEditingArea(367674112))

		fullBounds: 	nil

		color: 	Color transparent

		extension: 	a MorphExtension (498082560) [other:  (kmDispatcher -> a KMDispatche...etc...

		transform: 	a MorphicTransform(angle = 0.0; scale = 1.0; offset = (-190@ -379))

		smoothing: 	1

		localBounds: 	nil





MorphicEventDispatcher>>dispatchMouseDown:with:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]
		aMorph: 	a RubTextScrollPane(917967616)
		globalPt: 	(231@409)
		localEvt: 	[(231@409) mouseDown yellow 9443578 nil]
		index: 	1
		child: 	a TransformWithLayoutMorph(114603264)
		morphs: 	an Array(a TransformWithLayoutMorph(114603264))
		handler: 	nil
		inside: 	nil
		lastHandler: 	a RubScrolledTextMorph(759194880)

	Receiver's instance variables: 

		morph: 	nil





MorphicEventDispatcher>>handleMouseDown:

	Receiver: a MorphicEventDispatcher

	Arguments and temporary variables: 

		anEvent: 	[(231@409) mouseDown yellow 9443578 nil]

	Receiver's instance variables: 

		morph: 	nil





MouseButtonEvent>>sentTo:

	Receiver: [(231@409) mouseDown yellow 9443578 nil]

	Arguments and temporary variables: 

		anObject: 	a MorphicEventDispatcher

	Receiver's instance variables: 

		timeStamp: 	9443578

		source: 	a HandMorph(58125568)

		windowIndex: 	nil

		type: 	#mouseDown

		buttons: 	2

		position: 	(231@409)

		handler: 	a RubScrolledTextMorph(759194880)

		wasHandled: 	false

		whichButton: 	2







--- The full stack ---

Random(Object)>>doesNotUnderstand: #between:and:

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

RubEditingArea(RubAbstractTextArea)>>handleEdit:

[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldState>>doOneSubCycleFor:

WorldMorph>>doOneSubCycle

MenuMorph>>invokeModalAt:in:allowKeyboard:

MenuMorph>>invokeModal:

MenuMorph>>invokeModal

RubEditingArea(RubAbstractTextArea)>>yellowButtonActivity:

RubEditingArea(RubAbstractTextArea)>>mouseDown:

RubEditingArea(Morph)>>handleMouseDown:

MouseButtonEvent>>sentTo:

RubEditingArea(Morph)>>handleEvent:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubEditingArea(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

TransformWithLayoutMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubTextScrollPane(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

RubScrolledTextMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

LazyTabGroupMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPanelMorph(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMMorphBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMScrollPaneBandBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerScrollBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMPagerBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMFoundationBrick(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

GLMSystemWindow(Morph)>>processEvent:using:

MorphicEventDispatcher>>dispatchMouseDown:with:

MorphicEventDispatcher>>handleMouseDown:

MouseButtonEvent>>sentTo:

[ ^ anEvent sentTo: self ] in MorphicEventDispatcher>>dispatchEvent:with:

BlockClosure>>ensure:

MorphicEventDispatcher>>dispatchEvent:with:

WorldMorph(Morph)>>processEvent:using:

WorldMorph(Morph)>>processEvent:

HandMorph>>sendEvent:focus:clear:

HandMorph>>sendMouseEvent:

HandMorph>>handleEvent:

HandMorph>>processEventsFromQueue:

HandMorph>>processEvents

[ :h | 
self activeHand: h.
h processEvents.
self activeHand: nil ] in WorldState>>doOneCycleNowFor:

Array(SequenceableCollection)>>do:

WorldState>>handsDo:

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



THERE_BE_DRAGONS_HERE

Instance of Random did not understand #source

14 December 2017 11:46:22.481842 am



VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2254 uuid: 4f2c2cce-f4a2-469a-93f1-97ed941df0ad Jul 20 2017
StackToRegisterMappingCogit VMMaker.oscog-eem.2252 uuid: 2f3e9b0e-ecd3-4adf-b092-cce2e2587a5c Jul 20 2017
VM: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $ Date: Thu Jul 20 12:42:21 2017 -0700 $ Plugins: 201707201942 https://github.com/OpenSmalltalk/opensmalltalk-vm.git $


Image: Pharo6.0 [Latest update: #60510]



Random(Object)>>doesNotUnderstand: #source

	Receiver: a Random

	Arguments and temporary variables: 

		aMessage: 	source
		exception: 	MessageNotUnderstood: Random>>source
		resumeValue: 	nil

	Receiver's instance variables: 

		seed: 	289868668

		a: 	16807.0

		m: 	2.147483647e9

		q: 	127773.0

		r: 	2836.0





UndefinedObject>>DoIt

	Receiver: nil

	Arguments and temporary variables: 

		ran: 	a Random

	Receiver's instance variables: 

nil



OpalCompiler>>evaluate

	Receiver: an OpalCompiler

	Arguments and temporary variables: 

		value: 	nil
		selectedSource: 	'|ran|

ran := Random new.

ran source.'
		itsSelection: 	a Text for '|ran|

ran := Random new.

ran source.'
		itsSelectionString: 	'|ran|

ran := Random new.

ran source.'

	Receiver's instance variables: 

		ast: 	DoIt
	| ran |
	ran := Random new.
	^ ran source

		source: 	a ReadStream

		context: 	nil

		receiver: 	nil

		compilationContext: 	a CompilationContext

		compilationContextClass: 	nil





RubSmalltalkEditor>>evaluate:andDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	nil
		ctxt: 	nil

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(367674112)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





RubSmalltalkEditor>>highlightEvaluateAndDo:

	Receiver: a RubSmalltalkEditor

	Arguments and temporary variables: 

		aBlock: 	[ :result | 
textMorph shoutStyler style: textMorph text.
GLMPrintPoppe...etc...

	Receiver's instance variables: 

		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...

		textArea: 	a RubEditingArea(367674112)

		selectorChooser: 	nil

		notificationStrategy: 	a GLMPopperNotificationStrategy





GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

	Receiver: a GLMMorphicPharoScriptRenderer

	Arguments and temporary variables: 



	Receiver's instance variables: 

		renderer: 	a GLMMorphicRenderer

		textMorph: 	a RubScrolledTextMorph(759194880)

		textModel: 	a GLMRubricSmalltalkTextModel





MorphicAlarm(MessageSend)>>value

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 



	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	5832282

		numArgs: 	0





MorphicAlarm>>value:

	Receiver: MorphicAlarm(#popupPrint -> a GLMMorphicPharoScriptRenderer)

	Arguments and temporary variables: 

		anArgument: 	5832294
		nArgs: 	0

	Receiver's instance variables: 

		receiver: 	a GLMMorphicPharoScriptRenderer

		selector: 	#popupPrint

		arguments: 	#()

		scheduledTime: 	5832282

		numArgs: 	0





WorldState>>triggerAlarmsBefore:

	Receiver: a WorldState

	Arguments and temporary variables: 

		nowTime: 	5832294
		pending: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	5832273

		lastStepMessage: 	nil

		lastCycleTime: 	5832294

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5832273

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runLocalStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		now: 	5832294
		morphToStep: 	nil
		stepTime: 	nil
		priorWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	5832273

		lastStepMessage: 	nil

		lastCycleTime: 	5832294

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5832273

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>runStepMethodsIn:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	nil

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	5832273

		lastStepMessage: 	nil

		lastCycleTime: 	5832294

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5832273

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>runStepMethods

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@819)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(120967936) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@819)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldState>>doOneCycleNowFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	5832273

		lastStepMessage: 	nil

		lastCycleTime: 	5832294

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5832273

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldState>>doOneCycleFor:

	Receiver: a WorldState

	Arguments and temporary variables: 

		aWorld: 	a WorldMorph(562956288) [world]

	Receiver's instance variables: 

		hands: 	an Array(a HandMorph(58125568))

		viewBox: 	(0@0) corner: (1584@819)

		canvas: 	a FormCanvas on: DisplayScreen(1584x819x32)

		damageRecorder: 	a DamageRecorder

		stepList: 	a Heap(StepMessage(#stepAt: -> a TransferMorph(687422208))(a Transfer...etc...

		lastStepTime: 	5832273

		lastStepMessage: 	nil

		lastCycleTime: 	5832294

		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(621142784)))

		lastAlarmTime: 	5832273

		menuBuilder: 	a PragmaMenuBuilder ( nil ) 

		activeHand: 	a HandMorph(58125568)





WorldMorph>>doOneCycle

	Receiver: a WorldMorph(562956288) [world]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		bounds: 	(0@0) corner: (1584@819)

		owner: 	nil

		submorphs: 	an Array(a GLMSystemWindow(120967936) a NautilusWindow(766524672) a ...etc...

		fullBounds: 	(0@0) corner: (1584@819)

		color: 	(Color r: 0.295 g: 0.295 b: 0.295 alpha: 1.0)

		extension: 	a MorphExtension (114091520) [other:  (dragEnabled -> true) (dropEna...etc...

		borderWidth: 	0

		borderColor: 	(Color r: 0.705 g: 0.705 b: 0.705 alpha: 1.0)

		backgroundMorph: 	nil

		worldState: 	a WorldState

		griddingOn: 	nil

		osWindow: 	nil

		session: 	nil





WorldMorph class>>doOneCycle

	Receiver: WorldMorph

	Arguments and temporary variables: 



	Receiver's instance variables: 

		superclass: 	PasteUpMorph

		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...

		format: 	65549

		layout: 	a FixedLayout

		instanceVariables: 	nil

		organization: 	a ClassOrganization

		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}

		name: 	#WorldMorph

		classPool: 	a Dictionary(#ExtraWorldList->#() )

		sharedPools: 	an OrderedCollection()

		environment: 	a SystemDictionary(lots of globals)

		category: 	#'Morphic-Core-Worlds'

		traitComposition: 	{}

		localSelectors: 	nil

		announcer: 	nil





[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

	Receiver: a MorphicUIManager

	Arguments and temporary variables: 



	Receiver's instance variables: 

		interactiveParser: 	nil

		activeTranscript: 	nil





[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]

	Arguments and temporary variables: 



	Receiver's instance variables: 

		outerContext: 	MorphicUIManager>>spawnNewProcess

		startpc: 	65

		numArgs: 	0







--- The full stack ---

Random(Object)>>doesNotUnderstand: #source

UndefinedObject>>DoIt

OpalCompiler>>evaluate

RubSmalltalkEditor>>evaluate:andDo:

RubSmalltalkEditor>>highlightEvaluateAndDo:

GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>popupPrint

MorphicAlarm(MessageSend)>>value

MorphicAlarm>>value:

WorldState>>triggerAlarmsBefore:

WorldState>>runLocalStepMethodsIn:

WorldState>>runStepMethodsIn:

WorldMorph>>runStepMethods

WorldState>>doOneCycleNowFor:

WorldState>>doOneCycleFor:

WorldMorph>>doOneCycle

WorldMorph class>>doOneCycle

[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess

-------------------------------------------------------------------------------



